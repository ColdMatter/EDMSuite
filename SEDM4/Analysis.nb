(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    105833,       2511]
NotebookOptionsPosition[     99084,       2384]
NotebookOutlinePosition[     99480,       2401]
CellTagsIndexPosition[     99437,       2398]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SEDM4 Analysis", "Title",
 CellChangeTimes->{3.4229606989519997`*^9, 
  3.779617279083148*^9},ExpressionUUID->"a59b0dbc-8af1-4b63-bb80-\
4170e5c2f7f9"],

Cell["\<\
This package has the analysis code proper in it. It defines functions that \
take blocks and produces analysis results.\
\>", "Text",
 CellChangeTimes->{
  3.7801381635744553`*^9},ExpressionUUID->"f882a2d6-8b92-4a67-a65a-\
fd386faf6d57"],

Cell[CellGroupData[{

Cell["Package starts", "Section",ExpressionUUID->"71ab4cc4-329b-4b32-bcce-8f89e4a775c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{
   "\"\<SEDM4`Analysis`\>\"", ",", "\"\<SEDM4`EDMSuite`\>\"", ",", 
    "\"\<SEDM4`Polarisation`\>\"", ",", "\"\<SEDM4`Database`\>\"", ",", 
    "\"\<SEDM4`Blind`\>\"", ",", "\"\<SEDM4`Statistics`\>\"", ",", 
    "\"\<NETLink`\>\"", ",", "\"\<JLink`\>\""}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.394340993387*^9, 3.394340994237*^9}, {3.394429937999*^9,
   3.39442995612*^9}, {3.422960692528*^9, 3.422960704167*^9}, {
  3.422962988383*^9, 3.422962992877*^9}, {3.779686128833453*^9, 
  3.779686143100524*^9}},
 CellLabel->
  "In[473]:=",ExpressionUUID->"40c034a3-5d6d-4643-9c16-36ef5f2e3e16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"weightedMean", "::", "usage"}], "=", 
   "\"\<Takes  a list of {value, error} pairs and calculates the weighted \
mean.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"integrateTOF", "::", "usage"}], "=", 
   "\"\<Takes a block and integrates to TOF profiles for the specified \
detector. The Boolean parameter returnIntegral determines whether the \
returned values are the integrals (in V \[Mu]s) or the average values (in V).\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAverageBG", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPulseTiming", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGateTiming", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"integrateTOFBackSubtract", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"extractNoiseData", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getChannelNoisePPM", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"analyseBlock", "::", "usage"}], "=", 
   "\"\<This function take a block and an extraction function and analyses \
the block.The extraction function is applied to the block and is expected to \
return a list of detectorDatas.The detector data is format is defined by \
integrateTOF.This is the usual way to generate detector data,but other ways \
can be plugged in if you like-for instance extracting data from the single \
point values instead of the TOFs.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generatePulsedRFGates", "::", "usage"}], "=", 
    "\"\<Calculates the correct gates to exclude molecules more than a given \
distance from the guard plate centres. The centres are in microseconds, the \
keep lengths in m. Molecules are selected symmetrically around the centre \
position. The offset parameter is to deal with a bug in the acquisition \
software before September 2005. If in doubt, it should be set to zero.\>\""}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"basis", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edmWaveform", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"boolSign", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractPhysicalQuantities", "::", "usage"}], "=", "\"\<\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cField", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edmFactor", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edmSign", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rawEDM", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rawEDMErr", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"correctedEDM", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"correctedEDMErr", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"counts", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"contrast", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sn", "::", "usage"}], "=", "\"\<\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"extractSummaryData", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"correctBlock", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdzVso63EAB/A/QsfxwClPjntrzsHDTLbGUX8LIR40dY7QLNM5ixEKD3KU
B2ElsbaSmai5ZHtwHo7LaLlvRkSuuQ7/8eB2pFDn9/09fPs8fPv2jVBU5ik9
GYYJJ4HOkDeTJptjG5ULI1Bkbp6FpSXSOVjW8bwJk7x/7sM6qzBWKuNY2Xl+
HJS7ugXw6X03HpL+PYOoU/dRm1QB5kyi+lMdtXiSp80mWqrnqV8KpZNLvzlW
EfBCbeAeTmD51ZYL2o1/I5eJlxvpUdBqaBNDhpFLIF8wbYC5itp+KJkw2eFW
TqQDCoWju/D6dWgPpsorPqwQ1xwvVLsxJAbyfJqpA2njIrhdHyheofvKglVi
1MER1bTINzvof6wFdtq+fb4nJh9LqQ8Gy1yDp5vdsWpsUDc8otIHudlf1u9q
eKqWt8JBvkgDL5T3PdDYEqqFVb3Bzmu9m62u8VuHubopb47442yJ2nVxnAgr
ZB5ieDORlQJXg4uo0WF2l9/XW3am/c0N6xMOHz8SjfvafzDc1+vOn/hnrI/6
H54fDuk=
  "],ExpressionUUID->"7a5cbff9-7f49-4cf6-bfa0-5c2bd9dcbd43"],

Cell[CellGroupData[{

Cell["Exposed package variables", "Subsection",ExpressionUUID->"84103005-c40e-4959-9496-8674e239bdec"],

Cell[BoxData[""], "Input",
 InitializationCell->
  True,ExpressionUUID->"21c06b5a-fbe2-4e50-9f8b-ad7aca1d0e34"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private", "Section",ExpressionUUID->"ce078900-2f75-42de-a665-3183f4611d33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"22ab6b4f-be7a-4d20-8fd7-eabcbffdd909"],

Cell[CellGroupData[{

Cell["Local Constants", "Subsection",ExpressionUUID->"42f9c215-a5f6-4323-9168-b8e421c4f64e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"electronCharge", "=", 
   RowBox[{"1.6022", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "19"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bohrMagneton", "=", 
   RowBox[{"9.274", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "24"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hbar", "=", 
   RowBox[{"1.05457", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saturatedEffectiveField", "=", 
   RowBox[{"26", "*", 
    SuperscriptBox["10", "9"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plateSpacing", "=", "1.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"curveHalfWidthCurrent", "=", " ", "0.647"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"1260", " ", "us", " ", "0.49265"}], "*)"}], ";", 
   RowBox[{"(*", 
    RowBox[{"long", " ", "machine", " ", "0.5362"}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{"Short", " ", "Machine", " ", "0.665"}], "*)"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "should", " ", "be", " ", "half", " ", "the", " ", "ideal", " ", "DB", 
     " ", "step"}], "*)"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kMachineLength", "=", "1.3"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kRF1Ratio", "=", 
   RowBox[{"1.103", "*", "2.31"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kRF2Ratio", "=", "1.103"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.453453423656*^9, 3.453453423835*^9}, 
   3.4534534863570004`*^9, {3.453460587227*^9, 3.45346060716*^9}, 
   3.4564872349519997`*^9, {3.4658068215439997`*^9, 3.465806823211*^9}, {
   3.4658068639*^9, 3.4658068744119997`*^9}, {3.466155489454*^9, 
   3.466155494835*^9}, {3.574435262251036*^9, 3.5744352683712964`*^9}, {
   3.5796136446649437`*^9, 3.579613664736951*^9}, {3.5796144342768974`*^9, 
   3.579614443540824*^9}, {3.5796145227597446`*^9, 3.5796145673692055`*^9}, {
   3.5835699441446905`*^9, 3.5835699642787037`*^9}, {3.728387886019231*^9, 
   3.728387886890231*^9}, 3.779686175697801*^9, {3.780142835869749*^9, 
   3.7801428588859797`*^9}},ExpressionUUID->"24c2488e-3376-40f7-8294-\
bc9318b08602"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsection",ExpressionUUID->"2cdbaeb9-b601-440b-a740-df2ea571bb74"],

Cell[BoxData[""], "Input",
 InitializationCell->
  True,ExpressionUUID->"cdcc88e7-2a93-4b3d-875c-e6a2be4f7b93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",ExpressionUUID->"d0a3975d-06cb-4d5c-9492-6e79e1c7f754"],

Cell[CellGroupData[{

Cell["Helper functions", "Subsection",ExpressionUUID->"d1f09543-d1e7-4113-94ac-6344a5c42be9"],

Cell["\<\
This generates a switching waveform from a waveform code. The code is passed \
as a list of True or False values.\
\>", "Text",ExpressionUUID->"2d49c7b6-a18b-4979-be58-bc8b3444a1fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"basis", "[", 
    RowBox[{"bit_", ",", " ", "length_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"Table", "[", " ", 
         RowBox[{"1", ",", " ", 
          RowBox[{"{", 
           SuperscriptBox["2", 
            RowBox[{"bit", "-", "1"}]], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"{", 
           SuperscriptBox["2", 
            RowBox[{"bit", "-", "1"}]], "}"}]}], "]"}]}], "}"}], " ", ",", 
      " ", 
      RowBox[{"{", 
       FractionBox["length", 
        RowBox[{" ", 
         SuperscriptBox["2", "bit"]}]], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"edmWaveform", "[", "code_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "numWave", "}"}], ",", 
      RowBox[{
       RowBox[{"numWave", "=", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", " ", "=", " ", "1"}], 
          RowBox[{"Length", "[", "code", "]"}]], " ", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{
           "code", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           ",", " ", 
           RowBox[{"basis", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "code", "]"}], "-", " ", "i", "+", "1"}],
              ",", " ", 
             SuperscriptBox["2", 
              RowBox[{"Length", "[", "code", "]"}]]}], "]"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              SuperscriptBox["2", 
               RowBox[{"Length", "[", "code", "]"}]], "}"}]}], "]"}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "\[Equal]", "1"}], ")"}], "&"}], "/@", "numWave"}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boolSign", "[", "bool_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"bool", ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"904499bb-ca48-4090-8050-108bbca0ba86"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions that extract data from the block", "Subsection",ExpressionUUID->"03540a33-4817-4f87-aee2-190fa0d45693"],

Cell["\<\
Takes a block and integrates to TOF profiles for the specified detector. The \
Boolean parameter returnIntegral determines whether the returned values are \
the integrals (in V \[Mu]s) or the average values (in V).\
\>", "Text",ExpressionUUID->"59a7d770-dfb4-4e29-9cae-35f98e9fea1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"integrateTOF", "[", 
    RowBox[{
    "block_", ",", "detector_Integer", ",", "gateStart_Integer", ",", 
     "gateEnd_Integer", ",", "returnIntegral_", ",", "detectorName_String"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gatedData", ",", "gatePeriod", ",", "dat", ",", "cal"}], "}"}],
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dat", "=", 
       RowBox[{"If", "[", 
        RowBox[{"returnIntegral", ",", "\[IndentingNewLine]", 
         RowBox[{"gatedData", "=", 
          RowBox[{"block", "@", 
           RowBox[{"GetTOFIntegralArray", "[", 
            RowBox[{"detector", ",", "gateStart", ",", "gateEnd"}], "]"}]}]}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"gatedData", "=", 
          RowBox[{"block", "@", 
           RowBox[{"GetTOFMeanArray", "[", 
            RowBox[{"detector", ",", "gateStart", ",", "gateEnd"}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cal", "=", 
       RowBox[{"block", "@", 
        RowBox[{
         RowBox[{"Points", "[", "0", "]"}], "@", 
         RowBox[{"Shot", "@", 
          RowBox[{
           RowBox[{"TOFs", "[", "detector", "]"}], "@", 
           "Calibration"}]}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<name\>\"", "\[Rule]", "detectorName"}], ",", 
        RowBox[{"\"\<data\>\"", "\[Rule]", "dat"}], ",", 
        RowBox[{"\"\<calibration\>\"", "\[Rule]", "cal"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3991195405620003`*^9, 3.399119544988*^9}, {
  3.399124354336*^9, 
  3.39912440948*^9}},ExpressionUUID->"258960af-ff12-41ca-b235-4fbe3ec89f1b"],

Cell["\<\
This takes a block, a detector and a gate range and it gives the signal in \
this range averaged over all points.\
\>", "Text",
 CellChangeTimes->{{3.399119025916*^9, 
  3.399119060461*^9}},ExpressionUUID->"abe28a07-085e-4017-ba83-b7eaed88b5c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getAverageBG", "[", 
   RowBox[{"block_", ",", "detector_", ",", "gateStart_", ",", "gateEnd_"}], 
   "]"}], ":=", 
  RowBox[{"Mean", "[", 
   RowBox[{"\"\<data\>\"", "/.", 
    RowBox[{"integrateTOF", "[", 
     RowBox[{
     "block", ",", "detector", ",", "gateStart", ",", "gateEnd", ",", "False",
       ",", "\"\<\>\""}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399119131359*^9, 3.399119194009*^9}, {3.399119378203*^9,
   3.399119381847*^9}},ExpressionUUID->"5c05d50c-97d4-40f7-8a46-8d98bebe6acb"],

Cell["\<\
This function integrates a TOF in a given gate window, subtracting off a \
background defined by the average of the signal in a second gate window. The \
same background is subtracted from all points in the block - it assumes the \
background is constant on the timescale of a block. It returns the same \
structure as integrateTOF with an additional entry that indicates how much \
background (in V \[Mu]s) was subtracted. This is useful for shot noise level \
calculations.\
\>", "Text",
 CellChangeTimes->{{3.399617958902*^9, 
  3.399618096054*^9}},ExpressionUUID->"b678240f-8501-4967-953f-72db485e17e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"integrateTOFBackSubtract", "[", 
   RowBox[{
   "block_", ",", "detector_", ",", "gateStart_", ",", "gateEnd_", ",", 
    "bgStart_", ",", "bgEnd_", ",", "name_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"integral", ",", "bg", ",", "newData", ",", "subbedBG"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"integral", "=", 
      RowBox[{"integrateTOF", "[", 
       RowBox[{
       "block", ",", "detector", ",", "gateStart", ",", "gateEnd", ",", 
        "True", ",", "name"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"bg", "=", 
      RowBox[{"getAverageBG", "[", 
       RowBox[{"block", ",", "detector", ",", "bgStart", ",", "bgEnd"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"subbedBG", "=", 
      RowBox[{"(", 
       RowBox[{"bg", "*", 
        RowBox[{"(", 
         RowBox[{"gateEnd", "-", "gateStart"}], ")"}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newData", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<data\>\"", "/.", "integral"}], ")"}], "-", 
       "subbedBG"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<name\>\"", "\[Rule]", "name"}], ",", 
       RowBox[{"\"\<data\>\"", "\[Rule]", "newData"}], ",", 
       RowBox[{"\"\<calibration\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"\"\<calibration\>\"", "/.", "integral"}], ")"}]}], ",", 
       RowBox[{"\"\<subtractedBG\>\"", "\[Rule]", "subbedBG"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399198546481*^9, 3.399198589142*^9}, {3.399198739968*^9,
   3.3991988785629997`*^9}, {3.399198928633*^9, 3.399198929112*^9}, {
  3.399199050215*^9, 3.399199094969*^9}, {3.39961691594*^9, 
  3.399616950543*^9}},ExpressionUUID->"dce2be38-4e0b-420f-ad5c-436248cf0ebf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions for calculating physical quantities", "Subsection",ExpressionUUID->"8bc6ff2b-2ee5-4976-a92b-68ff4e1819d0"],

Cell["\<\
These functions take the block config (and modulations) plus the extracted \
channel values and calculate physically meaningful values. Most of them are \
self-explanatory.\
\>", "Text",ExpressionUUID->"e3ead65e-e0e5-4343-8e64-c9651fc30826"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cField", "[", "dblock_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"dblock", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<ePlus\>\"", "]"}]}]}], " ", "-", " ", 
     RowBox[{"dblock", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<eMinus\>\"", "]"}]}]}]}], ")"}], "/", 
   "plateSpacing"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.422961398058*^9, 3.4229613994309998`*^9}, {
   3.422961585836*^9, 3.4229616033970003`*^9}, {3.5641310305859737`*^9, 
   3.5641310384257574`*^9}, {3.564131188623776*^9, 3.564131190774991*^9}, 
   3.7801382206542363`*^9},ExpressionUUID->"fdfa2ac6-cbe3-4e27-8327-\
dae1127fe739"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edmFactor", "[", "dblock_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dbStep", ",", "magCal"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dbStep", "=", 
      RowBox[{"dblock", "@", 
       RowBox[{"Config", "@", 
        RowBox[{
         RowBox[{"GetModulationByName", "[", "\"\<DB\>\"", "]"}], "@", 
         "Step"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"magCal", "=", 
      RowBox[{"dblock", "@", 
       RowBox[{"Config", "@", 
        RowBox[{"Settings", "[", "\"\<magnetCalibration\>\"", "]"}]}]}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "electronCharge"], 
      RowBox[{"(", 
       RowBox[{"bohrMagneton", " ", "*", " ", "dbStep", "*", "magCal", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "9"}]]}], ")"}], 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"saturatedEffectiveField", " ", 
         RowBox[{"polarisationFactor", "[", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"cField", "[", "dblock", "]"}], "]"}], "/", "1000"}], 
          "]"}]}], ")"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4229619724700003`*^9, 3.422961986417*^9}, {
   3.422962030835*^9, 3.42296210785*^9}, {3.422962239707*^9, 
   3.422962329274*^9}, {3.422962852646*^9, 3.422962853123*^9}, {
   3.45648725131*^9, 3.45648726504*^9}, {3.564131194745388*^9, 
   3.5641311983777514`*^9}, {3.7797076118997574`*^9, 3.779707614356261*^9}, {
   3.779890934698139*^9, 3.779890939507928*^9}, 
   3.780138219046962*^9},ExpressionUUID->"599e83d9-c451-46fb-b3d3-\
7c685c127603"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edmSign", "[", "dblock_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"boolSign", "[", 
    RowBox[{"dblock", "@", 
     RowBox[{"Config", "@", 
      RowBox[{"Settings", "[", "\"\<eState\>\"", "]"}]}]}], "]"}], " ", 
   RowBox[{"boolSign", "[", 
    RowBox[{"dblock", "@", 
     RowBox[{"Config", "@", 
      RowBox[{"Settings", "[", "\"\<bState\>\"", "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.422963259962*^9, 3.422963287705*^9}, 
   3.780138216118199*^9},ExpressionUUID->"d703e08a-581b-4146-8b76-\
83142d636c42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawEDM", "[", 
   RowBox[{"dblock_", ",", "gated_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"gated", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"edmFactor", "[", "dblock", "]"}], " ", 
       RowBox[{"getGatedChannel", "[", 
        RowBox[{"\"\<EDMDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], 
        "]"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"edmSign", "[", "dblock", "]"}], "SEDM4`Blind`blindEDM"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"getTOFChannelTimes", "[", 
        RowBox[{"\"\<EDMDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"edmFactor", "[", "dblock", "]"}], " ", 
          RowBox[{"getTOFChannelData", "[", 
           RowBox[{"\"\<EDMDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}],
            "]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"edmSign", "[", "dblock", "]"}], 
         "SEDM4`Blind`blindEDM"}]}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.394429846658*^9, 3.394429856443*^9}, {3.394431080439*^9,
    3.394431083135*^9}, {3.394431161756*^9, 3.394431161882*^9}, 
   3.422960695473*^9, {3.4229628670480003`*^9, 3.422962936763*^9}, {
   3.422962971401*^9, 3.4229630035810003`*^9}, {3.422963137112*^9, 
   3.422963190719*^9}, {3.422963619395*^9, 3.422963643634*^9}, {
   3.427630917731*^9, 3.427630924278*^9}, {3.4276309657609997`*^9, 
   3.4276309671940002`*^9}, {3.428241677571*^9, 3.428241679789*^9}, {
   3.4282419462320004`*^9, 3.428241956127*^9}, {3.7797078295073996`*^9, 
   3.7797078663062487`*^9}, {3.7797079043864374`*^9, 
   3.7797079080180674`*^9}, {3.7801373385347586`*^9, 3.780137347302081*^9}, {
   3.780137538533581*^9, 3.780137542797891*^9}, {3.780137606774008*^9, 
   3.7801376099023547`*^9}, {3.7801383178707705`*^9, 3.780138322325618*^9}, {
   3.780140705354293*^9, 3.7801407654026017`*^9}, {3.7803077868284845`*^9, 
   3.7803077891069584`*^9}, {3.7804003281584005`*^9, 
   3.7804003355550623`*^9}},ExpressionUUID->"c2715613-1d32-4ac8-943e-\
bed5d71b3798"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawEDMErr", "[", 
   RowBox[{"dblock_", ",", "gated_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"gated", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edmFactor", "[", "dblock", "]"}], 
     RowBox[{"getGatedError", "[", 
      RowBox[{"\"\<EDMDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edmFactor", "[", "dblock", "]"}], " ", 
     RowBox[{"getTOFChannelErrors", "[", 
      RowBox[{"\"\<EDMDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.39442988179*^9, 3.3944298836549997`*^9}, {
   3.39443108562*^9, 3.39443108683*^9}, {3.39443115924*^9, 3.394431159711*^9},
    3.4229606961949997`*^9, {3.422963326462*^9, 3.422963388535*^9}, {
   3.422963653455*^9, 3.422963680727*^9}, 3.427630933572*^9, {
   3.427630969962*^9, 3.427630987868*^9}, 3.428241967443*^9, {
   3.780137464614994*^9, 3.7801374862946706`*^9}, 3.7801375197586575`*^9, 
   3.780138213020939*^9, {3.7801383250538464`*^9, 3.780138330341942*^9}, {
   3.780140796258463*^9, 
   3.7801408504973598`*^9}},ExpressionUUID->"d8810b26-7a82-4f08-ac37-\
9b13ea47105e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctedEDM", "[", 
   RowBox[{"dblock_", ",", "gated_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"gated", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"edmFactor", "[", "dblock", "]"}], " ", 
      RowBox[{"getGatedChannel", "[", 
       RowBox[{"\"\<EDMCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}],
        "]"}]}], "+", 
     RowBox[{
      RowBox[{"edmSign", "[", "dblock", "]"}], "SEDM4`Blind`blindEDM"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"getTOFChannelTimes", "[", 
        RowBox[{
        "\"\<EDMCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], "]"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"edmFactor", "[", "dblock", "]"}], " ", 
          RowBox[{"getTOFChannelData", "[", 
           RowBox[{
           "\"\<EDMCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], 
           "]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"edmSign", "[", "dblock", "]"}], 
         "SEDM4`Blind`blindEDM"}]}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4909586944093018`*^9, 3.490958795209443*^9}, {
   3.490958837389502*^9, 3.490958838959504*^9}, {3.490958961457677*^9, 
   3.4909589629876785`*^9}, 3.560168625789092*^9, {3.560534348510393*^9, 
   3.56053438708925*^9}, {3.5605355768202114`*^9, 3.5605355834038696`*^9}, {
   3.560535866094136*^9, 3.560535868054332*^9}, {3.5605362092264457`*^9, 
   3.560536217410264*^9}, {3.560536294604983*^9, 3.5605362989734197`*^9}, {
   3.5605833137221007`*^9, 3.560583379267101*^9}, 3.5605837857551565`*^9, {
   3.560583962648844*^9, 3.5605839674173207`*^9}, {3.7801374985973845`*^9, 
   3.7801375097680597`*^9}, {3.780138176333412*^9, 3.78013821226997*^9}, {
   3.780138394799304*^9, 3.7801383985412855`*^9}, {3.780140852905749*^9, 
   3.780140881592888*^9}, {3.7803077917308865`*^9, 3.7803078003116293`*^9}, {
   3.7804003399708276`*^9, 
   3.780400342344113*^9}},ExpressionUUID->"ff536c2c-5892-42c7-9905-\
68e45c3f12a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctedEDMErr", "[", 
   RowBox[{"dblock_", ",", "gated_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"gated", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edmFactor", "[", "dblock", "]"}], " ", 
     RowBox[{"getGatedError", "[", 
      RowBox[{"\"\<EDMCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edmFactor", "[", "dblock", "]"}], " ", 
     RowBox[{"getTOFChannelErrors", "[", 
      RowBox[{"\"\<EDMCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "dblock"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4909586970393057`*^9, 3.490958701619312*^9}, {
   3.4909587349093585`*^9, 3.490958738319363*^9}, {3.4909587878094325`*^9, 
   3.4909587981194468`*^9}, {3.4909588413495073`*^9, 
   3.4909588415995073`*^9}, {3.4909589638576803`*^9, 3.4909589926077204`*^9}, 
   3.560168626865513*^9, {3.56053439328787*^9, 3.560534409329474*^9}, {
   3.5605355867212014`*^9, 3.560535589963526*^9}, {3.560535863821909*^9, 
   3.5605358648300095`*^9}, {3.5605362217997026`*^9, 
   3.5605362538759103`*^9}, {3.560536284946017*^9, 3.5605363108776097`*^9}, {
   3.5605833605341005`*^9, 3.5605833680271006`*^9}, {3.560583508512435*^9, 
   3.5605835089284763`*^9}, {3.5605835824678297`*^9, 3.560583586130196*^9}, 
   3.560583788634444*^9, {3.7801381956608047`*^9, 3.7801382108371606`*^9}, {
   3.7801384009195786`*^9, 3.780138405958005*^9}, {3.7801408849608436`*^9, 
   3.780140912873065*^9}},ExpressionUUID->"3b8bbc95-2c10-414b-a0d3-\
ac4e466ae5af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"counts", "[", 
   RowBox[{"dblock_", ",", "detector_", ",", "gated_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"gated", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"getGatedChannel", "[", 
        RowBox[{
         RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "detector", ",", "dblock"}], 
        "]"}], " ", 
       RowBox[{"dblock", "@", 
        RowBox[{"Config", "@", 
         RowBox[{"Settings", "[", "\"\<numberOfPoints\>\"", "]"}]}]}]}], 
      ")"}], "*", 
     RowBox[{"dblock", "@", 
      RowBox[{"GetCalibration", "[", "detector", "]"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"getTOFChannelData", "[", 
        RowBox[{
         RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "detector", ",", "dblock"}], 
        "]"}], " ", 
       RowBox[{"dblock", "@", 
        RowBox[{"Config", "@", 
         RowBox[{"Settings", "[", "\"\<numberOfPoints\>\"", "]"}]}]}]}], 
      ")"}], "*", 
     RowBox[{"dblock", "@", 
      RowBox[{"GetCalibration", "[", "detector", "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.422966526064*^9, 3.422966532138*^9}, {3.422966855913*^9,
   3.422966871795*^9}, {3.422971221804*^9, 3.422971232491*^9}, {
  3.422971460198*^9, 3.42297146152*^9}, {3.780138265054329*^9, 
  3.780138269844036*^9}, {3.780139589754939*^9, 3.7801395975556526`*^9}, {
  3.780139659995368*^9, 3.7801396642286243`*^9}, {3.780140920041154*^9, 
  3.780140947720728*^9}, {3.7804763961607027`*^9, 3.780476412825632*^9}, {
  3.780476444102625*^9, 
  3.7804764468037505`*^9}},ExpressionUUID->"23d0f30d-ed99-4d02-a949-\
bec140b14dcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"contrast", "[", 
   RowBox[{"dblock_", ",", "gated_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dbStep", ",", "magCal", ",", "interferometerLength", ",", "phaseStep"}],
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dbStep", "=", 
      RowBox[{"dblock", "@", 
       RowBox[{"Config", "@", 
        RowBox[{
         RowBox[{"GetModulationByName", "[", "\"\<DB\>\"", "]"}], "@", 
         "Step"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"magCal", "=", 
      RowBox[{"dblock", "@", 
       RowBox[{"Config", "@", 
        RowBox[{"Settings", "[", "\"\<magnetCalibration\>\"", "]"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"interferometerLength", "=", 
      RowBox[{
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dblock", "@", 
           RowBox[{"Config", "@", 
            RowBox[{"Settings", "[", "\"\<rf2CentreTime\>\"", "]"}]}]}], "-", 
          RowBox[{"dblock", "@", 
           RowBox[{"Config", "@", 
            RowBox[{"Settings", "[", "\"\<rf1CentreTime\>\"", "]"}]}]}]}], 
         ",", "800"}], "]"}], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phaseStep", "=", 
      FractionBox[
       RowBox[{"bohrMagneton", "*", "dbStep", "*", "magCal", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "9"}]], "*", "interferometerLength"}], "hbar"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", "\"\<DB\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dblock", ",", "gated"}], "]"}], "/", "phaseStep"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.780141838050728*^9, 3.7801418526645856`*^9}, {
   3.780142146536991*^9, 3.780142224689504*^9}, {3.780142715704217*^9, 
   3.78014283136878*^9}, {3.780142867183013*^9, 3.780142874040247*^9}, {
   3.7801429162404613`*^9, 3.7801429665522466`*^9}, {3.780476789340983*^9, 
   3.780476792199581*^9}, {3.780476859864443*^9, 3.780476863327649*^9}, {
   3.7804769124171367`*^9, 3.78047691272696*^9}, 
   3.7804770019461155`*^9},ExpressionUUID->"1992f70e-ee69-436c-ad20-\
29bf7b927ee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sn", "[", "counts_", "]"}], ":=", 
   RowBox[{"Abs", "[", 
    FractionBox["1", 
     SqrtBox["counts"]], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"351baccb-b9f7-42ef-8c18-46706fea60b0"],

Cell["\<\
This function bundles the above together and calculates all the physical \
quantities for a block. The boolean argument gated signifies whether it\
\[CloseCurlyQuote]s a gated or TOF-demodulated block.\
\>", "Text",
 CellChangeTimes->{{3.780138739211532*^9, 
  3.7801387512755675`*^9}},ExpressionUUID->"e22296b7-a73e-41b7-9032-\
71169db238fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractPhysicalQuantities", "[", 
   RowBox[{"dblock_", ",", "gated_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<rawEDM\>\"", "\[Rule]", 
     RowBox[{"rawEDM", "[", 
      RowBox[{"dblock", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rawEDMErr\>\"", "\[Rule]", 
     RowBox[{"rawEDMErr", "[", 
      RowBox[{"dblock", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<signedEDM\>\"", "\[Rule]", 
     RowBox[{
      RowBox[{"edmSign", "[", "dblock", "]"}], " ", 
      RowBox[{"rawEDM", "[", 
       RowBox[{"dblock", ",", "gated"}], "]"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<correctedEDM\>\"", "\[Rule]", 
     RowBox[{"correctedEDM", "[", 
      RowBox[{"dblock", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<correctedEDMErr\>\"", "\[Rule]", 
     RowBox[{"correctedEDMErr", "[", 
      RowBox[{"dblock", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<signedCorrectedEDM\>\"", "\[Rule]", 
     RowBox[{
      RowBox[{"edmSign", "[", "dblock", "]"}], " ", 
      RowBox[{"correctedEDM", "[", 
       RowBox[{"dblock", ",", "gated"}], "]"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<pmtCountsTopBgSubtracted\>\"", "\[Rule]", 
     RowBox[{"counts", "[", 
      RowBox[{"dblock", ",", "\"\<topProbeNoBackground\>\"", ",", "gated"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<pmtCountsBottomBgSubtractedScaled\>\"", "\[Rule]", 
     RowBox[{"counts", "[", 
      RowBox[{"dblock", ",", "\"\<bottomProbeScaled\>\"", ",", "gated"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<pmtCountsTop\>\"", "\[Rule]", 
     RowBox[{"counts", "[", 
      RowBox[{"dblock", ",", "\"\<topProbe\>\"", ",", "gated"}], "]"}]}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<pmtCountsBottom\>\"", "\[Rule]", 
     RowBox[{"counts", "[", 
      RowBox[{"dblock", ",", "\"\<bottomProbe\>\"", ",", "gated"}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<pmtLaserBackgroundTop\>\"", "\[Rule]", 
     RowBox[{"counts", "[", 
      RowBox[{"dblock", ",", "\"\<TopDetectorBackground\>\"", ",", "gated"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<pmtLaserBackgroundBottom\>\"", "\[Rule]", 
     RowBox[{"counts", "[", 
      RowBox[{
      "dblock", ",", "\"\<BottomDetectorBackground\>\"", ",", "gated"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<contrast\>\"", "\[Rule]", 
     RowBox[{"contrast", "[", 
      RowBox[{"dblock", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<polarisation\>\"", "\[Rule]", 
     RowBox[{"polarisationFactor", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"cField", "[", "dblock", "]"}], "]"}], "/", "1000"}], 
      "]"}]}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399652418021*^9, 3.399652487085*^9}, {3.399652569873*^9,
    3.3996525705880003`*^9}, {3.399652711455*^9, 3.399652712832*^9}, {
   3.42296657123*^9, 3.422966601876*^9}, {3.422966694674*^9, 
   3.4229667645150003`*^9}, {3.422966842148*^9, 3.422966842321*^9}, {
   3.4229712405360003`*^9, 3.4229712434820004`*^9}, {3.427631135733*^9, 
   3.4276312089849997`*^9}, {3.4909589073896*^9, 3.4909589799677024`*^9}, {
   3.564131426446556*^9, 3.5641314305869703`*^9}, {3.5690681090194454`*^9, 
   3.5690681565882015`*^9}, 3.569069007165251*^9, {3.5704400915097065`*^9, 
   3.5704400951250677`*^9}, 3.5740654838094234`*^9, {3.5744264414312334`*^9, 
   3.5744264430292335`*^9}, {3.5744265148332334`*^9, 3.574426515737233*^9}, {
   3.5744266860506625`*^9, 3.574426714082465*^9}, {3.780138702877164*^9, 
   3.7801387875248027`*^9}, {3.7801388557501926`*^9, 
   3.7801389531251497`*^9}, {3.7801390070535507`*^9, 3.780139102013063*^9}, {
   3.7801395227327905`*^9, 3.780139554956406*^9}, {3.780139613228326*^9, 
   3.780139648419932*^9}, {3.7801396796997924`*^9, 3.7801397583238325`*^9}, {
   3.780140996370117*^9, 3.780141095657134*^9}, {3.780142991190762*^9, 
   3.7801430004213057`*^9}, {3.7804765557376413`*^9, 
   3.7804765769649878`*^9}},ExpressionUUID->"b75263c9-969c-45c5-96a3-\
cac3892a928d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions for characterising noise", "Subsection",
 CellChangeTimes->{{3.399630242141*^9, 
  3.399630253532*^9}},ExpressionUUID->"3e04dca5-ee14-4feb-a917-8a7d29f64eab"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"extractNoiseData", "[", "dblock_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "normShotNoiseV\[Mu]sPerShot", ",", "normCal", ",", "topCal", ",", 
       "highFrequencyNormOverShotNoise", ",", "normFourier", ",", 
       "normShotNoisePPMPerChannel", ",", "topShotNoiseV\[Mu]sPerShot", ",", 
       "topShotNoisePPMPerChannel"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"normCal", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "==", "0.08928571428571429`"}], ",", 
             FractionBox["1", 
              RowBox[{"1.9", " ", "8.5"}]], ",", "#"}], "]"}], "&"}], "[", 
          RowBox[{"dblock", "@", 
           RowBox[{"DetectorCalibrations", "[", "\"\<norm\>\"", "]"}]}], 
          "]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"topCal", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "==", "0.14492753623188406`"}], ",", 
             FractionBox["1.97", "6.28"], ",", "#"}], "]"}], "&"}], "[", 
          RowBox[{"dblock", "@", 
           RowBox[{"DetectorCalibrations", "[", "\"\<top\>\"", "]"}]}], "]"}],
          ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"normFourier", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{"Length", "[", "#", "]"}], "2"], "]"}]}], "]"}], "&"}], 
        "[", 
        RowBox[{"dblock", "@", 
         RowBox[{"NormFourier", "@", "FFT"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"normShotNoiseV\[Mu]sPerShot", "=", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "normCal"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"getChannel", "[", 
             RowBox[{
              RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<norm\>\"", ",", 
              "dblock"}], "]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dblock", "@", 
               RowBox[{"DemodulationConfig", "@", 
                RowBox[{
                 RowBox[{
                 "GatedDetectorExtractSpecs", "[", "\"\<norm\>\"", "]"}], "@",
                  "Background"}]}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dblock", "@", 
                RowBox[{"DemodulationConfig", "@", 
                 RowBox[{
                  RowBox[{
                  "GatedDetectorExtractSpecs", "[", "\"\<norm\>\"", "]"}], 
                  "@", "GateHigh"}]}]}], "-", 
               RowBox[{"dblock", "@", 
                RowBox[{"DemodulationConfig", "@", 
                 RowBox[{
                  RowBox[{
                  "GatedDetectorExtractSpecs", "[", "\"\<norm\>\"", "]"}], 
                  "@", "GateLow"}]}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"highFrequencyNormOverShotNoise", "=", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{"normFourier", ",", 
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{"Length", "[", "normFourier", "]"}], "4"], "]"}]}], 
          "]"}], "]"}], "/", "normShotNoiseV\[Mu]sPerShot"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normShotNoisePPMPerChannel", "=", 
       RowBox[{
        SuperscriptBox["10", "6"], 
        RowBox[{"normShotNoiseV\[Mu]sPerShot", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"getChannel", "[", 
            RowBox[{
             RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<norm\>\"", ",", 
             "dblock"}], "]"}], 
           RowBox[{"\[Sqrt]", 
            RowBox[{"dblock", "@", 
             RowBox[{"Config", "@", 
              RowBox[{
              "Settings", "[", "\"\<numberOfPoints\>\"", "]"}]}]}]}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"topShotNoiseV\[Mu]sPerShot", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{" ", 
          RowBox[{"getChannel", "[", 
           RowBox[{
            RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<top\>\"", ",", 
            "dblock"}], "]"}]}], "topCal"]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"topShotNoisePPMPerChannel", "=", 
       RowBox[{
        SuperscriptBox["10", "6"], 
        RowBox[{"topShotNoiseV\[Mu]sPerShot", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"getChannel", "[", 
            RowBox[{
             RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<top\>\"", ",", 
             "dblock"}], "]"}], 
           RowBox[{"\[Sqrt]", 
            RowBox[{"dblock", "@", 
             RowBox[{"Config", "@", 
              RowBox[{
              "Settings", "[", "\"\<numberOfPoints\>\"", "]"}]}]}]}]}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<normFourier\>\"", "\[Rule]", "normFourier"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "\"\<normShotNoiseV\[Mu]sPerShot\>\"", "\[Rule]", 
         "normShotNoiseV\[Mu]sPerShot"}], ",", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<hfNormOverShotNoise\>\"", "\[Rule]", 
         "highFrequencyNormOverShotNoise"}], ",", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<normShotNoisePPMPerChannel\>\"", "\[Rule]", 
         "normShotNoisePPMPerChannel"}], ",", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<topShotNoisePPMPerChannel\>\"", "\[Rule]", 
         "topShotNoisePPMPerChannel"}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399630257329*^9, 3.399630275947*^9}, {3.399630314347*^9,
    3.399630314494*^9}, {3.3996305427980003`*^9, 3.399630620726*^9}, {
   3.399631323039*^9, 3.399631381583*^9}, {3.399631430204*^9, 
   3.399631440315*^9}, {3.399631498167*^9, 3.399631733013*^9}, {
   3.3996339154969997`*^9, 3.399633940612*^9}, {3.399634023756*^9, 
   3.399634079347*^9}, {3.399634513954*^9, 3.399634595808*^9}, {
   3.399634686085*^9, 3.399634881748*^9}, {3.399636594352*^9, 
   3.399636602449*^9}, {3.399637623574*^9, 3.399637807308*^9}, {
   3.399637862612*^9, 3.399637864785*^9}, {3.399638239711*^9, 
   3.3996383022130003`*^9}, {3.3996387861730003`*^9, 3.399638819499*^9}, {
   3.399638870599*^9, 3.399638906815*^9}, {3.399639479501*^9, 
   3.3996395043529997`*^9}, {3.399639864973*^9, 3.399639869743*^9}, {
   3.399639923197*^9, 3.399639924578*^9}, {3.399639964094*^9, 
   3.399639988924*^9}, {3.39964003351*^9, 3.3996400381949997`*^9}, {
   3.399640425613*^9, 3.399640429291*^9}, {3.3998715317470627`*^9, 
   3.399871543227211*^9}, {3.3998723931801977`*^9, 3.399872430333913*^9}, {
   3.399877873233*^9, 3.3998778926*^9}, 3.399925172215*^9, {
   3.4003220773929996`*^9, 3.400322125532*^9}, {3.42297149316*^9, 
   3.4229715454230003`*^9}, {3.4229716454*^9, 3.422971645926*^9}, {
   3.423044946042*^9, 3.423045042135*^9}, {3.4230452384309998`*^9, 
   3.4230452645220003`*^9}, {3.42304539376*^9, 3.4230454004*^9}, {
   3.4230456296359997`*^9, 3.4230456318450003`*^9}, {3.423045703789*^9, 
   3.423045755245*^9}, {3.423045791865*^9, 3.4230457955*^9}, {
   3.423047059422*^9, 3.423047088112*^9}, {3.423047135389*^9, 
   3.423047335472*^9}, {3.42961678765*^9, 3.42961679375*^9}, {
   3.78013985679568*^9, 
   3.7801398595479965`*^9}},ExpressionUUID->"663957de-96a7-4a26-a48e-\
68ff80325b38"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"getChannelNoisePPM", "[", 
    RowBox[{"dblock_", ",", "switches_", ",", "detector_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["10", "6"], 
    FractionBox[
     RowBox[{"getError", "[", 
      RowBox[{"switches", ",", "detector", ",", "dblock"}], "]"}], 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "detector", ",", "dblock"}], 
      "]"}]]}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.39963814704*^9, 3.399638179926*^9}, {
  3.3996405841870003`*^9, 3.3996406035220003`*^9}, {3.399640685975*^9, 
  3.399640687315*^9}, {3.423047386799*^9, 3.423047431543*^9}, {
  3.7801398615563383`*^9, 
  3.780139864043953*^9}},ExpressionUUID->"62a71937-9e3e-4156-aca0-\
e11b1f4a3566"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting it all together", "Subsection",ExpressionUUID->"d9890faf-93f6-493d-9ddf-123d9e5a2420"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"analyseBlock", "[", 
    RowBox[{"dblock_", ",", "gated_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "physicalQuantities", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"physicalQuantities", "=", 
       RowBox[{"extractPhysicalQuantities", "[", 
        RowBox[{"dblock", ",", "gated"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"noiseDat", "=", 
         RowBox[{"extractNoiseData", "[", "dblock", "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<analysisResults\>\"", "\[Rule]", "physicalQuantities"}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3996301440109997`*^9, 3.399630198218*^9}, {
  3.3996305741800003`*^9, 3.399630575209*^9}, {3.399637857637*^9, 
  3.399637858193*^9}, {3.4230474387349997`*^9, 3.423047498605*^9}, {
  3.570354522881441*^9, 3.570354525610714*^9}, {3.780139947907954*^9, 
  3.780139968506755*^9}},ExpressionUUID->"6d82bf9e-5775-4282-8e2a-\
07a3a7bafcb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractSummaryData", "[", 
   RowBox[{"dbl_", ",", "abl_", ",", "gated_"}], "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<EMag\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<E\>\"", "}"}], ",", "\"\<magnetometer\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SIGMag\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<magnetometer\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BMag\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<B\>\"", "}"}], ",", "\"\<magnetometer\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<EMagErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<E\>\"", "}"}], ",", "\"\<magnetometer\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SIGMagErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<magnetometer\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BMagErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<B\>\"", "}"}], ",", "\"\<magnetometer\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BDBMag\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
       "\"\<magnetometer\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<BDBMagErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
       "\"\<magnetometer\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\"\<PhaseLockFrequency\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<PhaseLockFrequency\>\"", 
       ",", "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ENorthCurrent\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<E\>\"", "}"}], ",", "\"\<NorthCurrent\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ESouthCurrent\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<E\>\"", "}"}], ",", "\"\<SouthCurrent\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ENorthCurrentErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<E\>\"", "}"}], ",", "\"\<NorthCurrent\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ESouthCurrentErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<E\>\"", "}"}], ",", "\"\<SouthCurrent\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cSIGtop\>\"", "->", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<topProbeNoBackground\>\"",
        ",", "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cSIGtopErr\>\"", "->", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<topProbeBoBackground\>\"",
        ",", "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cSIGbottom\>\"", "->", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<bottomProbeScaled\>\"", 
       ",", "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cSIGbottomErr\>\"", "->", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", "\"\<bottomProbeScaled\>\"", 
       ",", "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cLaserBackgroundtop\>\"", "->", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", 
       "\"\<TopDetectorBackground\>\"", ",", "dbl", ",", "gated"}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cLaserBackgroundtopErr\>\"", "->", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", 
       "\"\<TopDetectorBackground\>\"", ",", "dbl", ",", "gated"}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cLaserBackgroundbottom\>\"", "->", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", 
       "\"\<BottomDetectorBackground\>\"", ",", "dbl", ",", "gated"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cLaserBackgroundbottomErr\>\"", "->", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<SIG\>\"", "}"}], ",", 
       "\"\<BottomDetectorBackground\>\"", ",", "dbl", ",", "gated"}], 
      "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1F\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF1F\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2F\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF2F\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1A\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF1A\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2A\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF2A\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1FErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF1F\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2FErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF2F\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1AErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF1A\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2AErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", "\"\<RF2A\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
        "dbl", ",", "gated"}], "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1FDB\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1F\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2FDB\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2F\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1FE\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1F\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2FE\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2F\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1AE\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1A\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2AE\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2A\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1AB\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1A\>\"", ",", "\"\<B\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2AB\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2A\>\"", ",", "\"\<B\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1FEDB\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1F\>\"", ",", "\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}],
         ",", "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2FEDB\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getChannel", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2F\>\"", ",", "\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}],
         ",", "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1FDBErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1F\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2FDBErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2F\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1FEErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1F\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2FEErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2F\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1AEErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1A\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2AEErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2A\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1ABErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1A\>\"", ",", "\"\<B\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2ABErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2A\>\"", ",", "\"\<B\>\""}], "}"}], ",", 
        "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF1FEDBErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF1F\>\"", ",", "\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}],
         ",", "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cRF2FEDBErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"getError", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<RF2F\>\"", ",", "\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}],
         ",", "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}], ")"}]}],
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\"\<cEB\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cEBErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cEBDB\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}], 
       ",", "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cEBDBErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}], 
       ",", "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cDB\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<DB\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", "dbl",
        ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cDBErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<DB\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", "dbl",
        ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cB\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<B\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", "dbl", 
       ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cBErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<B\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", "dbl", 
       ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<cEDB\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cEDBErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<E\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cBDB\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cBDBErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", ",", "\"\<DB\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\"\<signedEDM\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"\"\<signedEDM\>\"", "/.", 
       RowBox[{"(", 
        RowBox[{"\"\<analysisResults\>\"", "/.", "abl"}], ")"}]}], ")"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rawEDMErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"\"\<rawEDMErr\>\"", "/.", 
       RowBox[{"(", 
        RowBox[{"\"\<analysisResults\>\"", "/.", "abl"}], ")"}]}], ")"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<signedCorrectedEDM\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"\"\<signedCorrectedEDM\>\"", "/.", 
       RowBox[{"(", 
        RowBox[{"\"\<analysisResults\>\"", "/.", "abl"}], ")"}]}], ")"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<correctedEDMErr\>\"", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"\"\<correctedEDMErr\>\"", "/.", 
       RowBox[{"(", 
        RowBox[{"\"\<analysisResults\>\"", "/.", "abl"}], ")"}]}], ")"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<edmFactor\>\"", "\[Rule]", 
     RowBox[{"edmFactor", "[", "dbl", "]"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Pi\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<PI\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", "dbl",
        ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<LF1\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", "\"\<LF1\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<LF1Err\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", "\"\<LF1\>\"", "}"}], ",", "\"\<asymmetry\>\"", ",", 
       "dbl", ",", "gated"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<LF1B\>\"", "\[Rule]", 
     RowBox[{"getChannel", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<LF1\>\"", ",", "\"\<B\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<LF1BErr\>\"", "\[Rule]", 
     RowBox[{"getError", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<LF1\>\"", ",", "\"\<B\>\""}], "}"}], ",", 
       "\"\<asymmetry\>\"", ",", "dbl", ",", "gated"}], "]"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\"\<phaseScramblerV\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<phaseScramblerV\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<bState\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<bState\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<cluster\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<cluster\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<clusterIndex\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<clusterIndex\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<eState\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<eState\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<rfState\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<rfState\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<mwState\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<mwState\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ePlus\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<ePlus\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<eMinus\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<eMinus\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<timeStamp\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"TimeStamp", "@", "Ticks"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<hour\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"TimeStamp", "@", "Hour"}]}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<rf1Step\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{
        RowBox[{"GetModulationByName", "[", "\"\<RF1F\>\"", "]"}], "@", 
        "PhysicalStep"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rf2Step\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{
        RowBox[{"GetModulationByName", "[", "\"\<RF2F\>\"", "]"}], "@", 
        "PhysicalStep"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rf1fCentre\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{
        RowBox[{"GetModulationByName", "[", "\"\<RF1F\>\"", "]"}], "@", 
        "PhysicalCentre"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rf2fCentre\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{
        RowBox[{"GetModulationByName", "[", "\"\<RF2F\>\"", "]"}], "@", 
        "PhysicalCentre"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rf1Power\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{
        RowBox[{"GetModulationByName", "[", "\"\<RF1A\>\"", "]"}], "@", 
        "PhysicalCentre"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rf2Power\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{
        RowBox[{"GetModulationByName", "[", "\"\<RF2A\>\"", "]"}], "@", 
        "PhysicalCentre"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BiasC\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{"Settings", "[", "\"\<bBiasV\>\"", "]"}]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<BStep\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"Config", "@", 
       RowBox[{
        RowBox[{"GetModulationByName", "[", "\"\<B\>\"", "]"}], "@", 
        "PhysicalStep"}]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\"\<LF1PhysicalCentre\>\"", "\[Rule]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "0"}], ",", "1547", ",", "#"}], "]"}]}], 
        "&"}], "[", 
       RowBox[{"(", 
        RowBox[{"dbl", "@", 
         RowBox[{"Config", "@", 
          RowBox[{
           RowBox[{"GetModulationByName", "[", "\"\<LF1\>\"", "]"}], "@", 
           "PhysicalCentre"}]}]}], ")"}], "]"}], ","}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\"\<BDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<BDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{"\"\<BDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF1FDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<RF1FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF1FDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{"\"\<RF1FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF2FDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<RF2FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF2FDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{"\"\<RF2FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF1FDBDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<RF1FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF1FDBDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{"\"\<RF1FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF2FDBDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<RF2FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<RF2FDBDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{"\"\<RF2FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF1FDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<ERF1FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF1FDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{"\"\<ERF1FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF2FDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<ERF2FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF2FDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<ERF2FDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF1FDBDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<ERF1FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF1FDBDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<ERF1FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF2FDBDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{"\"\<ERF2FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ERF2FDBDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{"\"\<ERF2FDBDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BRF1FCORRDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{
       "\"\<BRF1FCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BRF1FCORRDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{
       "\"\<BRF1FCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BRF2FCORRDB\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getChannel", "[", 
       RowBox[{
       "\"\<BRF2FCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BRF2FCORRDBErr\>\"", "\[Rule]", 
     RowBox[{"dbl", "@", 
      RowBox[{"getError", "[", 
       RowBox[{
       "\"\<BRF2FCORRDB\>\"", ",", "\"\<asymmetry\>\"", ",", "gated"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.56053295984054*^9, 3.5605329676733227`*^9}, {
   3.5605342459841413`*^9, 3.56053431398094*^9}, 3.5605343657361155`*^9, {
   3.5605354964101715`*^9, 3.560535540381568*^9}, {3.5605356437919083`*^9, 
   3.5605356526087894`*^9}, {3.560535705146043*^9, 3.5605357314256706`*^9}, {
   3.5605357866921964`*^9, 3.560535856854212*^9}, {3.5605367478783054`*^9, 
   3.5605367607965975`*^9}, 3.5605826146100445`*^9, 3.560582684926075*^9, {
   3.560582796914273*^9, 3.5605828029188733`*^9}, {3.5605831560391006`*^9, 
   3.5605832981851006`*^9}, {3.560583388122101*^9, 3.5605833928411007`*^9}, 
   3.5605835430698905`*^9, {3.5605842467762537`*^9, 3.56058431314389*^9}, {
   3.5605843533759127`*^9, 3.5605843766122365`*^9}, {3.5605844174363184`*^9, 
   3.5605844342319975`*^9}, {3.560584827754346*^9, 3.5605849164708896`*^9}, {
   3.56058496818989*^9, 3.5605849717098894`*^9}, {3.564149785463937*^9, 
   3.564149830319422*^9}, 3.564150064020417*^9, {3.564150680757106*^9, 
   3.564150681947106*^9}, {3.564225123286659*^9, 3.5642251236926994`*^9}, {
   3.5650115220120964`*^9, 3.565011574809376*^9}, {3.5650116877476683`*^9, 
   3.565011690552949*^9}, {3.5650117356344566`*^9, 3.565011757997692*^9}, {
   3.565011907502672*^9, 3.565011938101672*^9}, {3.5650123346836724`*^9, 
   3.5650123433606725`*^9}, {3.5650124056194572`*^9, 3.565012441895085*^9}, {
   3.5650126882847214`*^9, 3.565012731138006*^9}, {3.565012972959186*^9, 
   3.565012982522142*^9}, 3.565013039244814*^9, {3.565013636714555*^9, 
   3.5650136430111847`*^9}, {3.5650139158374643`*^9, 
   3.5650139427731576`*^9}, {3.565014175697448*^9, 3.5650141994768257`*^9}, {
   3.565014611136987*^9, 3.5650146213910127`*^9}, 3.5650147430511775`*^9, {
   3.565015209434811*^9, 3.5650152396758347`*^9}, {3.5650153786347294`*^9, 
   3.5650153794968157`*^9}, {3.56501541014388*^9, 3.5650155026431293`*^9}, {
   3.565022771315952*^9, 3.565022797924612*^9}, {3.5671710003432894`*^9, 
   3.5671710275612893`*^9}, {3.5671711354098854`*^9, 3.567171138533198*^9}, {
   3.5673386060910273`*^9, 3.5673386110515237`*^9}, {3.5674362862638874`*^9, 
   3.567436298771138*^9}, {3.5674393299527063`*^9, 3.5674393352647066`*^9}, {
   3.567775788592486*^9, 3.567775864903116*^9}, {3.56777720167278*^9, 
   3.567777235345147*^9}, {3.5678459312272387`*^9, 3.5678459323913546`*^9}, {
   3.5681154261593685`*^9, 3.5681154767064233`*^9}, {3.5681158013048797`*^9, 
   3.568115803879137*^9}, {3.5681187772194414`*^9, 3.5681187988926086`*^9}, {
   3.5684592361072245`*^9, 3.568459244226037*^9}, {3.568459783568966*^9, 
   3.568459784294038*^9}, {3.568969025477518*^9, 3.568969025889542*^9}, {
   3.5689699575138283`*^9, 3.568969990835734*^9}, 3.5689707832210555`*^9, 
   3.5690685308636255`*^9, {3.5690686003555737`*^9, 3.5690686170422425`*^9}, {
   3.5690689697515097`*^9, 3.5690689724737825`*^9}, {3.570887188494335*^9, 
   3.5708871921356993`*^9}, {3.571038541752735*^9, 3.571038549037463*^9}, {
   3.57103859861142*^9, 3.5710386101955786`*^9}, {3.571050042973742*^9, 
   3.5710500713995843`*^9}, {3.571051265626995*^9, 3.5710513187873106`*^9}, {
   3.571051810101437*^9, 3.5710518130927362`*^9}, {3.5710528095463715`*^9, 
   3.5710528100654235`*^9}, {3.571052957793195*^9, 3.571052993686784*^9}, {
   3.572702768035*^9, 3.5727028326244583`*^9}, {3.5727076160547814`*^9, 
   3.572707639359112*^9}, {3.5727142060646715`*^9, 3.572714282002198*^9}, {
   3.572714332622198*^9, 3.5727143333371983`*^9}, {3.5739881734553585`*^9, 
   3.573988195651578*^9}, {3.574057397399716*^9, 3.5740574092258987`*^9}, {
   3.5744251315572243`*^9, 3.5744251374338117`*^9}, {3.574425611935257*^9, 
   3.574425626456709*^9}, {3.5744261554406023`*^9, 3.5744261616452227`*^9}, {
   3.5744262568317404`*^9, 3.5744262633132334`*^9}, {3.5744263448202333`*^9, 
   3.5744263500922337`*^9}, {3.574426719580015*^9, 3.5744267202030773`*^9}, {
   3.5744269820402584`*^9, 3.574426984585513*^9}, {3.5744272421182632`*^9, 
   3.574427273322384*^9}, {3.5750228961548896`*^9, 3.5750229969669695`*^9}, {
   3.5750351294457417`*^9, 3.575035160384862*^9}, {3.575209746362924*^9, 
   3.575209776613105*^9}, {3.576928740138962*^9, 3.576928755009449*^9}, {
   3.5769311807950125`*^9, 3.576931198179751*^9}, 3.5769313669526267`*^9, {
   3.584104303210051*^9, 3.5841043184235725`*^9}, {3.5841043511268425`*^9, 
   3.584104351324862*^9}, {3.5841052249581823`*^9, 3.5841052312081823`*^9}, {
   3.5841723069209538`*^9, 3.584172332440505*^9}, 3.584254543844068*^9, 
   3.5842591600046844`*^9, {3.5843417040304737`*^9, 3.5843417223383045`*^9}, {
   3.584786466986293*^9, 3.5847864697575703`*^9}, {3.584786907869419*^9, 
   3.5847869267927046`*^9}, {3.584787351808464*^9, 3.5847873592498074`*^9}, {
   3.58479761304422*^9, 3.584797616227538*^9}, {3.5850322975405016`*^9, 
   3.5850323021809654`*^9}, {3.5850331005247965`*^9, 
   3.5850331025079947`*^9}, {3.586605128340826*^9, 3.586605167452737*^9}, {
   3.589120097607496*^9, 3.5891201229480295`*^9}, {3.58912075741347*^9, 
   3.589120767405469*^9}, {3.5893739957756634`*^9, 3.5893740704686637`*^9}, {
   3.5896291291872773`*^9, 3.5896292268220396`*^9}, {3.589630042916641*^9, 
   3.589630048461196*^9}, {3.589634125605883*^9, 3.589634158057128*^9}, {
   3.5896342212344236`*^9, 3.5896342390994234`*^9}, {3.5898008972778263`*^9, 
   3.5898009108109617`*^9}, {3.5907537124426565`*^9, 3.590753729387952*^9}, {
   3.595334814137355*^9, 3.595334842632204*^9}, 3.5953349973106704`*^9, {
   3.5955049354313517`*^9, 3.5955049386406727`*^9}, {3.5955055194107437`*^9, 
   3.5955055221190147`*^9}, {3.5980834422707214`*^9, 3.598083488669361*^9}, {
   3.598629698840226*^9, 3.598629772561443*^9}, {3.6085431331608076`*^9, 
   3.608543164592951*^9}, {3.608543206834174*^9, 3.6085432632468147`*^9}, 
   3.6085438993184156`*^9, {3.610350683079455*^9, 3.6103506978399305`*^9}, {
   3.7801402984841957`*^9, 3.780140513252288*^9}, {3.7801411018014727`*^9, 
   3.780141103208212*^9}, {3.780141687674863*^9, 3.780141829521015*^9}, {
   3.7801430150532427`*^9, 3.78014346771692*^9}, {3.7801435013443084`*^9, 
   3.780143530853806*^9}, {3.780143566949787*^9, 3.7801437132998095`*^9}, {
   3.7801437875021205`*^9, 3.7801438705559688`*^9}, {3.780150941669476*^9, 
   3.780150996102916*^9}, {3.7801510281850033`*^9, 3.7801510499748397`*^9}, {
   3.7801510909605474`*^9, 3.780151229534186*^9}, {3.780151329534515*^9, 
   3.780151361894339*^9}},ExpressionUUID->"b2cc66b9-d273-4506-89bc-\
c5c47524e955"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctBlock", "[", 
   RowBox[{
   "summaryData_", ",", "wiggleSlope_", ",", "wiggleSlopeDB_", ",", 
    "bCorrectionSlope_", ",", "rf1PhaseSlope_", ",", "rf2PhaseSlope_", ",", 
    "offsetCorrection_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "wiggleCorr", ",", "wiggleCorrDB", ",", "bCorr", ",", "rf1PhaseCorr", 
      ",", "rf2PhaseCorr", ",", "fullyCorrectedBlockEDM"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"wiggleCorr", "=", 
      RowBox[{"wiggleSlope", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<RF1FDBNL\>\"", "/.", "summaryData"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"wiggleCorrDB", "=", 
      RowBox[{"wiggleSlopeDB", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<RF1FDBDBNL\>\"", "/.", "summaryData"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bCorr", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"bCorrectionSlope", 
         RowBox[{"(", 
          RowBox[{"\"\<E\>\"", "/.", "#"}], ")"}], 
         RowBox[{"boolSign", "[", 
          RowBox[{"\"\<eState\>\"", "/.", "#"}], "]"}]}], "&"}], "[", 
       "summaryData", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rf1PhaseCorr", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"rf1PhaseSlope", 
         RowBox[{"(", 
          RowBox[{"\"\<edmFactor\>\"", "/.", "#"}], ")"}], 
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{"\"\<rf1Step\>\"", "/.", "#"}]], ")"}], 
         RowBox[{"First", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"boolSign", "[", 
             RowBox[{"\"\<bState\>\"", "/.", "#"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"\"\<BRF1FCORRDB\>\"", "/.", "#"}], ")"}]}], ")"}], 
          "]"}], 
         RowBox[{"First", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"boolSign", "[", 
             RowBox[{"\"\<eState\>\"", "/.", "#"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"\"\<ERF1FDBNL\>\"", "/.", "#"}], ")"}]}], ")"}], 
          "]"}]}], "&"}], "[", "summaryData", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rf2PhaseCorr", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"rf2PhaseSlope", 
         RowBox[{"(", 
          RowBox[{"\"\<edmFactor\>\"", "/.", "#"}], ")"}], 
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{"\"\<rf2Step\>\"", "/.", "#"}]], ")"}], 
         RowBox[{"First", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"boolSign", "[", 
             RowBox[{"\"\<bState\>\"", "/.", "#"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"\"\<BRF2FCORRDB\>\"", "/.", "#"}], ")"}]}], ")"}], 
          "]"}], 
         RowBox[{"First", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"boolSign", "[", 
             RowBox[{"\"\<eState\>\"", "/.", "#"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"\"\<ERF2FDBNL\>\"", "/.", "#"}], ")"}]}], ")"}], 
          "]"}]}], "&"}], "[", "summaryData", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"fullyCorrectedBlockEDM", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<signedCorrectedEDMNLNormed\>\"", "/.", "summaryData"}], 
        ")"}], "-", 
       FractionBox[
        RowBox[{"wiggleCorr", "+", "wiggleCorrDB"}], "2"], "-", "bCorr", "-", 
       "rf1PhaseCorr", "-", "rf2PhaseCorr", "-", "offsetCorrection"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{"summaryData", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<wiggleCorr\>\"", "\[Rule]", "wiggleCorr"}], ",", 
         RowBox[{"\"\<wiggleCorrDB\>\"", "\[Rule]", "wiggleCorrDB"}], ",", 
         RowBox[{"\"\<bCorr\>\"", "\[Rule]", "bCorr"}], ",", 
         RowBox[{"\"\<rf1PhaseCorr\>\"", "\[Rule]", "rf1PhaseCorr"}], ",", 
         RowBox[{"\"\<rf2PhaseCorr\>\"", "\[Rule]", "rf2PhaseCorr"}], ",", 
         RowBox[{"\"\<offsetCorrection\>\"", "\[Rule]", "offsetCorrection"}], 
         ",", 
         RowBox[{
         "\"\<fullyCorrectedBlockEDM\>\"", "\[Rule]", 
          "fullyCorrectedBlockEDM"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5009852225532713`*^9, 3.5009852433133*^9}, 
   3.5009855427147207`*^9, {3.5009858141761007`*^9, 3.500985822326112*^9}, {
   3.5009863783139133`*^9, 3.500986421643974*^9}, {3.500986525534119*^9, 
   3.500986545484147*^9}, {3.500986584584202*^9, 3.500986700124364*^9}, {
   3.5012257798663826`*^9, 3.5012257892663956`*^9}, {3.5012258307064533`*^9, 
   3.501225854566487*^9}, {3.501246470474701*^9, 3.5012464793447137`*^9}, {
   3.501247089947569*^9, 3.5012471006475835`*^9}, {3.5012471888317204`*^9, 
   3.501247192021725*^9}, {3.5012474246320505`*^9, 3.5012474254320517`*^9}, {
   3.5031474855088596`*^9, 3.5031475209978895`*^9}, {3.5031480497741337`*^9, 
   3.503148236535816*^9}, {3.5031489485275393`*^9, 3.5031489699057627`*^9}, {
   3.5031500009647355`*^9, 3.503150019321786*^9}, {3.5031504012636313`*^9, 
   3.5031504134483285`*^9}, {3.503219297049405*^9, 3.5032193023097067`*^9}, {
   3.5032193528915997`*^9, 3.503219387590584*^9}, {3.50322085455649*^9, 
   3.503220896488888*^9}, {3.5032345679428506`*^9, 3.5032346182057257`*^9}, {
   3.503664676916108*^9, 3.5036646821694083`*^9}, {3.503664730171154*^9, 
   3.503664772866596*^9}, {3.503664874486408*^9, 3.503664891015354*^9}, {
   3.50366549971717*^9, 3.5036655091737103`*^9}, {3.50366554063451*^9, 
   3.503665541595565*^9}},ExpressionUUID->"7d571ac2-8d5e-4ef3-854c-\
49ed87dc6e3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gating functions", "Subsection",ExpressionUUID->"1f2845f0-94e9-4689-a919-991569e22d69"],

Cell[CellGroupData[{

Cell["Pulsed rf", "Subsubsection",ExpressionUUID->"2a716036-dfd1-44b9-8bc1-f454b14ced40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generatePulsedRFGates", "[", 
    RowBox[{
    "rf1Centre_", ",", "rf2Centre_", ",", "rf1KeepLength_", ",", 
     "rf2KeepLength_", ",", "offset_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rf1Gates", ",", "rf2Gates"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rf1Gates", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"tCut", "[", 
          RowBox[{"rf1Centre", ",", 
           FractionBox["kMachineLength", "kRF1Ratio"], ",", "kMachineLength", 
           ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], "rf1KeepLength"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rf2Gates", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"tCut", "[", 
          RowBox[{"rf2Centre", ",", 
           FractionBox["kMachineLength", "kRF2Ratio"], ",", "kMachineLength", 
           ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], "rf2KeepLength"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "-", "offset"}], ",", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "]"}], "-", "offset"}]}], "}"}], "&"}], "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"rf1Gates", ",", "rf2Gates"}], "}"}], "]"}], "]"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generatePulsedRFGates", "[", 
   RowBox[{
   "block_", ",", "rf1KeepLength_", ",", "rf2KeepLength_", ",", "offset_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "config", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"config", "=", 
      RowBox[{"extractConfig", "[", "block", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"generatePulsedRFGates", "[", 
      RowBox[{
       RowBox[{"\"\<rf1CentreTime\>\"", "/.", "config"}], ",", 
       RowBox[{"\"\<rf2CentreTime\>\"", "/.", "config"}], ",", 
       "rf1KeepLength", ",", "rf2KeepLength", ",", "offset"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"752808f9-82de-4e9e-827f-bd05ca4033ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tCut", "[", 
    RowBox[{
    "tpulse_", ",", "rfLength_", ",", "beamLength_", ",", "keepLength_"}], 
    "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      FractionBox["rfLength", "beamLength"], "-", 
      FractionBox["keepLength", "beamLength"]}]], "tpulse"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ab5ddf94-452c-415d-9891-cbffec29edd6"],

Cell["\<\
This function takes a block and a detector and returns the centre and width \
of the average molecular pulse for the block. It is used to generate gate \
timings. It fits to a Gaussian and returns the centre and the FWHM.\
\>", "Text",
 CellChangeTimes->{{3.3991249997320004`*^9, 3.39912505906*^9}, {
  3.399125305583*^9, 
  3.3991253246210003`*^9}},ExpressionUUID->"4a477eae-848a-4ce3-81ea-\
0b45ef134dfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPulseTiming", "[", 
   RowBox[{"block_", ",", "detector_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "model", ",", "tofData", ",", "centreGuess", ",", "widthGuess", ",", 
      "fit"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tofData", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"block", "[", 
          RowBox[{
           RowBox[{"GetAverageTOF", "[", "detector", "]"}], "[", "Times", 
           "]"}], "]"}], ",", 
         RowBox[{"block", "[", 
          RowBox[{
           RowBox[{"GetAverageTOF", "[", "detector", "]"}], "[", "Data", 
           "]"}], "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"model", "=", 
      RowBox[{"a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"x", "-", "b"}], 
            RowBox[{" ", "c"}]], ")"}], "2"]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"centreGuess", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"First", "/@", "tofData"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"widthGuess", "=", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{
         RowBox[{"Last", "[", "tofData", "]"}], "-", 
         RowBox[{"First", "[", "tofData", "]"}]}], "]"}], "/", "50"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"Check", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FindFit", "[", 
         RowBox[{"tofData", ",", "model", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"b", ",", "centreGuess"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "widthGuess"}], "}"}], ",", "d"}], "}"}], ",", 
          "x"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Do", " ", "something", " ", "roughly", " ", "sensible", " ", "if", 
          " ", "the", " ", "fit", " ", 
          RowBox[{"doesn", "'"}], "t", " ", "converge"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"b", "\[Rule]", "centreGuess"}], ",", 
          RowBox[{"c", "\[Rule]", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"First", "[", 
               RowBox[{"Last", "[", "tofData", "]"}], "]"}], "-", 
              RowBox[{"First", "[", 
               RowBox[{"First", "[", "tofData", "]"}], "]"}]}], ")"}]}]}]}], 
         "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<centre\>\"", "\[Rule]", "b"}], ",", 
        RowBox[{"\"\<fwhm\>\"", "\[Rule]", 
         RowBox[{"2", 
          SqrtBox[
           RowBox[{"2", 
            RowBox[{"Log", "[", "2", "]"}]}]], 
          RowBox[{"Abs", "[", "c", "]"}]}]}]}], "}"}], "/.", "fit"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.39912493598*^9, 3.3991249881289997`*^9}, {
  3.3991251066800003`*^9, 3.3991251364379997`*^9}, {3.399125198455*^9, 
  3.399125227249*^9}, {3.399125328635*^9, 3.399125510785*^9}, {
  3.3991261435690002`*^9, 3.399126164583*^9}, {3.399126264199*^9, 
  3.3991263317460003`*^9}, {3.399127223799*^9, 3.3991272474119997`*^9}, {
  3.399127498642*^9, 3.399127538059*^9}, {3.3991911825959997`*^9, 
  3.399191320567*^9}, {3.399191439*^9, 3.3991914391289997`*^9}, {
  3.3991982755150003`*^9, 3.3991983601140003`*^9}, {3.399198412428*^9, 
  3.399198481736*^9}, {3.3993674445*^9, 
  3.399367469594*^9}},ExpressionUUID->"c7b3e5a1-3f21-49f8-89e2-44b318e10423"],

Cell["\<\
This function generates a gate window by fitting the TOF pulse and selecting \
out the given fraction (which can be more than one) of the FWHM.\
\>", "Text",
 CellChangeTimes->{{3.39961791371*^9, 3.39961795626*^9}, 
   3.399620923916*^9},ExpressionUUID->"678c27bb-4ccf-4042-9c4f-eadd22b6643f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getGateTiming", "[", 
   RowBox[{"block_", ",", "detector_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Round", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<centre\>\"", "-", 
       RowBox[{"w", 
        FractionBox["\"\<fwhm\>\"", "2"]}]}], ",", 
      RowBox[{"\"\<centre\>\"", "+", 
       RowBox[{"w", 
        FractionBox["\"\<fwhm\>\"", "2"]}]}]}], "}"}], "]"}], "/.", 
   RowBox[{"getPulseTiming", "[", 
    RowBox[{"block", ",", "detector"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3991999455150003`*^9, 3.399199984725*^9}, {
  3.399200472361*^9, 
  3.399200479348*^9}},ExpressionUUID->"36cab7bd-477a-4455-a674-a7e7e1e7c804"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.570352239131585*^9, {3.57035249658683*^9, 
   3.57035249773083*^9}},ExpressionUUID->"fcf6a6f1-7d7b-4bcd-a20b-\
465532e5406b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{944, 685},
WindowMargins->{{63, Automatic}, {Automatic, 33}},
ShowSelection->True,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 157, 3, 96, "Title",ExpressionUUID->"a59b0dbc-8af1-4b63-bb80-4170e5c2f7f9"],
Cell[727, 27, 247, 6, 34, "Text",ExpressionUUID->"f882a2d6-8b92-4a67-a65a-fd386faf6d57"],
Cell[CellGroupData[{
Cell[999, 37, 88, 0, 67, "Section",ExpressionUUID->"71ab4cc4-329b-4b32-bcce-8f89e4a775c2"],
Cell[1090, 39, 693, 14, 64, "Input",ExpressionUUID->"40c034a3-5d6d-4643-9c16-36ef5f2e3e16",
 InitializationCell->True],
Cell[1786, 55, 4945, 134, 805, "Input",ExpressionUUID->"7a5cbff9-7f49-4cf6-bfa0-5c2bd9dcbd43",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6756, 193, 102, 0, 53, "Subsection",ExpressionUUID->"84103005-c40e-4959-9496-8674e239bdec"],
Cell[6861, 195, 111, 2, 44, "Input",ExpressionUUID->"21c06b5a-fbe2-4e50-9f8b-ad7aca1d0e34",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7021, 203, 81, 0, 67, "Section",ExpressionUUID->"ce078900-2f75-42de-a665-3183f4611d33"],
Cell[7105, 205, 177, 4, 44, "Input",ExpressionUUID->"22ab6b4f-be7a-4d20-8fd7-eabcbffdd909",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7307, 213, 92, 0, 53, "Subsection",ExpressionUUID->"42f9c215-a5f6-4323-9168-b8e421c4f64e"],
Cell[7402, 215, 2205, 54, 235, "Input",ExpressionUUID->"24c2488e-3376-40f7-8294-bc9318b08602",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[9644, 274, 85, 0, 53, "Subsection",ExpressionUUID->"2cdbaeb9-b601-440b-a740-df2ea571bb74"],
Cell[9732, 276, 111, 2, 44, "Input",ExpressionUUID->"cdcc88e7-2a93-4b3d-875c-e6a2be4f7b93",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9892, 284, 83, 0, 67, "Section",ExpressionUUID->"d0a3975d-06cb-4d5c-9492-6e79e1c7f754"],
Cell[CellGroupData[{
Cell[10000, 288, 93, 0, 53, "Subsection",ExpressionUUID->"d1f09543-d1e7-4113-94ac-6344a5c42be9"],
Cell[10096, 290, 192, 3, 34, "Text",ExpressionUUID->"2d49c7b6-a18b-4979-be58-bc8b3444a1fe"],
Cell[10291, 295, 2415, 70, 258, "Input",ExpressionUUID->"904499bb-ca48-4090-8050-108bbca0ba86",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[12743, 370, 119, 0, 53, "Subsection",ExpressionUUID->"03540a33-4817-4f87-aee2-190fa0d45693"],
Cell[12865, 372, 293, 4, 56, "Text",ExpressionUUID->"59a7d770-dfb4-4e29-9cae-35f98e9fea1a"],
Cell[13161, 378, 1913, 46, 254, "Input",ExpressionUUID->"258960af-ff12-41ca-b235-4fbe3ec89f1b",
 InitializationCell->True],
Cell[15077, 426, 255, 5, 34, "Text",ExpressionUUID->"abe28a07-085e-4017-ba83-b7eaed88b5c0"],
Cell[15335, 433, 574, 13, 64, "Input",ExpressionUUID->"5c05d50c-97d4-40f7-8a46-8d98bebe6acb",
 InitializationCell->True],
Cell[15912, 448, 617, 10, 100, "Text",ExpressionUUID->"b678240f-8501-4967-953f-72db485e17e6"],
Cell[16532, 460, 1921, 45, 178, "Input",ExpressionUUID->"dce2be38-4e0b-420f-ad5c-436248cf0ebf",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[18490, 510, 122, 0, 53, "Subsection",ExpressionUUID->"8bc6ff2b-2ee5-4976-a92b-68ff4e1819d0"],
Cell[18615, 512, 251, 4, 56, "Text",ExpressionUUID->"e3ead65e-e0e5-4343-8e64-c9651fc30826"],
Cell[18869, 518, 743, 18, 44, "Input",ExpressionUUID->"fdfa2ac6-cbe3-4e27-8327-dae1127fe739",
 InitializationCell->True],
Cell[19615, 538, 1770, 42, 218, "Input",ExpressionUUID->"599e83d9-c451-46fb-b3d3-7c685c127603",
 InitializationCell->True],
Cell[21388, 582, 591, 16, 44, "Input",ExpressionUUID->"d703e08a-581b-4146-8b76-83142d636c42",
 InitializationCell->True],
Cell[21982, 600, 2276, 49, 121, "Input",ExpressionUUID->"c2715613-1d32-4ac8-943e-bed5d71b3798",
 InitializationCell->True],
Cell[24261, 651, 1265, 26, 102, "Input",ExpressionUUID->"d8810b26-7a82-4f08-ac37-9b13ea47105e",
 InitializationCell->True],
Cell[25529, 679, 2161, 48, 140, "Input",ExpressionUUID->"ff536c2c-5892-42c7-9905-68e45c3f12a2",
 InitializationCell->True],
Cell[27693, 729, 1628, 30, 102, "Input",ExpressionUUID->"3b8bbc95-2c10-414b-a0d3-ac4e466ae5af",
 InitializationCell->True],
Cell[29324, 761, 1741, 43, 140, "Input",ExpressionUUID->"23d0f30d-ed99-4d02-a949-bec140b14dcf",
 InitializationCell->True],
Cell[31068, 806, 2365, 56, 256, "Input",ExpressionUUID->"1992f70e-ee69-436c-ad20-29bf7b927ee5",
 InitializationCell->True],
Cell[33436, 864, 263, 8, 68, "Input",ExpressionUUID->"351baccb-b9f7-42ef-8c18-46706fea60b0",
 InitializationCell->True],
Cell[33702, 874, 353, 7, 56, "Text",ExpressionUUID->"e22296b7-a73e-41b7-9032-71169db238fd"],
Cell[34058, 883, 4238, 83, 311, "Input",ExpressionUUID->"b75263c9-969c-45c5-96a3-cac3892a928d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[38333, 971, 174, 2, 53, "Subsection",ExpressionUUID->"3e04dca5-ee14-4feb-a917-8a7d29f64eab"],
Cell[38510, 975, 7847, 180, 664, "Input",ExpressionUUID->"663957de-96a7-4a26-a48e-68ff80325b38",
 InitializationCell->True],
Cell[46360, 1157, 808, 20, 55, "Input",ExpressionUUID->"62a71937-9e3e-4156-aca0-e11b1f4a3566",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[47205, 1182, 100, 0, 53, "Subsection",ExpressionUUID->"d9890faf-93f6-493d-9ddf-123d9e5a2420"],
Cell[47308, 1184, 1149, 26, 121, "Input",ExpressionUUID->"6d82bf9e-5775-4282-8e2a-07a3a7bafcb2",
 InitializationCell->True],
Cell[48460, 1212, 35480, 777, 2420, "Input",ExpressionUUID->"b2cc66b9-d273-4506-89bc-c5c47524e955",
 InitializationCell->True],
Cell[83943, 1991, 5884, 133, 505, "Input",ExpressionUUID->"7d571ac2-8d5e-4ef3-854c-49ed87dc6e3d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[89864, 2129, 93, 0, 53, "Subsection",ExpressionUUID->"1f2845f0-94e9-4689-a919-991569e22d69"],
Cell[CellGroupData[{
Cell[89982, 2133, 89, 0, 44, "Subsubsection",ExpressionUUID->"2a716036-dfd1-44b9-8bc1-f454b14ced40"],
Cell[90074, 2135, 2834, 78, 331, "Input",ExpressionUUID->"752808f9-82de-4e9e-827f-bd05ca4033ff",
 InitializationCell->True],
Cell[92911, 2215, 434, 14, 74, "Input",ExpressionUUID->"ab5ddf94-452c-415d-9891-cbffec29edd6",
 InitializationCell->True],
Cell[93348, 2231, 417, 8, 56, "Text",ExpressionUUID->"4a477eae-848a-4ce3-81ea-0b45ef134dfb"],
Cell[93768, 2241, 3908, 98, 337, "Input",ExpressionUUID->"c7b3e5a1-3f21-49f8-89e2-44b318e10423",
 InitializationCell->True],
Cell[97679, 2341, 303, 5, 56, "Text",ExpressionUUID->"678c27bb-4ccf-4042-9c4f-eadd22b6643f"],
Cell[97985, 2348, 719, 19, 81, "Input",ExpressionUUID->"36cab7bd-477a-4455-a674-a7e7e1e7c804",
 InitializationCell->True],
Cell[98707, 2369, 325, 9, 64, "Input",ExpressionUUID->"fcf6a6f1-7d7b-4bcd-a20b-465532e5406b",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

