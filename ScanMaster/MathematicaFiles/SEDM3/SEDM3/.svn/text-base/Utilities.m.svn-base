(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["SEDM3`Utilities`"];


getClusterFiles::usage="Returns a list of files that belong to the named cluster. It expects the files to be stored in the standard structure. It doesn't query the database - it really looks for files on your hard disk.";
getBlockFile::usage="Give it a cluster and cluster index and it'll return the filename for the block. It will only return a value if you have that block in your data root.";
StandardErrorOfSampleMean::usage="Puts the function that they inexplicably removed from 5.2 back in. Calculates the s.d. over sqrt the number of samples.";
timeStampToDateList::usage="";





Begin["`Private`"];


kDataVersionString="v3";


sedm3::noBlockFile="There is no file corresponding to that block on disk.";


getClusterFiles[clusterName_]:=FileNames[getDirectoryFromBrokenName[breakUpClusterName[#]]<>"\\"<>#<>"*.zip"]&[clusterName]


getBlockFile[clusterName_,clusterIndex_]:=Module[{files},
files=FileNames[getDirectoryFromBrokenName[breakUpClusterName[#]]<>"\\"<>#<>"_"<>ToString[clusterIndex]<>".zip"]&[clusterName];
If[Length[files] != 1
,
Message[sedm3::noBlockFile];
Abort[];
,
files[[1]]
]
]


breakUpClusterName[cluster_]:=StringCases[cluster,RegularExpression["(\\d\\d)(\\w+)(\\d\\d)(\\d\\d)"]:>{"$1","$2","$3","$4"}][[1]];

monthReps={
"Jan"->"January",
"Feb"->"February",
"Mar"->"March",
"Apr"->"April",
"May"->"May",
"Jun"->"June",
"Jul"->"July",
"Aug"->"August",
"Sep"->"September",
"Oct"->"October",
"Nov"->"November",
"Dec"->"December"
};

getDirectoryFromBrokenName[brokenName_]:=Module[{yearString},
yearString="20" <>brokenName[[3]];
Global`$dataRoot<>"\\sedm\\"<>kDataVersionString<>"\\" <>yearString<>"\\"<>(brokenName[[2]]/.monthReps)<>yearString
];

StandardErrorOfSampleMean[data_]:=StandardDeviation[data]/Sqrt[Length[data]]

timeStampToDateList[ts_]:=DateList[ts/10^7+AbsoluteTime[{1,1,1,0,0,0}]//N]


End[];
EndPackage[];
