using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using MOTMaster2.Sequence;
using System.Dynamic;


namespace MOTMaster2
{
    /// <summary>
    /// Interaction logic for SequenceDataGrid.xaml
    /// </summary>
    public partial class SequenceDataGrid : UserControl
    {
        public SequenceDataGrid()
        {
            InitializeComponent();

            sequenceDataGrid.DataContext = new SequenceStepViewModel();
        }

        private void sequenceDataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var dg = sender as DataGrid;
            var first = dg.ItemsSource.Cast<object>().FirstOrDefault() as SequenceStep;
            if (first == null) return;
            var names = first.analogValueTypes.Keys;
            foreach (var name in names)
            {
                DataGridComboBoxColumn col = new DataGridComboBoxColumn { Header = name };
                
                var resource = this.FindResource("analogProvider");
                BindingOperations.SetBinding(col, DataGridComboBoxColumn.ItemsSourceProperty, new Binding() {Source = resource });
                col.SelectedItemBinding = new Binding("analogValueTypes[" + name + "]");
                //BindingOperations.SetBinding(col, DataGridComboBoxColumn.Da, new Binding() { Source = resource });
                dg.Columns.Add(col);
       
            }
            var dignames = first.digitalValueTypes.Keys;
            foreach (var name in dignames)
            {
                DataGridComboBoxColumn col = new DataGridComboBoxColumn { Header = name };
                var resource = this.FindResource("digitalProvider");
                BindingOperations.SetBinding(col, DataGridComboBoxColumn.ItemsSourceProperty, new Binding("GetAnalogChannels("+name+")") { });
                dg.Columns.Add(col);
            }
        }

        private void sequenceDataGrid_SelectedCellsChanged(object sender, SelectedCellsChangedEventArgs e)
        {
            var dg = sender as DataGrid;
            var first = dg.ItemsSource.Cast<object>() as List<SequenceStep>;
            Console.WriteLine("debug");
        }

        private void sequenceDataGrid_CurrentCellChanged(object sender, EventArgs e)
        {
            Console.WriteLine("2");
        }
    }
}
