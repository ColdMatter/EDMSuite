#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SonOfSirCachealot
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EDMDatabase")]
	public partial class BlockDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDBBlock(DBBlock instance);
    partial void UpdateDBBlock(DBBlock instance);
    partial void DeleteDBBlock(DBBlock instance);
    partial void InsertDBTOFChannelSet(DBTOFChannelSet instance);
    partial void UpdateDBTOFChannelSet(DBTOFChannelSet instance);
    partial void DeleteDBTOFChannelSet(DBTOFChannelSet instance);
    #endregion
		
		public BlockDatabaseDataContext() : 
				base(global::SonOfSirCachealot.Properties.Settings.Default.EDMDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlockDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DBBlock> DBBlocks
		{
			get
			{
				return this.GetTable<DBBlock>();
			}
		}
		
		public System.Data.Linq.Table<DBTOFChannelSet> DBTOFChannelSets
		{
			get
			{
				return this.GetTable<DBTOFChannelSet>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DBBlocks")]
	public partial class DBBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blockID;
		
		private string _cluster;
		
		private int _clusterIndex;
		
		private bool _include;
		
		private bool _eState;
		
		private bool _bState;
		
		private bool _rfState;
		
		private double _ePlus;
		
		private double _eMinus;
		
		private System.DateTime _blockTime;
		
		private System.Data.Linq.Binary _configBytes;
		
		private EntitySet<DBTOFChannelSet> _DBTOFChannelSets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblockIDChanging(int value);
    partial void OnblockIDChanged();
    partial void OnclusterChanging(string value);
    partial void OnclusterChanged();
    partial void OnclusterIndexChanging(int value);
    partial void OnclusterIndexChanged();
    partial void OnincludeChanging(bool value);
    partial void OnincludeChanged();
    partial void OneStateChanging(bool value);
    partial void OneStateChanged();
    partial void OnbStateChanging(bool value);
    partial void OnbStateChanged();
    partial void OnrfStateChanging(bool value);
    partial void OnrfStateChanged();
    partial void OnePlusChanging(double value);
    partial void OnePlusChanged();
    partial void OneMinusChanging(double value);
    partial void OneMinusChanged();
    partial void OnblockTimeChanging(System.DateTime value);
    partial void OnblockTimeChanged();
    partial void OnconfigBytesChanging(System.Data.Linq.Binary value);
    partial void OnconfigBytesChanged();
    #endregion
		
		public DBBlock()
		{
			this._DBTOFChannelSets = new EntitySet<DBTOFChannelSet>(new Action<DBTOFChannelSet>(this.attach_DBTOFChannelSets), new Action<DBTOFChannelSet>(this.detach_DBTOFChannelSets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blockID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int blockID
		{
			get
			{
				return this._blockID;
			}
			set
			{
				if ((this._blockID != value))
				{
					this.OnblockIDChanging(value);
					this.SendPropertyChanging();
					this._blockID = value;
					this.SendPropertyChanged("blockID");
					this.OnblockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cluster", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cluster
		{
			get
			{
				return this._cluster;
			}
			set
			{
				if ((this._cluster != value))
				{
					this.OnclusterChanging(value);
					this.SendPropertyChanging();
					this._cluster = value;
					this.SendPropertyChanged("cluster");
					this.OnclusterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clusterIndex", DbType="Int NOT NULL")]
		public int clusterIndex
		{
			get
			{
				return this._clusterIndex;
			}
			set
			{
				if ((this._clusterIndex != value))
				{
					this.OnclusterIndexChanging(value);
					this.SendPropertyChanging();
					this._clusterIndex = value;
					this.SendPropertyChanged("clusterIndex");
					this.OnclusterIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_include", DbType="Bit NOT NULL")]
		public bool include
		{
			get
			{
				return this._include;
			}
			set
			{
				if ((this._include != value))
				{
					this.OnincludeChanging(value);
					this.SendPropertyChanging();
					this._include = value;
					this.SendPropertyChanged("include");
					this.OnincludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eState", DbType="Bit NOT NULL")]
		public bool eState
		{
			get
			{
				return this._eState;
			}
			set
			{
				if ((this._eState != value))
				{
					this.OneStateChanging(value);
					this.SendPropertyChanging();
					this._eState = value;
					this.SendPropertyChanged("eState");
					this.OneStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bState", DbType="Bit NOT NULL")]
		public bool bState
		{
			get
			{
				return this._bState;
			}
			set
			{
				if ((this._bState != value))
				{
					this.OnbStateChanging(value);
					this.SendPropertyChanging();
					this._bState = value;
					this.SendPropertyChanged("bState");
					this.OnbStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rfState", DbType="Bit NOT NULL")]
		public bool rfState
		{
			get
			{
				return this._rfState;
			}
			set
			{
				if ((this._rfState != value))
				{
					this.OnrfStateChanging(value);
					this.SendPropertyChanging();
					this._rfState = value;
					this.SendPropertyChanged("rfState");
					this.OnrfStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ePlus", DbType="Float NOT NULL")]
		public double ePlus
		{
			get
			{
				return this._ePlus;
			}
			set
			{
				if ((this._ePlus != value))
				{
					this.OnePlusChanging(value);
					this.SendPropertyChanging();
					this._ePlus = value;
					this.SendPropertyChanged("ePlus");
					this.OnePlusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eMinus", DbType="Float NOT NULL")]
		public double eMinus
		{
			get
			{
				return this._eMinus;
			}
			set
			{
				if ((this._eMinus != value))
				{
					this.OneMinusChanging(value);
					this.SendPropertyChanging();
					this._eMinus = value;
					this.SendPropertyChanged("eMinus");
					this.OneMinusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blockTime", DbType="DateTime NOT NULL")]
		public System.DateTime blockTime
		{
			get
			{
				return this._blockTime;
			}
			set
			{
				if ((this._blockTime != value))
				{
					this.OnblockTimeChanging(value);
					this.SendPropertyChanging();
					this._blockTime = value;
					this.SendPropertyChanged("blockTime");
					this.OnblockTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_configBytes", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary configBytes
		{
			get
			{
				return this._configBytes;
			}
			set
			{
				if ((this._configBytes != value))
				{
					this.OnconfigBytesChanging(value);
					this.SendPropertyChanging();
					this._configBytes = value;
					this.SendPropertyChanged("configBytes");
					this.OnconfigBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBBlock_DBTOFChannelSet", Storage="_DBTOFChannelSets", ThisKey="blockID", OtherKey="blockID")]
		public EntitySet<DBTOFChannelSet> DBTOFChannelSets
		{
			get
			{
				return this._DBTOFChannelSets;
			}
			set
			{
				this._DBTOFChannelSets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DBTOFChannelSets(DBTOFChannelSet entity)
		{
			this.SendPropertyChanging();
			entity.DBBlock = this;
		}
		
		private void detach_DBTOFChannelSets(DBTOFChannelSet entity)
		{
			this.SendPropertyChanging();
			entity.DBBlock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DBTOFChannelSets")]
	public partial class DBTOFChannelSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tcsID;
		
		private int _blockID;
		
		private string _detector;
		
		private System.Guid _FileID;
		
		private System.Data.Linq.Binary _tcsData;
		
		private EntityRef<DBBlock> _DBBlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntcsIDChanging(int value);
    partial void OntcsIDChanged();
    partial void OnblockIDChanging(int value);
    partial void OnblockIDChanged();
    partial void OndetectorChanging(string value);
    partial void OndetectorChanged();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    partial void OntcsDataChanging(System.Data.Linq.Binary value);
    partial void OntcsDataChanged();
    #endregion
		
		public DBTOFChannelSet()
		{
			this._DBBlock = default(EntityRef<DBBlock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tcsID
		{
			get
			{
				return this._tcsID;
			}
			set
			{
				if ((this._tcsID != value))
				{
					this.OntcsIDChanging(value);
					this.SendPropertyChanging();
					this._tcsID = value;
					this.SendPropertyChanged("tcsID");
					this.OntcsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blockID", DbType="Int NOT NULL")]
		public int blockID
		{
			get
			{
				return this._blockID;
			}
			set
			{
				if ((this._blockID != value))
				{
					if (this._DBBlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblockIDChanging(value);
					this.SendPropertyChanging();
					this._blockID = value;
					this.SendPropertyChanged("blockID");
					this.OnblockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detector", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string detector
		{
			get
			{
				return this._detector;
			}
			set
			{
				if ((this._detector != value))
				{
					this.OndetectorChanging(value);
					this.SendPropertyChanging();
					this._detector = value;
					this.SendPropertyChanged("detector");
					this.OndetectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcsData", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary tcsData
		{
			get
			{
				return this._tcsData;
			}
			set
			{
				if ((this._tcsData != value))
				{
					this.OntcsDataChanging(value);
					this.SendPropertyChanging();
					this._tcsData = value;
					this.SendPropertyChanged("tcsData");
					this.OntcsDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBBlock_DBTOFChannelSet", Storage="_DBBlock", ThisKey="blockID", OtherKey="blockID", IsForeignKey=true)]
		public DBBlock DBBlock
		{
			get
			{
				return this._DBBlock.Entity;
			}
			set
			{
				DBBlock previousValue = this._DBBlock.Entity;
				if (((previousValue != value) 
							|| (this._DBBlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DBBlock.Entity = null;
						previousValue.DBTOFChannelSets.Remove(this);
					}
					this._DBBlock.Entity = value;
					if ((value != null))
					{
						value.DBTOFChannelSets.Add(this);
						this._blockID = value.blockID;
					}
					else
					{
						this._blockID = default(int);
					}
					this.SendPropertyChanged("DBBlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
