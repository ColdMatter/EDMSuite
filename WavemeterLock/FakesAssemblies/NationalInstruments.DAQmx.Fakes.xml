<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NationalInstruments.DAQmx.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.NationalInstrumentsDAQmxDelegates">
            <summary>Contains custom delegates used for the stubs and shims of NationalInstruments.DAQmx</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIChannel">
            <summary>Shim type of NationalInstruments.DAQmx.AIChannel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannel.#ctor(NationalInstruments.DAQmx.AIChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ACExcitationFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_ACExcitationFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ACExcitationFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_ACExcitationFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ACExcitationSyncEnableGet">
            <summary>Sets the Shim of AIChannel.get_ACExcitationSyncEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ACExcitationSyncEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ACExcitationSyncEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ACExcitationWireModeGet">
            <summary>Sets the Shim of AIChannel.get_ACExcitationWireMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ACExcitationWireModeSetAIACExcitationWireMode">
            <summary>Sets the Shim of AIChannel.set_ACExcitationWireMode(AIACExcitationWireMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationChargeSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationChargeSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationChargeSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerationChargeSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationChargeSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationChargeSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationChargeSensitivityUnitsSetAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerationChargeSensitivityUnits(AIAccelerationChargeSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerationDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationFourWireDCVoltageSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationFourWireDCVoltageSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationFourWireDCVoltageSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerationFourWireDCVoltageSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationFourWireDCVoltageSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationFourWireDCVoltageSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationFourWireDCVoltageSensitivityUnitsSetAIAccelerationFourWireDCVoltageSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerationFourWireDCVoltageSensitivityUnits(AIAccelerationFourWireDCVoltageSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerationUnitsSetAIAccelerationUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerationUnits(AIAccelerationUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerometerSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_AccelerometerSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerometerSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerometerSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerometerSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerometerSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AccelerometerSensitivityUnitsSetAIAccelerometerSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerometerSensitivityUnits(AIAccelerometerSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AdcCustomTimingModeGet">
            <summary>Sets the Shim of AIChannel.get_AdcCustomTimingMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AdcCustomTimingModeSetInt64">
            <summary>Sets the Shim of AIChannel.set_AdcCustomTimingMode(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AdcTimingModeGet">
            <summary>Sets the Shim of AIChannel.get_AdcTimingMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AdcTimingModeSetAIAdcTimingMode">
            <summary>Sets the Shim of AIChannel.set_AdcTimingMode(AIAdcTimingMode value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ACExcitationFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_ACExcitationFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ACExcitationFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_ACExcitationFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ACExcitationSyncEnableGet">
            <summary>Sets the Shim of AIChannel.get_ACExcitationSyncEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ACExcitationSyncEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ACExcitationSyncEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ACExcitationWireModeGet">
            <summary>Sets the Shim of AIChannel.get_ACExcitationWireMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ACExcitationWireModeSetAIACExcitationWireMode">
            <summary>Sets the Shim of AIChannel.set_ACExcitationWireMode(AIACExcitationWireMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationChargeSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationChargeSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationChargeSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerationChargeSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationChargeSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationChargeSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationChargeSensitivityUnitsSetAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerationChargeSensitivityUnits(AIAccelerationChargeSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerationDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationFourWireDCVoltageSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationFourWireDCVoltageSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationFourWireDCVoltageSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerationFourWireDCVoltageSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationFourWireDCVoltageSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationFourWireDCVoltageSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationFourWireDCVoltageSensitivityUnitsSetAIAccelerationFourWireDCVoltageSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerationFourWireDCVoltageSensitivityUnits(AIAccelerationFourWireDCVoltageSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerationUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerationUnitsSetAIAccelerationUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerationUnits(AIAccelerationUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerometerSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_AccelerometerSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerometerSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_AccelerometerSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerometerSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_AccelerometerSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AccelerometerSensitivityUnitsSetAIAccelerometerSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_AccelerometerSensitivityUnits(AIAccelerometerSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AdcCustomTimingModeGet">
            <summary>Sets the Shim of AIChannel.get_AdcCustomTimingMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AdcCustomTimingModeSetInt64">
            <summary>Sets the Shim of AIChannel.set_AdcCustomTimingMode(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AdcTimingModeGet">
            <summary>Sets the Shim of AIChannel.get_AdcTimingMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AdcTimingModeSetAIAdcTimingMode">
            <summary>Sets the Shim of AIChannel.set_AdcTimingMode(AIAdcTimingMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AttenuationGet">
            <summary>Sets the Shim of AIChannel.get_Attenuation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AttenuationSetDouble">
            <summary>Sets the Shim of AIChannel.set_Attenuation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AutoZeroModeGet">
            <summary>Sets the Shim of AIChannel.get_AutoZeroMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AutoZeroModeSetAIAutoZeroMode">
            <summary>Sets the Shim of AIChannel.set_AutoZeroMode(AIAutoZeroMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AveragingWindowSizeGet">
            <summary>Sets the Shim of AIChannel.get_AveragingWindowSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.AveragingWindowSizeSetInt64">
            <summary>Sets the Shim of AIChannel.set_AveragingWindowSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeBalanceCoarsePotGet">
            <summary>Sets the Shim of AIChannel.get_BridgeBalanceCoarsePot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeBalanceCoarsePotSetInt32">
            <summary>Sets the Shim of AIChannel.set_BridgeBalanceCoarsePot(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeBalanceFinePotGet">
            <summary>Sets the Shim of AIChannel.get_BridgeBalanceFinePot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeBalanceFinePotSetInt32">
            <summary>Sets the Shim of AIChannel.set_BridgeBalanceFinePot(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_BridgeConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeConfigurationSetAIBridgeConfiguration">
            <summary>Sets the Shim of AIChannel.set_BridgeConfiguration(AIBridgeConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeElectricalUnitsGet">
            <summary>Sets the Shim of AIChannel.get_BridgeElectricalUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeElectricalUnitsSetAIBridgeElectricalUnits">
            <summary>Sets the Shim of AIChannel.set_BridgeElectricalUnits(AIBridgeElectricalUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeInitialRatioGet">
            <summary>Sets the Shim of AIChannel.get_BridgeInitialRatio()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeInitialRatioSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeInitialRatio(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeInitialVoltageGet">
            <summary>Sets the Shim of AIChannel.get_BridgeInitialVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeInitialVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeInitialVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeNominalResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeNominalResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeNominalResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeNominalResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgePhysicalUnitsGet">
            <summary>Sets the Shim of AIChannel.get_BridgePhysicalUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgePhysicalUnitsSetAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannel.set_BridgePhysicalUnits(AIBridgePhysicalUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgePolynomialForwardCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_BridgePolynomialForwardCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgePolynomialForwardCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgePolynomialForwardCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgePolynomialReverseCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_BridgePolynomialReverseCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgePolynomialReverseCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgePolynomialReverseCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeScaleTypeGet">
            <summary>Sets the Shim of AIChannel.get_BridgeScaleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeScaleTypeSetAIBridgeScaleType">
            <summary>Sets the Shim of AIChannel.set_BridgeScaleType(AIBridgeScaleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationAActualResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationAActualResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationAActualResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationAActualResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationAResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationAResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationAResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationAResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationASourceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationASource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationASourceSetBridgeShuntCalibrationSource">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationASource(BridgeShuntCalibrationSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationBActualResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationBActualResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationBActualResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationBActualResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationBResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationBResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationBResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationBResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationEnableGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationGainAdjustGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationGainAdjust()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationGainAdjustSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationGainAdjust(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationSelectGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationSelect()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeShuntCalibrationSelectSetAIBridgeShuntCalibrationSelect">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationSelect(AIBridgeShuntCalibrationSelect value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTableElectricalValuesGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTableElectricalValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTableElectricalValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgeTableElectricalValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTablePhysicalValuesGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTablePhysicalValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTablePhysicalValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgeTablePhysicalValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearFirstElectricalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearFirstElectricalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearFirstElectricalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearFirstElectricalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearFirstPhysicalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearFirstPhysicalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearFirstPhysicalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearFirstPhysicalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearSecondElectricalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearSecondElectricalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearSecondElectricalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearSecondElectricalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearSecondPhysicalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearSecondPhysicalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeTwoPointLinearSecondPhysicalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearSecondPhysicalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeUnitsGet">
            <summary>Sets the Shim of AIChannel.get_BridgeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.BridgeUnitsSetAIBridgeUnits">
            <summary>Sets the Shim of AIChannel.set_BridgeUnits(AIBridgeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationApplyIfExpiredGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationApplyIfExpired()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationApplyIfExpiredSetBoolean">
            <summary>Sets the Shim of AIChannel.set_CalibrationApplyIfExpired(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationDateGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationDate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationDateSetDateTime">
            <summary>Sets the Shim of AIChannel.set_CalibrationDate(DateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationDescriptionGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationDescription()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationDescriptionSetString">
            <summary>Sets the Shim of AIChannel.set_CalibrationDescription(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationEnableGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_CalibrationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationExpirationDateGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationExpirationDate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationExpirationDateSetDateTime">
            <summary>Sets the Shim of AIChannel.set_CalibrationExpirationDate(DateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationHasValidInfoGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationHasValidInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationOperatorNameGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationOperatorName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationOperatorNameSetString">
            <summary>Sets the Shim of AIChannel.set_CalibrationOperatorName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationPolynomialForwardCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationPolynomialForwardCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationPolynomialForwardCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationPolynomialForwardCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationPolynomialReverseCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationPolynomialReverseCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationPolynomialReverseCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationPolynomialReverseCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationScaleTypeGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationScaleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationScaleTypeSetAIChannelCalibrationScaleType">
            <summary>Sets the Shim of AIChannel.set_CalibrationScaleType(AIChannelCalibrationScaleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationTablePreScaledValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationTablePreScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationTablePreScaledValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationTablePreScaledValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationTableScaledValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationTableScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationTableScaledValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationTableScaledValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationVerificationAcquiredValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationVerificationAcquiredValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationVerificationAcquiredValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationVerificationAcquiredValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationVerificationReferenceValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationVerificationReferenceValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CalibrationVerificationReferenceValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationVerificationReferenceValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ChargeUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ChargeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ChargeUnitsSetAIChargeUnits">
            <summary>Sets the Shim of AIChannel.set_ChargeUnits(AIChargeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ChopEnableGet">
            <summary>Sets the Shim of AIChannel.get_ChopEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ChopEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ChopEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CouplingGet">
            <summary>Sets the Shim of AIChannel.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CouplingSetAICoupling">
            <summary>Sets the Shim of AIChannel.set_Coupling(AICoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentAcrmsUnitsGet">
            <summary>Sets the Shim of AIChannel.get_CurrentAcrmsUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentAcrmsUnitsSetAICurrentAcrmsUnits">
            <summary>Sets the Shim of AIChannel.set_CurrentAcrmsUnits(AICurrentAcrmsUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentShuntLocationGet">
            <summary>Sets the Shim of AIChannel.get_CurrentShuntLocation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentShuntLocationSetAICurrentShuntLocation">
            <summary>Sets the Shim of AIChannel.set_CurrentShuntLocation(AICurrentShuntLocation value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentShuntResistanceGet">
            <summary>Sets the Shim of AIChannel.get_CurrentShuntResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentShuntResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_CurrentShuntResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentUnitsGet">
            <summary>Sets the Shim of AIChannel.get_CurrentUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CurrentUnitsSetAICurrentUnits">
            <summary>Sets the Shim of AIChannel.set_CurrentUnits(AICurrentUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CustomScaleNameGet">
            <summary>Sets the Shim of AIChannel.get_CustomScaleName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.CustomScaleNameSetString">
            <summary>Sets the Shim of AIChannel.set_CustomScaleName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DCOffsetGet">
            <summary>Sets the Shim of AIChannel.get_DCOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DCOffsetSetDouble">
            <summary>Sets the Shim of AIChannel.set_DCOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferCustomThresholdGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferCustomThreshold()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferCustomThresholdSetInt64">
            <summary>Sets the Shim of AIChannel.set_DataTransferCustomThreshold(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferMaximumRateGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferMaximumRateSetDouble">
            <summary>Sets the Shim of AIChannel.set_DataTransferMaximumRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferMechanismGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferMechanismSetAIDataTransferMechanism">
            <summary>Sets the Shim of AIChannel.set_DataTransferMechanism(AIDataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferRequestConditionGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DataTransferRequestConditionSetAIDataTransferRequestCondition">
            <summary>Sets the Shim of AIChannel.set_DataTransferRequestCondition(AIDataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DeviceScalingCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_DeviceScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterBandpassCenterFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterBandpassCenterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterBandpassCenterFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterBandpassCenterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterBandpassWidthGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterBandpassWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterBandpassWidthSetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterBandpassWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterEnabledGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterEnabledSetBoolean">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterHighpassCutoffFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterHighpassCutoffFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterHighpassCutoffFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterHighpassCutoffFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterLowpassCutoffFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterLowpassCutoffFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterLowpassCutoffFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterLowpassCutoffFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterNotchCenterFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterNotchCenterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterNotchCenterFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterNotchCenterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterNotchWidthGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterNotchWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterNotchWidthSetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterNotchWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterOrderGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterOrder()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterOrderSetInt64">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterOrder(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterResponseGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterResponse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterResponseSetFilterResponse">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterResponse(FilterResponse value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterTypeGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DigitalFilterTypeSetFilterType">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterType(FilterType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DitherEnableGet">
            <summary>Sets the Shim of AIChannel.get_DitherEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.DitherEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_DitherEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EddyCurrentProximityProbeSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_EddyCurrentProximityProbeSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EddyCurrentProximityProbeSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_EddyCurrentProximityProbeSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EddyCurrentProximityProbeSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_EddyCurrentProximityProbeSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EddyCurrentProximityProbeSensitivityUnitsSetAIEddyCurrentProximityProbeSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_EddyCurrentProximityProbeSensitivityUnits(AIEddyCurrentProximityProbeSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EddyCurrentProximityProbeUnitsGet">
            <summary>Sets the Shim of AIChannel.get_EddyCurrentProximityProbeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EddyCurrentProximityProbeUnitsSetAIEddyCurrentProximityProbeUnits">
            <summary>Sets the Shim of AIChannel.set_EddyCurrentProximityProbeUnits(AIEddyCurrentProximityProbeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EnhancedAliasRejectionEnableGet">
            <summary>Sets the Shim of AIChannel.get_EnhancedAliasRejectionEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.EnhancedAliasRejectionEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_EnhancedAliasRejectionEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationActualValueGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationActualValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationActualValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_ExcitationActualValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationDCOrACGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationDCOrAC()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationDCOrACSetAIExcitationDCOrAC">
            <summary>Sets the Shim of AIChannel.set_ExcitationDCOrAC(AIExcitationDCOrAC value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationIdleOutputBehaviorGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationIdleOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationIdleOutputBehaviorSetExcitationIdleOutputBehavior">
            <summary>Sets the Shim of AIChannel.set_ExcitationIdleOutputBehavior(ExcitationIdleOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationSenseGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationSense()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationSenseSetAIExcitationSense">
            <summary>Sets the Shim of AIChannel.set_ExcitationSense(AIExcitationSense value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationSourceGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationSourceSetAIExcitationSource">
            <summary>Sets the Shim of AIChannel.set_ExcitationSource(AIExcitationSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationValueGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_ExcitationValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationVoltageOrCurrentGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationVoltageOrCurrent()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ExcitationVoltageOrCurrentSetAIExcitationVoltageOrCurrent">
            <summary>Sets the Shim of AIChannel.set_ExcitationVoltageOrCurrent(AIExcitationVoltageOrCurrent value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterDelayAdjustmentGet">
            <summary>Sets the Shim of AIChannel.get_FilterDelayAdjustment()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterDelayAdjustmentSetDouble">
            <summary>Sets the Shim of AIChannel.set_FilterDelayAdjustment(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterDelayGet">
            <summary>Sets the Shim of AIChannel.get_FilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterDelayUnitsGet">
            <summary>Sets the Shim of AIChannel.get_FilterDelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterDelayUnitsSetAIFilterDelayUnits">
            <summary>Sets the Shim of AIChannel.set_FilterDelayUnits(AIFilterDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterEnabledGet">
            <summary>Sets the Shim of AIChannel.get_FilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterEnabledSetBoolean">
            <summary>Sets the Shim of AIChannel.set_FilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_FilterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_FilterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterOrderGet">
            <summary>Sets the Shim of AIChannel.get_FilterOrder()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterOrderSetInt64">
            <summary>Sets the Shim of AIChannel.set_FilterOrder(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterResponseGet">
            <summary>Sets the Shim of AIChannel.get_FilterResponse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FilterResponseSetAIFilterResponse">
            <summary>Sets the Shim of AIChannel.set_FilterResponse(AIFilterResponse value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceIepeSensorSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_ForceIepeSensorSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceIepeSensorSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_ForceIepeSensorSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceIepeSensorSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ForceIepeSensorSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceIepeSensorSensitivityUnitsSetAIForceIepeSensorSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_ForceIepeSensorSensitivityUnits(AIForceIepeSensorSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceReadFromChannelGet">
            <summary>Sets the Shim of AIChannel.get_ForceReadFromChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceReadFromChannelSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ForceReadFromChannel(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceReadFromStrainChannelGet">
            <summary>Sets the Shim of AIChannel.get_ForceReadFromStrainChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceReadFromStrainChannelSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ForceReadFromStrainChannel(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ForceUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ForceUnitsSetAIForceUnits">
            <summary>Sets the Shim of AIChannel.set_ForceUnits(AIForceUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FrequencyHysteresisGet">
            <summary>Sets the Shim of AIChannel.get_FrequencyHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FrequencyHysteresisSetDouble">
            <summary>Sets the Shim of AIChannel.set_FrequencyHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FrequencyThresholdVoltageGet">
            <summary>Sets the Shim of AIChannel.get_FrequencyThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FrequencyThresholdVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_FrequencyThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FrequencyUnitsGet">
            <summary>Sets the Shim of AIChannel.get_FrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.FrequencyUnitsSetAIFrequencyUnits">
            <summary>Sets the Shim of AIChannel.set_FrequencyUnits(AIFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.GainGet">
            <summary>Sets the Shim of AIChannel.get_Gain()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.GainSetDouble">
            <summary>Sets the Shim of AIChannel.set_Gain(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ImpedanceGet">
            <summary>Sets the Shim of AIChannel.get_Impedance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ImpedanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_Impedance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputLimitsFaultDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_InputLimitsFaultDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputLimitsFaultDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_InputLimitsFaultDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputLimitsFaultDetectLowerLimitGet">
            <summary>Sets the Shim of AIChannel.get_InputLimitsFaultDetectLowerLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputLimitsFaultDetectLowerLimitSetDouble">
            <summary>Sets the Shim of AIChannel.set_InputLimitsFaultDetectLowerLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputLimitsFaultDetectUpperLimitGet">
            <summary>Sets the Shim of AIChannel.get_InputLimitsFaultDetectUpperLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputLimitsFaultDetectUpperLimitSetDouble">
            <summary>Sets the Shim of AIChannel.set_InputLimitsFaultDetectUpperLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputSourceGet">
            <summary>Sets the Shim of AIChannel.get_InputSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.InputSourceSetString">
            <summary>Sets the Shim of AIChannel.set_InputSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.IsTedsGet">
            <summary>Sets the Shim of AIChannel.get_IsTeds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LeadWireResistanceGet">
            <summary>Sets the Shim of AIChannel.get_LeadWireResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LeadWireResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_LeadWireResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LossyLsbRemovalCompressedSampleSizeGet">
            <summary>Sets the Shim of AIChannel.get_LossyLsbRemovalCompressedSampleSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LossyLsbRemovalCompressedSampleSizeSetInt64">
            <summary>Sets the Shim of AIChannel.set_LossyLsbRemovalCompressedSampleSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassCutoffFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_LowpassCutoffFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassCutoffFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_LowpassCutoffFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassEnableGet">
            <summary>Sets the Shim of AIChannel.get_LowpassEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_LowpassEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorClockSourceGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorClockSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorClockSourceSetAILowpassSwitchedCapacitorClockSource">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorClockSource(AILowpassSwitchedCapacitorClockSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorExternalClockDivisorGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorExternalClockDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorExternalClockDivisorSetInt64">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorExternalClockDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorExternalClockFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorExternalClockFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorExternalClockFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorExternalClockFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorOutputClockDivisorGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorOutputClockDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LowpassSwitchedCapacitorOutputClockDivisorSetInt64">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorOutputClockDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LvdtSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_LvdtSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LvdtSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_LvdtSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LvdtSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_LvdtSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LvdtSensitivityUnitsSetAILvdtSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_LvdtSensitivityUnits(AILvdtSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LvdtUnitsGet">
            <summary>Sets the Shim of AIChannel.get_LvdtUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.LvdtUnitsSetAILvdtUnits">
            <summary>Sets the Shim of AIChannel.set_LvdtUnits(AILvdtUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MaximumGet">
            <summary>Sets the Shim of AIChannel.get_Maximum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MaximumSetDouble">
            <summary>Sets the Shim of AIChannel.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MaximumSoundPressureLevelGet">
            <summary>Sets the Shim of AIChannel.get_MaximumSoundPressureLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MaximumSoundPressureLevelSetDouble">
            <summary>Sets the Shim of AIChannel.set_MaximumSoundPressureLevel(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MeasurementTypeGet">
            <summary>Sets the Shim of AIChannel.get_MeasurementType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MemoryMappingEnableGet">
            <summary>Sets the Shim of AIChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MicrophoneSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_MicrophoneSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MicrophoneSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_MicrophoneSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MinimumGet">
            <summary>Sets the Shim of AIChannel.get_Minimum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.MinimumSetDouble">
            <summary>Sets the Shim of AIChannel.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.OpenChannelDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_OpenChannelDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.OpenChannelDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_OpenChannelDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.OpenThermocoupleDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_OpenThermocoupleDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.OpenThermocoupleDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_OpenThermocoupleDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.OvercurrentDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_OvercurrentDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.OvercurrentDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_OvercurrentDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeOffsetNullingCalibration">
            <summary>Sets the Shim of AIChannel.PerformBridgeOffsetNullingCalibration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeOffsetNullingCalibrationBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeOffsetNullingCalibration(Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeShuntCalibrationDoubleShuntElementLocationDouble">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeShuntCalibrationDoubleShuntElementLocationDoubleBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeShuntCalibrationDoubleShuntElementLocationDoubleShuntCalibrationSelectShuntResistorSource">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeShuntCalibrationDoubleShuntElementLocationDoubleShuntCalibrationSelectShuntResistorSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeShuntCalibrationExDoubleShuntElementLocationDoubleShuntCalibrationSelectBridgeShuntCalibrationSource">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, BridgeShuntCalibrationSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformBridgeShuntCalibrationExDoubleShuntElementLocationDoubleShuntCalibrationSelectBridgeShuntCalibrationSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, BridgeShuntCalibrationSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformStrainShuntCalibrationDoubleShuntElementLocation">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformStrainShuntCalibrationDoubleShuntElementLocationBoolean">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformStrainShuntCalibrationDoubleShuntElementLocationShuntCalibrationSelectShuntResistorSource">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformStrainShuntCalibrationDoubleShuntElementLocationShuntCalibrationSelectShuntResistorSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformStrainShuntCalibrationExDoubleShuntElementLocationShuntCalibrationSelectStrainShuntCalibrationSource">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, StrainShuntCalibrationSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformStrainShuntCalibrationExDoubleShuntElementLocationShuntCalibrationSelectStrainShuntCalibrationSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, StrainShuntCalibrationSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformThermocoupleLeadOffsetNullingCalibration">
            <summary>Sets the Shim of AIChannel.PerformThermocoupleLeadOffsetNullingCalibration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PerformThermocoupleLeadOffsetNullingCalibrationBoolean">
            <summary>Sets the Shim of AIChannel.PerformThermocoupleLeadOffsetNullingCalibration(Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerCurrentScalingCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_PowerCurrentScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerCurrentSetpointGet">
            <summary>Sets the Shim of AIChannel.get_PowerCurrentSetpoint()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerCurrentSetpointSetDouble">
            <summary>Sets the Shim of AIChannel.set_PowerCurrentSetpoint(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerIdleOutputBehaviorGet">
            <summary>Sets the Shim of AIChannel.get_PowerIdleOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerIdleOutputBehaviorSetPowerIdleOutputBehavior">
            <summary>Sets the Shim of AIChannel.set_PowerIdleOutputBehavior(PowerIdleOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerOutputEnableGet">
            <summary>Sets the Shim of AIChannel.get_PowerOutputEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerOutputEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_PowerOutputEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerOutputStateGet">
            <summary>Sets the Shim of AIChannel.get_PowerOutputState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerRemoteSenseGet">
            <summary>Sets the Shim of AIChannel.get_PowerRemoteSense()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerRemoteSenseSetSense">
            <summary>Sets the Shim of AIChannel.set_PowerRemoteSense(Sense value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerSupplyFaultDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_PowerSupplyFaultDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerSupplyFaultDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_PowerSupplyFaultDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerVoltageScalingCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_PowerVoltageScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerVoltageSetpointGet">
            <summary>Sets the Shim of AIChannel.get_PowerVoltageSetpoint()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PowerVoltageSetpointSetDouble">
            <summary>Sets the Shim of AIChannel.set_PowerVoltageSetpoint(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PressureUnitsGet">
            <summary>Sets the Shim of AIChannel.get_PressureUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.PressureUnitsSetAIPressureUnits">
            <summary>Sets the Shim of AIChannel.set_PressureUnits(AIPressureUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ProbeAttenuationGet">
            <summary>Sets the Shim of AIChannel.get_ProbeAttenuation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ProbeAttenuationSetDouble">
            <summary>Sets the Shim of AIChannel.set_ProbeAttenuation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RangeHighGet">
            <summary>Sets the Shim of AIChannel.get_RangeHigh()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RangeHighSetDouble">
            <summary>Sets the Shim of AIChannel.set_RangeHigh(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RangeLowGet">
            <summary>Sets the Shim of AIChannel.get_RangeLow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RangeLowSetDouble">
            <summary>Sets the Shim of AIChannel.set_RangeLow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RawDataCompressionTypeGet">
            <summary>Sets the Shim of AIChannel.get_RawDataCompressionType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RawDataCompressionTypeSetAIRawDataCompressionType">
            <summary>Sets the Shim of AIChannel.set_RawDataCompressionType(AIRawDataCompressionType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RawSampleJustificationGet">
            <summary>Sets the Shim of AIChannel.get_RawSampleJustification()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RawSampleSizeGet">
            <summary>Sets the Shim of AIChannel.get_RawSampleSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ReadOpenChannelsDetailsGet">
            <summary>Sets the Shim of AIChannel.get_ReadOpenChannelsDetails()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ReadOpenChannelsExistGet">
            <summary>Sets the Shim of AIChannel.get_ReadOpenChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ReadOpenChannelsGet">
            <summary>Sets the Shim of AIChannel.get_ReadOpenChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RemoveFilterDelayGet">
            <summary>Sets the Shim of AIChannel.get_RemoveFilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RemoveFilterDelaySetBoolean">
            <summary>Sets the Shim of AIChannel.set_RemoveFilterDelay(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ResistanceConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_ResistanceConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ResistanceConfigurationSetAIResistanceConfiguration">
            <summary>Sets the Shim of AIChannel.set_ResistanceConfiguration(AIResistanceConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ResistanceUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ResistanceUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ResistanceUnitsSetAIResistanceUnits">
            <summary>Sets the Shim of AIChannel.set_ResistanceUnits(AIResistanceUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ResolutionGet">
            <summary>Sets the Shim of AIChannel.get_Resolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ResolutionUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ResolutionUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RosetteMeasurementTypeGet">
            <summary>Sets the Shim of AIChannel.get_RosetteMeasurementType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RosetteMeasurementTypeSetAIRosetteMeasurementType">
            <summary>Sets the Shim of AIChannel.set_RosetteMeasurementType(AIRosetteMeasurementType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RosetteStrainChannelsGet">
            <summary>Sets the Shim of AIChannel.get_RosetteStrainChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RosetteStrainGageOrientationGet">
            <summary>Sets the Shim of AIChannel.get_RosetteStrainGageOrientation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RosetteStrainGageOrientationSetDouble">
            <summary>Sets the Shim of AIChannel.set_RosetteStrainGageOrientation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RosetteTypeGet">
            <summary>Sets the Shim of AIChannel.get_RosetteType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdAGet">
            <summary>Sets the Shim of AIChannel.get_RtdA()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdASetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdA(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdBGet">
            <summary>Sets the Shim of AIChannel.get_RtdB()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdBSetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdB(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdCGet">
            <summary>Sets the Shim of AIChannel.get_RtdC()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdCSetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdC(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdR0Get">
            <summary>Sets the Shim of AIChannel.get_RtdR0()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdR0SetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdR0(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdTypeGet">
            <summary>Sets the Shim of AIChannel.get_RtdType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RtdTypeSetAIRtdType">
            <summary>Sets the Shim of AIChannel.set_RtdType(AIRtdType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RvdtSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_RvdtSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RvdtSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_RvdtSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RvdtSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_RvdtSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RvdtSensitivityUnitsSetAIRvdtSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_RvdtSensitivityUnits(AIRvdtSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RvdtUnitsGet">
            <summary>Sets the Shim of AIChannel.get_RvdtUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.RvdtUnitsSetAIRvdtUnits">
            <summary>Sets the Shim of AIChannel.set_RvdtUnits(AIRvdtUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SampleAndHoldEnableGet">
            <summary>Sets the Shim of AIChannel.get_SampleAndHoldEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SampleAndHoldEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_SampleAndHoldEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SensorPowerConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_SensorPowerConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SensorPowerConfigurationSetAISensorPowerConfiguration">
            <summary>Sets the Shim of AIChannel.set_SensorPowerConfiguration(AISensorPowerConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SensorPowerTypeGet">
            <summary>Sets the Shim of AIChannel.get_SensorPowerType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SensorPowerTypeSetAISensorPowerType">
            <summary>Sets the Shim of AIChannel.set_SensorPowerType(AISensorPowerType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SensorPowerVoltageGet">
            <summary>Sets the Shim of AIChannel.get_SensorPowerVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SensorPowerVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_SensorPowerVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SetTerminalConfigIfSpecifiedAITerminalConfiguration">
            <summary>Sets the Shim of AIChannel.SetTerminalConfigIfSpecified(AITerminalConfiguration config)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SoundPressureDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_SoundPressureDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SoundPressureDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_SoundPressureDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SoundPressureUnitsGet">
            <summary>Sets the Shim of AIChannel.get_SoundPressureUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.SoundPressureUnitsSetAISoundPressureUnits">
            <summary>Sets the Shim of AIChannel.set_SoundPressureUnits(AISoundPressureUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainGageConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_StrainGageConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainGageConfigurationSetAIStrainGageConfiguration">
            <summary>Sets the Shim of AIChannel.set_StrainGageConfiguration(AIStrainGageConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainGageGageFactorGet">
            <summary>Sets the Shim of AIChannel.get_StrainGageGageFactor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainGageGageFactorSetDouble">
            <summary>Sets the Shim of AIChannel.set_StrainGageGageFactor(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainGagePoissonRatioGet">
            <summary>Sets the Shim of AIChannel.get_StrainGagePoissonRatio()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainGagePoissonRatioSetDouble">
            <summary>Sets the Shim of AIChannel.set_StrainGagePoissonRatio(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainUnitsGet">
            <summary>Sets the Shim of AIChannel.get_StrainUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.StrainUnitsSetAIStrainUnits">
            <summary>Sets the Shim of AIChannel.set_StrainUnits(AIStrainUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.TedsUnitsGet">
            <summary>Sets the Shim of AIChannel.get_TedsUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.TemperatureUnitsGet">
            <summary>Sets the Shim of AIChannel.get_TemperatureUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.TemperatureUnitsSetAITemperatureUnits">
            <summary>Sets the Shim of AIChannel.set_TemperatureUnits(AITemperatureUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.TerminalConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_TerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.TerminalConfigurationSetAITerminalConfiguration">
            <summary>Sets the Shim of AIChannel.set_TerminalConfiguration(AITerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorAGet">
            <summary>Sets the Shim of AIChannel.get_ThermistorA()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorASetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorA(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorBGet">
            <summary>Sets the Shim of AIChannel.get_ThermistorB()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorBSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorB(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorCGet">
            <summary>Sets the Shim of AIChannel.get_ThermistorC()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorCSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorC(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorR1Get">
            <summary>Sets the Shim of AIChannel.get_ThermistorR1()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermistorR1SetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorR1(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleCjcChannelGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleCjcChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleCjcSourceGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleCjcSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleCjcValueGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleCjcValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleCjcValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleCjcValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleLeadOffsetVoltageGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleLeadOffsetVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleLeadOffsetVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleLeadOffsetVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleScaleTypeGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleScaleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleScaleTypeSetAIThermocoupleScaleType">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleScaleType(AIThermocoupleScaleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleTypeGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.ThermocoupleTypeSetAIThermocoupleType">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleType(AIThermocoupleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.TorqueUnitsGet">
            <summary>Sets the Shim of AIChannel.get_TorqueUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.TorqueUnitsSetAITorqueUnits">
            <summary>Sets the Shim of AIChannel.set_TorqueUnits(AITorqueUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UsbTransferRequestCountGet">
            <summary>Sets the Shim of AIChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of AIChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of AIChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of AIChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UseExcitationForScalingGet">
            <summary>Sets the Shim of AIChannel.get_UseExcitationForScaling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UseExcitationForScalingSetBoolean">
            <summary>Sets the Shim of AIChannel.set_UseExcitationForScaling(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UseMultiplexedExcitationGet">
            <summary>Sets the Shim of AIChannel.get_UseMultiplexedExcitation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.UseMultiplexedExcitationSetBoolean">
            <summary>Sets the Shim of AIChannel.set_UseMultiplexedExcitation(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityIepeSensorDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_VelocityIepeSensorDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityIepeSensorDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_VelocityIepeSensorDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityIepeSensorSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_VelocityIepeSensorSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityIepeSensorSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_VelocityIepeSensorSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityIepeSensorSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VelocityIepeSensorSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityIepeSensorSensitivityUnitsSetAIVelocityIepeSensorSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_VelocityIepeSensorSensitivityUnits(AIVelocityIepeSensorSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VelocityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VelocityUnitsSetAIVelocityUnits">
            <summary>Sets the Shim of AIChannel.set_VelocityUnits(AIVelocityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VoltageAcrmsUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VoltageAcrmsUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VoltageAcrmsUnitsSetAIVoltageAcrmsUnits">
            <summary>Sets the Shim of AIChannel.set_VoltageAcrmsUnits(AIVoltageAcrmsUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VoltageDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_VoltageDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VoltageDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_VoltageDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VoltageUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VoltageUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AllInstances.VoltageUnitsSetAIVoltageUnits">
            <summary>Sets the Shim of AIChannel.set_VoltageUnits(AIVoltageUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AttenuationGet">
            <summary>Sets the Shim of AIChannel.get_Attenuation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AttenuationSetDouble">
            <summary>Sets the Shim of AIChannel.set_Attenuation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AutoZeroModeGet">
            <summary>Sets the Shim of AIChannel.get_AutoZeroMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AutoZeroModeSetAIAutoZeroMode">
            <summary>Sets the Shim of AIChannel.set_AutoZeroMode(AIAutoZeroMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AveragingWindowSizeGet">
            <summary>Sets the Shim of AIChannel.get_AveragingWindowSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.AveragingWindowSizeSetInt64">
            <summary>Sets the Shim of AIChannel.set_AveragingWindowSize(Int64 value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannel.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeBalanceCoarsePotGet">
            <summary>Sets the Shim of AIChannel.get_BridgeBalanceCoarsePot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeBalanceCoarsePotSetInt32">
            <summary>Sets the Shim of AIChannel.set_BridgeBalanceCoarsePot(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeBalanceFinePotGet">
            <summary>Sets the Shim of AIChannel.get_BridgeBalanceFinePot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeBalanceFinePotSetInt32">
            <summary>Sets the Shim of AIChannel.set_BridgeBalanceFinePot(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_BridgeConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeConfigurationSetAIBridgeConfiguration">
            <summary>Sets the Shim of AIChannel.set_BridgeConfiguration(AIBridgeConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeElectricalUnitsGet">
            <summary>Sets the Shim of AIChannel.get_BridgeElectricalUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeElectricalUnitsSetAIBridgeElectricalUnits">
            <summary>Sets the Shim of AIChannel.set_BridgeElectricalUnits(AIBridgeElectricalUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeInitialRatioGet">
            <summary>Sets the Shim of AIChannel.get_BridgeInitialRatio()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeInitialRatioSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeInitialRatio(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeInitialVoltageGet">
            <summary>Sets the Shim of AIChannel.get_BridgeInitialVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeInitialVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeInitialVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeNominalResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeNominalResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeNominalResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeNominalResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgePhysicalUnitsGet">
            <summary>Sets the Shim of AIChannel.get_BridgePhysicalUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgePhysicalUnitsSetAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannel.set_BridgePhysicalUnits(AIBridgePhysicalUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgePolynomialForwardCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_BridgePolynomialForwardCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgePolynomialForwardCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgePolynomialForwardCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgePolynomialReverseCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_BridgePolynomialReverseCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgePolynomialReverseCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgePolynomialReverseCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeScaleTypeGet">
            <summary>Sets the Shim of AIChannel.get_BridgeScaleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeScaleTypeSetAIBridgeScaleType">
            <summary>Sets the Shim of AIChannel.set_BridgeScaleType(AIBridgeScaleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationAActualResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationAActualResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationAActualResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationAActualResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationAResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationAResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationAResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationAResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationASourceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationASource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationASourceSetBridgeShuntCalibrationSource">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationASource(BridgeShuntCalibrationSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationBActualResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationBActualResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationBActualResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationBActualResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationBResistanceGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationBResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationBResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationBResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationEnableGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationGainAdjustGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationGainAdjust()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationGainAdjustSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationGainAdjust(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationSelectGet">
            <summary>Sets the Shim of AIChannel.get_BridgeShuntCalibrationSelect()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeShuntCalibrationSelectSetAIBridgeShuntCalibrationSelect">
            <summary>Sets the Shim of AIChannel.set_BridgeShuntCalibrationSelect(AIBridgeShuntCalibrationSelect value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTableElectricalValuesGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTableElectricalValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTableElectricalValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgeTableElectricalValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTablePhysicalValuesGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTablePhysicalValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTablePhysicalValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_BridgeTablePhysicalValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearFirstElectricalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearFirstElectricalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearFirstElectricalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearFirstElectricalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearFirstPhysicalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearFirstPhysicalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearFirstPhysicalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearFirstPhysicalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearSecondElectricalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearSecondElectricalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearSecondElectricalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearSecondElectricalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearSecondPhysicalValueGet">
            <summary>Sets the Shim of AIChannel.get_BridgeTwoPointLinearSecondPhysicalValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeTwoPointLinearSecondPhysicalValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_BridgeTwoPointLinearSecondPhysicalValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeUnitsGet">
            <summary>Sets the Shim of AIChannel.get_BridgeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.BridgeUnitsSetAIBridgeUnits">
            <summary>Sets the Shim of AIChannel.set_BridgeUnits(AIBridgeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationApplyIfExpiredGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationApplyIfExpired()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationApplyIfExpiredSetBoolean">
            <summary>Sets the Shim of AIChannel.set_CalibrationApplyIfExpired(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationDateGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationDate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationDateSetDateTime">
            <summary>Sets the Shim of AIChannel.set_CalibrationDate(DateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationDescriptionGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationDescription()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationDescriptionSetString">
            <summary>Sets the Shim of AIChannel.set_CalibrationDescription(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationEnableGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_CalibrationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationExpirationDateGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationExpirationDate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationExpirationDateSetDateTime">
            <summary>Sets the Shim of AIChannel.set_CalibrationExpirationDate(DateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationHasValidInfoGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationHasValidInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationOperatorNameGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationOperatorName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationOperatorNameSetString">
            <summary>Sets the Shim of AIChannel.set_CalibrationOperatorName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationPolynomialForwardCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationPolynomialForwardCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationPolynomialForwardCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationPolynomialForwardCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationPolynomialReverseCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationPolynomialReverseCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationPolynomialReverseCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationPolynomialReverseCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationScaleTypeGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationScaleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationScaleTypeSetAIChannelCalibrationScaleType">
            <summary>Sets the Shim of AIChannel.set_CalibrationScaleType(AIChannelCalibrationScaleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationTablePreScaledValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationTablePreScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationTablePreScaledValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationTablePreScaledValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationTableScaledValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationTableScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationTableScaledValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationTableScaledValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationVerificationAcquiredValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationVerificationAcquiredValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationVerificationAcquiredValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationVerificationAcquiredValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationVerificationReferenceValuesGet">
            <summary>Sets the Shim of AIChannel.get_CalibrationVerificationReferenceValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CalibrationVerificationReferenceValuesSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_CalibrationVerificationReferenceValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ChargeUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ChargeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ChargeUnitsSetAIChargeUnits">
            <summary>Sets the Shim of AIChannel.set_ChargeUnits(AIChargeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ChopEnableGet">
            <summary>Sets the Shim of AIChannel.get_ChopEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ChopEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ChopEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ConstructorStringTask">
            <summary>Sets the Shim of AIChannel.AIChannel(String str, Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CouplingGet">
            <summary>Sets the Shim of AIChannel.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CouplingSetAICoupling">
            <summary>Sets the Shim of AIChannel.set_Coupling(AICoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentAcrmsUnitsGet">
            <summary>Sets the Shim of AIChannel.get_CurrentAcrmsUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentAcrmsUnitsSetAICurrentAcrmsUnits">
            <summary>Sets the Shim of AIChannel.set_CurrentAcrmsUnits(AICurrentAcrmsUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentShuntLocationGet">
            <summary>Sets the Shim of AIChannel.get_CurrentShuntLocation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentShuntLocationSetAICurrentShuntLocation">
            <summary>Sets the Shim of AIChannel.set_CurrentShuntLocation(AICurrentShuntLocation value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentShuntResistanceGet">
            <summary>Sets the Shim of AIChannel.get_CurrentShuntResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentShuntResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_CurrentShuntResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentUnitsGet">
            <summary>Sets the Shim of AIChannel.get_CurrentUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CurrentUnitsSetAICurrentUnits">
            <summary>Sets the Shim of AIChannel.set_CurrentUnits(AICurrentUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CustomScaleNameGet">
            <summary>Sets the Shim of AIChannel.get_CustomScaleName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.CustomScaleNameSetString">
            <summary>Sets the Shim of AIChannel.set_CustomScaleName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DCOffsetGet">
            <summary>Sets the Shim of AIChannel.get_DCOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DCOffsetSetDouble">
            <summary>Sets the Shim of AIChannel.set_DCOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferCustomThresholdGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferCustomThreshold()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferCustomThresholdSetInt64">
            <summary>Sets the Shim of AIChannel.set_DataTransferCustomThreshold(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferMaximumRateGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferMaximumRateSetDouble">
            <summary>Sets the Shim of AIChannel.set_DataTransferMaximumRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferMechanismGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferMechanismSetAIDataTransferMechanism">
            <summary>Sets the Shim of AIChannel.set_DataTransferMechanism(AIDataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferRequestConditionGet">
            <summary>Sets the Shim of AIChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DataTransferRequestConditionSetAIDataTransferRequestCondition">
            <summary>Sets the Shim of AIChannel.set_DataTransferRequestCondition(AIDataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DeviceScalingCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_DeviceScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterBandpassCenterFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterBandpassCenterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterBandpassCenterFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterBandpassCenterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterBandpassWidthGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterBandpassWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterBandpassWidthSetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterBandpassWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterCoefficientsSetDoubleArray">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterEnabledGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterEnabledSetBoolean">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterHighpassCutoffFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterHighpassCutoffFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterHighpassCutoffFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterHighpassCutoffFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterLowpassCutoffFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterLowpassCutoffFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterLowpassCutoffFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterLowpassCutoffFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterNotchCenterFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterNotchCenterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterNotchCenterFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterNotchCenterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterNotchWidthGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterNotchWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterNotchWidthSetDouble">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterNotchWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterOrderGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterOrder()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterOrderSetInt64">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterOrder(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterResponseGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterResponse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterResponseSetFilterResponse">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterResponse(FilterResponse value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterTypeGet">
            <summary>Sets the Shim of AIChannel.get_DigitalFilterType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DigitalFilterTypeSetFilterType">
            <summary>Sets the Shim of AIChannel.set_DigitalFilterType(FilterType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DitherEnableGet">
            <summary>Sets the Shim of AIChannel.get_DitherEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.DitherEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_DitherEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EddyCurrentProximityProbeSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_EddyCurrentProximityProbeSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EddyCurrentProximityProbeSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_EddyCurrentProximityProbeSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EddyCurrentProximityProbeSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_EddyCurrentProximityProbeSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EddyCurrentProximityProbeSensitivityUnitsSetAIEddyCurrentProximityProbeSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_EddyCurrentProximityProbeSensitivityUnits(AIEddyCurrentProximityProbeSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EddyCurrentProximityProbeUnitsGet">
            <summary>Sets the Shim of AIChannel.get_EddyCurrentProximityProbeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EddyCurrentProximityProbeUnitsSetAIEddyCurrentProximityProbeUnits">
            <summary>Sets the Shim of AIChannel.set_EddyCurrentProximityProbeUnits(AIEddyCurrentProximityProbeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EnhancedAliasRejectionEnableGet">
            <summary>Sets the Shim of AIChannel.get_EnhancedAliasRejectionEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.EnhancedAliasRejectionEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_EnhancedAliasRejectionEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationActualValueGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationActualValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationActualValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_ExcitationActualValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationDCOrACGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationDCOrAC()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationDCOrACSetAIExcitationDCOrAC">
            <summary>Sets the Shim of AIChannel.set_ExcitationDCOrAC(AIExcitationDCOrAC value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationIdleOutputBehaviorGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationIdleOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationIdleOutputBehaviorSetExcitationIdleOutputBehavior">
            <summary>Sets the Shim of AIChannel.set_ExcitationIdleOutputBehavior(ExcitationIdleOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationSenseGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationSense()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationSenseSetAIExcitationSense">
            <summary>Sets the Shim of AIChannel.set_ExcitationSense(AIExcitationSense value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationSourceGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationSourceSetAIExcitationSource">
            <summary>Sets the Shim of AIChannel.set_ExcitationSource(AIExcitationSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationValueGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_ExcitationValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationVoltageOrCurrentGet">
            <summary>Sets the Shim of AIChannel.get_ExcitationVoltageOrCurrent()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ExcitationVoltageOrCurrentSetAIExcitationVoltageOrCurrent">
            <summary>Sets the Shim of AIChannel.set_ExcitationVoltageOrCurrent(AIExcitationVoltageOrCurrent value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterDelayAdjustmentGet">
            <summary>Sets the Shim of AIChannel.get_FilterDelayAdjustment()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterDelayAdjustmentSetDouble">
            <summary>Sets the Shim of AIChannel.set_FilterDelayAdjustment(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterDelayGet">
            <summary>Sets the Shim of AIChannel.get_FilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterDelayUnitsGet">
            <summary>Sets the Shim of AIChannel.get_FilterDelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterDelayUnitsSetAIFilterDelayUnits">
            <summary>Sets the Shim of AIChannel.set_FilterDelayUnits(AIFilterDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterEnabledGet">
            <summary>Sets the Shim of AIChannel.get_FilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterEnabledSetBoolean">
            <summary>Sets the Shim of AIChannel.set_FilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_FilterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_FilterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterOrderGet">
            <summary>Sets the Shim of AIChannel.get_FilterOrder()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterOrderSetInt64">
            <summary>Sets the Shim of AIChannel.set_FilterOrder(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterResponseGet">
            <summary>Sets the Shim of AIChannel.get_FilterResponse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FilterResponseSetAIFilterResponse">
            <summary>Sets the Shim of AIChannel.set_FilterResponse(AIFilterResponse value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceIepeSensorSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_ForceIepeSensorSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceIepeSensorSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_ForceIepeSensorSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceIepeSensorSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ForceIepeSensorSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceIepeSensorSensitivityUnitsSetAIForceIepeSensorSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_ForceIepeSensorSensitivityUnits(AIForceIepeSensorSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceReadFromChannelGet">
            <summary>Sets the Shim of AIChannel.get_ForceReadFromChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceReadFromChannelSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ForceReadFromChannel(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceReadFromStrainChannelGet">
            <summary>Sets the Shim of AIChannel.get_ForceReadFromStrainChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceReadFromStrainChannelSetBoolean">
            <summary>Sets the Shim of AIChannel.set_ForceReadFromStrainChannel(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ForceUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ForceUnitsSetAIForceUnits">
            <summary>Sets the Shim of AIChannel.set_ForceUnits(AIForceUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FrequencyHysteresisGet">
            <summary>Sets the Shim of AIChannel.get_FrequencyHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FrequencyHysteresisSetDouble">
            <summary>Sets the Shim of AIChannel.set_FrequencyHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FrequencyThresholdVoltageGet">
            <summary>Sets the Shim of AIChannel.get_FrequencyThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FrequencyThresholdVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_FrequencyThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FrequencyUnitsGet">
            <summary>Sets the Shim of AIChannel.get_FrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.FrequencyUnitsSetAIFrequencyUnits">
            <summary>Sets the Shim of AIChannel.set_FrequencyUnits(AIFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.GainGet">
            <summary>Sets the Shim of AIChannel.get_Gain()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.GainSetDouble">
            <summary>Sets the Shim of AIChannel.set_Gain(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ImpedanceGet">
            <summary>Sets the Shim of AIChannel.get_Impedance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ImpedanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_Impedance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputLimitsFaultDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_InputLimitsFaultDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputLimitsFaultDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_InputLimitsFaultDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputLimitsFaultDetectLowerLimitGet">
            <summary>Sets the Shim of AIChannel.get_InputLimitsFaultDetectLowerLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputLimitsFaultDetectLowerLimitSetDouble">
            <summary>Sets the Shim of AIChannel.set_InputLimitsFaultDetectLowerLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputLimitsFaultDetectUpperLimitGet">
            <summary>Sets the Shim of AIChannel.get_InputLimitsFaultDetectUpperLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputLimitsFaultDetectUpperLimitSetDouble">
            <summary>Sets the Shim of AIChannel.set_InputLimitsFaultDetectUpperLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputSourceGet">
            <summary>Sets the Shim of AIChannel.get_InputSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.InputSourceSetString">
            <summary>Sets the Shim of AIChannel.set_InputSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.IsTedsGet">
            <summary>Sets the Shim of AIChannel.get_IsTeds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LeadWireResistanceGet">
            <summary>Sets the Shim of AIChannel.get_LeadWireResistance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LeadWireResistanceSetDouble">
            <summary>Sets the Shim of AIChannel.set_LeadWireResistance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LossyLsbRemovalCompressedSampleSizeGet">
            <summary>Sets the Shim of AIChannel.get_LossyLsbRemovalCompressedSampleSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LossyLsbRemovalCompressedSampleSizeSetInt64">
            <summary>Sets the Shim of AIChannel.set_LossyLsbRemovalCompressedSampleSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassCutoffFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_LowpassCutoffFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassCutoffFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_LowpassCutoffFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassEnableGet">
            <summary>Sets the Shim of AIChannel.get_LowpassEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_LowpassEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorClockSourceGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorClockSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorClockSourceSetAILowpassSwitchedCapacitorClockSource">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorClockSource(AILowpassSwitchedCapacitorClockSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorExternalClockDivisorGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorExternalClockDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorExternalClockDivisorSetInt64">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorExternalClockDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorExternalClockFrequencyGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorExternalClockFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorExternalClockFrequencySetDouble">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorExternalClockFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorOutputClockDivisorGet">
            <summary>Sets the Shim of AIChannel.get_LowpassSwitchedCapacitorOutputClockDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LowpassSwitchedCapacitorOutputClockDivisorSetInt64">
            <summary>Sets the Shim of AIChannel.set_LowpassSwitchedCapacitorOutputClockDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LvdtSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_LvdtSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LvdtSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_LvdtSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LvdtSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_LvdtSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LvdtSensitivityUnitsSetAILvdtSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_LvdtSensitivityUnits(AILvdtSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LvdtUnitsGet">
            <summary>Sets the Shim of AIChannel.get_LvdtUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.LvdtUnitsSetAILvdtUnits">
            <summary>Sets the Shim of AIChannel.set_LvdtUnits(AILvdtUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MaximumGet">
            <summary>Sets the Shim of AIChannel.get_Maximum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MaximumSetDouble">
            <summary>Sets the Shim of AIChannel.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MaximumSoundPressureLevelGet">
            <summary>Sets the Shim of AIChannel.get_MaximumSoundPressureLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MaximumSoundPressureLevelSetDouble">
            <summary>Sets the Shim of AIChannel.set_MaximumSoundPressureLevel(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MeasurementTypeGet">
            <summary>Sets the Shim of AIChannel.get_MeasurementType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MemoryMappingEnableGet">
            <summary>Sets the Shim of AIChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MicrophoneSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_MicrophoneSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MicrophoneSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_MicrophoneSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MinimumGet">
            <summary>Sets the Shim of AIChannel.get_Minimum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.MinimumSetDouble">
            <summary>Sets the Shim of AIChannel.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.OpenChannelDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_OpenChannelDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.OpenChannelDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_OpenChannelDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.OpenThermocoupleDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_OpenThermocoupleDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.OpenThermocoupleDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_OpenThermocoupleDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.OvercurrentDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_OvercurrentDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.OvercurrentDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_OvercurrentDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeOffsetNullingCalibration">
            <summary>Sets the Shim of AIChannel.PerformBridgeOffsetNullingCalibration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeOffsetNullingCalibrationBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeOffsetNullingCalibration(Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeShuntCalibrationDoubleShuntElementLocationDouble">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeShuntCalibrationDoubleShuntElementLocationDoubleBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeShuntCalibrationDoubleShuntElementLocationDoubleShuntCalibrationSelectShuntResistorSource">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeShuntCalibrationDoubleShuntElementLocationDoubleShuntCalibrationSelectShuntResistorSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeShuntCalibrationExDoubleShuntElementLocationDoubleShuntCalibrationSelectBridgeShuntCalibrationSource">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, BridgeShuntCalibrationSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformBridgeShuntCalibrationExDoubleShuntElementLocationDoubleShuntCalibrationSelectBridgeShuntCalibrationSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformBridgeShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Double bridgeResistance, ShuntCalibrationSelect shuntResistorSelect, BridgeShuntCalibrationSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformStrainShuntCalibrationDoubleShuntElementLocation">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformStrainShuntCalibrationDoubleShuntElementLocationBoolean">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformStrainShuntCalibrationDoubleShuntElementLocationShuntCalibrationSelectShuntResistorSource">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformStrainShuntCalibrationDoubleShuntElementLocationShuntCalibrationSelectShuntResistorSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibration(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, ShuntResistorSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformStrainShuntCalibrationExDoubleShuntElementLocationShuntCalibrationSelectStrainShuntCalibrationSource">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, StrainShuntCalibrationSource shuntResistorSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformStrainShuntCalibrationExDoubleShuntElementLocationShuntCalibrationSelectStrainShuntCalibrationSourceBoolean">
            <summary>Sets the Shim of AIChannel.PerformStrainShuntCalibrationEx(Double shuntResistorValue, ShuntElementLocation shuntResistorLocation, ShuntCalibrationSelect shuntResistorSelect, StrainShuntCalibrationSource shuntResistorSource, Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformThermocoupleLeadOffsetNullingCalibration">
            <summary>Sets the Shim of AIChannel.PerformThermocoupleLeadOffsetNullingCalibration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PerformThermocoupleLeadOffsetNullingCalibrationBoolean">
            <summary>Sets the Shim of AIChannel.PerformThermocoupleLeadOffsetNullingCalibration(Boolean skipUnsupportedChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerCurrentScalingCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_PowerCurrentScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerCurrentSetpointGet">
            <summary>Sets the Shim of AIChannel.get_PowerCurrentSetpoint()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerCurrentSetpointSetDouble">
            <summary>Sets the Shim of AIChannel.set_PowerCurrentSetpoint(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerIdleOutputBehaviorGet">
            <summary>Sets the Shim of AIChannel.get_PowerIdleOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerIdleOutputBehaviorSetPowerIdleOutputBehavior">
            <summary>Sets the Shim of AIChannel.set_PowerIdleOutputBehavior(PowerIdleOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerOutputEnableGet">
            <summary>Sets the Shim of AIChannel.get_PowerOutputEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerOutputEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_PowerOutputEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerOutputStateGet">
            <summary>Sets the Shim of AIChannel.get_PowerOutputState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerRemoteSenseGet">
            <summary>Sets the Shim of AIChannel.get_PowerRemoteSense()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerRemoteSenseSetSense">
            <summary>Sets the Shim of AIChannel.set_PowerRemoteSense(Sense value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerSupplyFaultDetectEnableGet">
            <summary>Sets the Shim of AIChannel.get_PowerSupplyFaultDetectEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerSupplyFaultDetectEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_PowerSupplyFaultDetectEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerVoltageScalingCoefficientsGet">
            <summary>Sets the Shim of AIChannel.get_PowerVoltageScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerVoltageSetpointGet">
            <summary>Sets the Shim of AIChannel.get_PowerVoltageSetpoint()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PowerVoltageSetpointSetDouble">
            <summary>Sets the Shim of AIChannel.set_PowerVoltageSetpoint(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PressureUnitsGet">
            <summary>Sets the Shim of AIChannel.get_PressureUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.PressureUnitsSetAIPressureUnits">
            <summary>Sets the Shim of AIChannel.set_PressureUnits(AIPressureUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ProbeAttenuationGet">
            <summary>Sets the Shim of AIChannel.get_ProbeAttenuation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ProbeAttenuationSetDouble">
            <summary>Sets the Shim of AIChannel.set_ProbeAttenuation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RangeHighGet">
            <summary>Sets the Shim of AIChannel.get_RangeHigh()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RangeHighSetDouble">
            <summary>Sets the Shim of AIChannel.set_RangeHigh(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RangeLowGet">
            <summary>Sets the Shim of AIChannel.get_RangeLow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RangeLowSetDouble">
            <summary>Sets the Shim of AIChannel.set_RangeLow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RawDataCompressionTypeGet">
            <summary>Sets the Shim of AIChannel.get_RawDataCompressionType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RawDataCompressionTypeSetAIRawDataCompressionType">
            <summary>Sets the Shim of AIChannel.set_RawDataCompressionType(AIRawDataCompressionType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RawSampleJustificationGet">
            <summary>Sets the Shim of AIChannel.get_RawSampleJustification()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RawSampleSizeGet">
            <summary>Sets the Shim of AIChannel.get_RawSampleSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ReadOpenChannelsDetailsGet">
            <summary>Sets the Shim of AIChannel.get_ReadOpenChannelsDetails()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ReadOpenChannelsExistGet">
            <summary>Sets the Shim of AIChannel.get_ReadOpenChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ReadOpenChannelsGet">
            <summary>Sets the Shim of AIChannel.get_ReadOpenChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RemoveFilterDelayGet">
            <summary>Sets the Shim of AIChannel.get_RemoveFilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RemoveFilterDelaySetBoolean">
            <summary>Sets the Shim of AIChannel.set_RemoveFilterDelay(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ResistanceConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_ResistanceConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ResistanceConfigurationSetAIResistanceConfiguration">
            <summary>Sets the Shim of AIChannel.set_ResistanceConfiguration(AIResistanceConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ResistanceUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ResistanceUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ResistanceUnitsSetAIResistanceUnits">
            <summary>Sets the Shim of AIChannel.set_ResistanceUnits(AIResistanceUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ResolutionGet">
            <summary>Sets the Shim of AIChannel.get_Resolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ResolutionUnitsGet">
            <summary>Sets the Shim of AIChannel.get_ResolutionUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RosetteMeasurementTypeGet">
            <summary>Sets the Shim of AIChannel.get_RosetteMeasurementType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RosetteMeasurementTypeSetAIRosetteMeasurementType">
            <summary>Sets the Shim of AIChannel.set_RosetteMeasurementType(AIRosetteMeasurementType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RosetteStrainChannelsGet">
            <summary>Sets the Shim of AIChannel.get_RosetteStrainChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RosetteStrainGageOrientationGet">
            <summary>Sets the Shim of AIChannel.get_RosetteStrainGageOrientation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RosetteStrainGageOrientationSetDouble">
            <summary>Sets the Shim of AIChannel.set_RosetteStrainGageOrientation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RosetteTypeGet">
            <summary>Sets the Shim of AIChannel.get_RosetteType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdAGet">
            <summary>Sets the Shim of AIChannel.get_RtdA()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdASetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdA(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdBGet">
            <summary>Sets the Shim of AIChannel.get_RtdB()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdBSetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdB(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdCGet">
            <summary>Sets the Shim of AIChannel.get_RtdC()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdCSetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdC(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdR0Get">
            <summary>Sets the Shim of AIChannel.get_RtdR0()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdR0SetDouble">
            <summary>Sets the Shim of AIChannel.set_RtdR0(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdTypeGet">
            <summary>Sets the Shim of AIChannel.get_RtdType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RtdTypeSetAIRtdType">
            <summary>Sets the Shim of AIChannel.set_RtdType(AIRtdType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RvdtSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_RvdtSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RvdtSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_RvdtSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RvdtSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_RvdtSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RvdtSensitivityUnitsSetAIRvdtSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_RvdtSensitivityUnits(AIRvdtSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RvdtUnitsGet">
            <summary>Sets the Shim of AIChannel.get_RvdtUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.RvdtUnitsSetAIRvdtUnits">
            <summary>Sets the Shim of AIChannel.set_RvdtUnits(AIRvdtUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SampleAndHoldEnableGet">
            <summary>Sets the Shim of AIChannel.get_SampleAndHoldEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SampleAndHoldEnableSetBoolean">
            <summary>Sets the Shim of AIChannel.set_SampleAndHoldEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SensorPowerConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_SensorPowerConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SensorPowerConfigurationSetAISensorPowerConfiguration">
            <summary>Sets the Shim of AIChannel.set_SensorPowerConfiguration(AISensorPowerConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SensorPowerTypeGet">
            <summary>Sets the Shim of AIChannel.get_SensorPowerType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SensorPowerTypeSetAISensorPowerType">
            <summary>Sets the Shim of AIChannel.set_SensorPowerType(AISensorPowerType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SensorPowerVoltageGet">
            <summary>Sets the Shim of AIChannel.get_SensorPowerVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SensorPowerVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_SensorPowerVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SetTerminalConfigIfSpecifiedAITerminalConfiguration">
            <summary>Sets the Shim of AIChannel.SetTerminalConfigIfSpecified(AITerminalConfiguration config)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SoundPressureDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_SoundPressureDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SoundPressureDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_SoundPressureDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SoundPressureUnitsGet">
            <summary>Sets the Shim of AIChannel.get_SoundPressureUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.SoundPressureUnitsSetAISoundPressureUnits">
            <summary>Sets the Shim of AIChannel.set_SoundPressureUnits(AISoundPressureUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainGageConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_StrainGageConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainGageConfigurationSetAIStrainGageConfiguration">
            <summary>Sets the Shim of AIChannel.set_StrainGageConfiguration(AIStrainGageConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainGageGageFactorGet">
            <summary>Sets the Shim of AIChannel.get_StrainGageGageFactor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainGageGageFactorSetDouble">
            <summary>Sets the Shim of AIChannel.set_StrainGageGageFactor(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainGagePoissonRatioGet">
            <summary>Sets the Shim of AIChannel.get_StrainGagePoissonRatio()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainGagePoissonRatioSetDouble">
            <summary>Sets the Shim of AIChannel.set_StrainGagePoissonRatio(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainUnitsGet">
            <summary>Sets the Shim of AIChannel.get_StrainUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.StrainUnitsSetAIStrainUnits">
            <summary>Sets the Shim of AIChannel.set_StrainUnits(AIStrainUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.TedsUnitsGet">
            <summary>Sets the Shim of AIChannel.get_TedsUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.TemperatureUnitsGet">
            <summary>Sets the Shim of AIChannel.get_TemperatureUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.TemperatureUnitsSetAITemperatureUnits">
            <summary>Sets the Shim of AIChannel.set_TemperatureUnits(AITemperatureUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.TerminalConfigurationGet">
            <summary>Sets the Shim of AIChannel.get_TerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.TerminalConfigurationSetAITerminalConfiguration">
            <summary>Sets the Shim of AIChannel.set_TerminalConfiguration(AITerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorAGet">
            <summary>Sets the Shim of AIChannel.get_ThermistorA()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorASetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorA(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorBGet">
            <summary>Sets the Shim of AIChannel.get_ThermistorB()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorBSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorB(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorCGet">
            <summary>Sets the Shim of AIChannel.get_ThermistorC()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorCSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorC(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorR1Get">
            <summary>Sets the Shim of AIChannel.get_ThermistorR1()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermistorR1SetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermistorR1(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleCjcChannelGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleCjcChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleCjcSourceGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleCjcSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleCjcValueGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleCjcValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleCjcValueSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleCjcValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleLeadOffsetVoltageGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleLeadOffsetVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleLeadOffsetVoltageSetDouble">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleLeadOffsetVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleScaleTypeGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleScaleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleScaleTypeSetAIThermocoupleScaleType">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleScaleType(AIThermocoupleScaleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleTypeGet">
            <summary>Sets the Shim of AIChannel.get_ThermocoupleType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.ThermocoupleTypeSetAIThermocoupleType">
            <summary>Sets the Shim of AIChannel.set_ThermocoupleType(AIThermocoupleType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.TorqueUnitsGet">
            <summary>Sets the Shim of AIChannel.get_TorqueUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.TorqueUnitsSetAITorqueUnits">
            <summary>Sets the Shim of AIChannel.set_TorqueUnits(AITorqueUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UsbTransferRequestCountGet">
            <summary>Sets the Shim of AIChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of AIChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of AIChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of AIChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UseExcitationForScalingGet">
            <summary>Sets the Shim of AIChannel.get_UseExcitationForScaling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UseExcitationForScalingSetBoolean">
            <summary>Sets the Shim of AIChannel.set_UseExcitationForScaling(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UseMultiplexedExcitationGet">
            <summary>Sets the Shim of AIChannel.get_UseMultiplexedExcitation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.UseMultiplexedExcitationSetBoolean">
            <summary>Sets the Shim of AIChannel.set_UseMultiplexedExcitation(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityIepeSensorDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_VelocityIepeSensorDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityIepeSensorDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_VelocityIepeSensorDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityIepeSensorSensitivityGet">
            <summary>Sets the Shim of AIChannel.get_VelocityIepeSensorSensitivity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityIepeSensorSensitivitySetDouble">
            <summary>Sets the Shim of AIChannel.set_VelocityIepeSensorSensitivity(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityIepeSensorSensitivityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VelocityIepeSensorSensitivityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityIepeSensorSensitivityUnitsSetAIVelocityIepeSensorSensitivityUnits">
            <summary>Sets the Shim of AIChannel.set_VelocityIepeSensorSensitivityUnits(AIVelocityIepeSensorSensitivityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VelocityUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VelocityUnitsSetAIVelocityUnits">
            <summary>Sets the Shim of AIChannel.set_VelocityUnits(AIVelocityUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VoltageAcrmsUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VoltageAcrmsUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VoltageAcrmsUnitsSetAIVoltageAcrmsUnits">
            <summary>Sets the Shim of AIChannel.set_VoltageAcrmsUnits(AIVoltageAcrmsUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VoltageDecibelReferenceGet">
            <summary>Sets the Shim of AIChannel.get_VoltageDecibelReference()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VoltageDecibelReferenceSetDouble">
            <summary>Sets the Shim of AIChannel.set_VoltageDecibelReference(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VoltageUnitsGet">
            <summary>Sets the Shim of AIChannel.get_VoltageUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannel.VoltageUnitsSetAIVoltageUnits">
            <summary>Sets the Shim of AIChannel.set_VoltageUnits(AIVoltageUnits value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection">
            <summary>Shim type of NationalInstruments.DAQmx.AIChannelCollection</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.#ctor(NationalInstruments.DAQmx.AIChannelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllGet">
            <summary>Sets the Shim of AIChannelCollection.get_All()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.AllGet">
            <summary>Sets the Shim of AIChannelCollection.get_All()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of AIChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the Shim of AIChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CountGet">
            <summary>Sets the Shim of AIChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerationChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsDoubleAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, Double sensitivity, AIAccelerationChargeSensitivityUnits sensitivityUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerationChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsStringDoubleAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, String customScaleName, Double sensitivity, AIAccelerationChargeSensitivityUnits sensitivityUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerationChargeChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIAccelerationChargeSensitivityUnits sensitivityUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerationFourWireDCVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsDoubleAIAccelerationFourWireDCVoltageSensitivityUnitsAIExcitationSourceDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationFourWireDCVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, Double sensitivity, AIAccelerationFourWireDCVoltageSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerationFourWireDCVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsStringDoubleAIAccelerationFourWireDCVoltageSensitivityUnitsAIExcitationSourceDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationFourWireDCVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, String customScaleName, Double sensitivity, AIAccelerationFourWireDCVoltageSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerationFourWireDCVoltageChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIAccelerationFourWireDCVoltageSensitivityUnitsAIExcitationSourceDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationFourWireDCVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIAccelerationFourWireDCVoltageSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerometerChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsDoubleAIAccelerometerSensitivityUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, Double sensitivity, AIAccelerometerSensitivityUnits sensitivityUnits, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerometerChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAIAccelerometerSensitivityUnitsAIExcitationSourceDoubleAIAccelerationUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, Double sensitivity, AIAccelerometerSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIAccelerationUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerometerChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAIAccelerometerSensitivityUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, Double sensitivity, AIAccelerometerSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateAccelerometerChannelStringStringDoubleDoubleAIAccelerationUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIAccelerationUnits units, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateBridgeChannelStringStringDoubleDoubleAIBridgeUnitsAIBridgeConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateBridgeChannelStringStringDoubleDoubleAIBridgeUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateBridgeChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateBuiltInSensorTemperatureChannelStringStringAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateBuiltInSensorTemperatureChannel(String physicalChannelName, String nameToAssignChannel, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateChannelStringStringAIMeasurementTypeString">
            <summary>Sets the Shim of AIChannelCollection.CreateChannel(String physicalChannelName, String nameToAssignChannel, AIMeasurementType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateChannelStringStringAIMeasurementTypeStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateChannel(String physicalChannelName, String nameToAssignChannel, AIMeasurementType type, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIChargeUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIChargeUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIChargeUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIChargeUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateChargeChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnitsAICurrentShuntLocationDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units, AICurrentShuntLocation shuntResistorLoc, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnitsAICurrentShuntLocationDoubleStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units, AICurrentShuntLocation shuntResistorLoc, Double externalShuntResistorValue, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentAcrmsUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentAcrmsUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentAcrmsUnitsAICurrentShuntLocationDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentAcrmsUnits units, AICurrentShuntLocation shuntResistorLoc, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAICurrentAcrmsUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, AICurrentAcrmsUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateDeviceTemperatureChannelStringStringAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateDeviceTemperatureChannel(String physicalChannelName, String nameToAssignChannel, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateEddyCurrentProximityProbeChannelStringStringDoubleDoubleAIEddyCurrentProximityProbeUnitsDoubleAIEddyCurrentProximityProbeSensitivityUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateEddyCurrentProximityProbeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIEddyCurrentProximityProbeUnits units, Double sensitivity, AIEddyCurrentProximityProbeSensitivityUnits sensitivityUnits, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateEddyCurrentProximityProbeChannelStringStringDoubleDoubleDoubleAIEddyCurrentProximityProbeSensitivityUnitsAIEddyCurrentProximityProbeUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateEddyCurrentProximityProbeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIEddyCurrentProximityProbeSensitivityUnits sensitivityUnits, AIEddyCurrentProximityProbeUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateEddyCurrentProximityProbeChannelStringStringDoubleDoubleDoubleAIEddyCurrentProximityProbeSensitivityUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateEddyCurrentProximityProbeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIEddyCurrentProximityProbeSensitivityUnits sensitivityUnits, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgePolynomialChannelStringStringDoubleDoubleAIForceUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgePolynomialChannelStringStringDoubleDoubleAIForceUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgePolynomialChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgeTableChannelStringStringDoubleDoubleAIForceUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgeTableChannelStringStringDoubleDoubleAIForceUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgeTableChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgeTwoPointLinearChannelStringStringDoubleDoubleAIForceUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgeTwoPointLinearChannelStringStringDoubleDoubleAIForceUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceBridgeTwoPointLinearChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsDoubleAIForceIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, Double sensitivity, AIForceIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsStringDoubleAIForceIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, Double sensitivity, AIForceIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIForceIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIForceIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateFrequencyVoltageChannelStringStringDoubleDoubleAIFrequencyUnitsDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateFrequencyVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIFrequencyUnits units, Double thresholdVoltage, Double hysteresis, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateFrequencyVoltageChannelStringStringDoubleDoubleDoubleDoubleAIFrequencyUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateFrequencyVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double thresholdVoltage, Double hysteresis, AIFrequencyUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateFrequencyVoltageChannelStringStringDoubleDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateFrequencyVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double thresholdVoltage, Double hysteresis, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateLvdtChannelStringStringDoubleDoubleAILvdtUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AILvdtUnits units, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateLvdtChannelStringStringDoubleDoubleAILvdtUnitsDoubleAILvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AILvdtUnits units, Double sensitivity, AILvdtSensitivityUnits sensitivityUnits, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateLvdtChannelStringStringDoubleDoubleDoubleAILvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeAILvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AILvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AILvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateLvdtChannelStringStringDoubleDoubleDoubleAILvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AILvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateMicrophoneChannelStringStringDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateMicrophoneChannelStringStringDoubleDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double microphoneSensitivity, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateMicrophoneChannelStringStringDoubleDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double microphoneSensitivity, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateMicrophoneChannelStringStringDoubleDoubleAITerminalConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double microphoneSensitivity, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePowerChannelStringStringDoubleDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreatePowerChannel(String physicalChannelName, String nameToAssignChannel, Double voltageSetpoint, Double currentSetpoint, Boolean outputEnable)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgePolynomialChannelStringStringDoubleDoubleAIPressureUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgePolynomialChannelStringStringDoubleDoubleAIPressureUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgePolynomialChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgeTableChannelStringStringDoubleDoubleAIPressureUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgeTableChannelStringStringDoubleDoubleAIPressureUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgeTableChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgeTwoPointLinearChannelStringStringDoubleDoubleAIPressureUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgeTwoPointLinearChannelStringStringDoubleDoubleAIPressureUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreatePressureBridgeTwoPointLinearChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleAIResistanceUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIResistanceUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateResistanceChannelStringStringDoubleDoubleAIResistanceUnitsAIResistanceConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateResistanceChannelStringStringDoubleDoubleAIResistanceUnitsAIResistanceConfigurationAIExcitationSourceDoubleStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource excitationSource, Double excitationValue, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateRosetteStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationDoubleAIExcitationSourceDoubleDoubleDoubleDoubleAIRosetteTypeDoubleAIRosetteMeasurementTypeArray">
            <summary>Sets the Shim of AIChannelCollection.CreateRosetteStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, Double leadWireResistance, AIExcitationSource excitationSource, Double excitationValue, Double gageFactor, Double nominalGageResistance, Double poissonRatio, AIRosetteType rosetteType, Double rosetteStrainGageOrientation, AIRosetteMeasurementType[] rosetteMeasurementTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateRosetteStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationDoubleAIExcitationSourceDoubleDoubleDoubleDoubleAIRosetteTypeDoubleAIRosetteMeasurementTypeArrayAIStrainUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateRosetteStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, Double leadWireResistance, AIExcitationSource excitationSource, Double excitationValue, Double gageFactor, Double nominalGageResistance, Double poissonRatio, AIRosetteType rosetteType, Double rosetteStrainGageOrientation, AIRosetteMeasurementType[] rosetteMeasurementTypes, AIStrainUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateRtdChannelStringStringDoubleDoubleAITemperatureUnitsAIRtdTypeAIResistanceConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateRtdChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIRtdType type, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, Double r0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateRvdtChannelStringStringDoubleDoubleAIRvdtUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIRvdtUnits units, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateRvdtChannelStringStringDoubleDoubleAIRvdtUnitsDoubleAIRvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIRvdtUnits units, Double sensitivity, AIRvdtSensitivityUnits sensitivityUnits, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateRvdtChannelStringStringDoubleDoubleDoubleAIRvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeAIRvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIRvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AIRvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateRvdtChannelStringStringDoubleDoubleDoubleAIRvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIRvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDoubleDoubleAIStrainUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double gageFactor, Double initialBridgeVoltage, Double nominalGageResistance, Double poissonRatio, Double leadWireResistance, AIStrainUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double gageFactor, Double initialBridgeVoltage, Double nominalGageResistance, Double poissonRatio, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateStrainGageChannelStringStringDoubleDoubleAIStrainUnitsAIExcitationSourceDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainUnits units, AIExcitationSource excitationSource, Double excitationValue, Double initialBridgeVoltage, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateStrainGageChannelStringStringDoubleDoubleAIStrainUnitsAIStrainGageConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainUnits units, AIStrainGageConfiguration strainGageConfiguration, AIExcitationSource excitationSource, Double excitationValue, Double gageFactor, Double initialBridgeVoltage, Double nominalGageResist, Double poissonRatio, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateStrainRosetteChannelStringStringAIRosetteTypeDoubleAIRosetteMeasurementTypeArray">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainRosetteChannel(String virtualChannelName, String physicalChannel, AIRosetteType rosetteType, Double gageOrientation, AIRosetteMeasurementType[] rosetteMeasurementTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsAccelerometerChannelStringStringDoubleDoubleAIExcitationSourceDoubleAIAccelerationUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIAccelerationUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsAccelerometerChannelStringStringDoubleDoubleAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsBridgeChannelStringStringDoubleDoubleAIBridgeUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsBridgeChannelStringStringDoubleDoubleAIBridgeUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsForceBridgeChannelStringStringDoubleDoubleAIForceUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsForceBridgeChannelStringStringDoubleDoubleAIForceUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsForceBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsLvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeAILvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AILvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsLvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsMicrophoneChannelStringStringDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsMicrophoneChannelStringStringDoubleAITerminalConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsPressureBridgeChannelStringStringDoubleDoubleAIPressureUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsPressureBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsPressureBridgeChannelStringStringDoubleDoubleAIPressureUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsPressureBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsPressureBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsPressureBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleAIResistanceUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIResistanceUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsRtdChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsRtdChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsRvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeAIRvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AIRvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsRvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsStrainGageChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleDoubleAIStrainUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double initialBridgeVoltage, Double leadWireResistance, AIStrainUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsStrainGageChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double initialBridgeVoltage, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsThermistorIExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermistorIExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsThermistorVExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermistorVExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double r1)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsThermocoupleChannelStringStringDoubleDoubleAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, Double cjcValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsTorqueBridgeChannelStringStringDoubleDoubleAITorqueUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsTorqueBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsTorqueBridgeChannelStringStringDoubleDoubleAITorqueUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsTorqueBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsTorqueBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsTorqueBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsVoltageChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIExcitationSourceDoubleAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTedsVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateThermistorIExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateThermistorIExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, Double a, Double b, Double c)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateThermistorVExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateThermistorVExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double a, Double b, Double c, Double r1)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsAIThermocoupleCjcSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIThermocoupleCjcSource cjcSource, Double cjcValue, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsAIThermocoupleTypeAIThermocoupleCjcSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIThermocoupleType thermocoupleType, AIThermocoupleCjcSource cjcSource, Double cjcValue, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateThermocoupleChannelStringStringDoubleDoubleAIThermocoupleTypeAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIThermocoupleType thermocoupleType, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateThermocoupleChannelStringStringDoubleDoubleAIThermocoupleTypeAITemperatureUnitsDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIThermocoupleType thermocoupleType, AITemperatureUnits units, Double cjcValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateThermocoupleChannelStringStringDoubleDoubleAIThermocoupleTypeAITemperatureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIThermocoupleType thermocoupleType, AITemperatureUnits units, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgePolynomialChannelStringStringDoubleDoubleAITorqueUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgePolynomialChannelStringStringDoubleDoubleAITorqueUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgePolynomialChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgeTableChannelStringStringDoubleDoubleAITorqueUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgeTableChannelStringStringDoubleDoubleAITorqueUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgeTableChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgeTwoPointLinearChannelStringStringDoubleDoubleAITorqueUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgeTwoPointLinearChannelStringStringDoubleDoubleAITorqueUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateTorqueBridgeTwoPointLinearChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVelocityIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIVelocityUnitsDoubleAIVelocityIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateVelocityIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVelocityUnits units, Double sensitivity, AIVelocityIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVelocityIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIVelocityUnitsStringDoubleAIVelocityIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateVelocityIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVelocityUnits units, String customScaleName, Double sensitivity, AIVelocityIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVelocityIepeChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIVelocityIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateVelocityIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIVelocityIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIBridgeConfigurationAIExcitationSourceDoubleBooleanAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIBridgeConfigurationAIExcitationSourceDoubleBooleanString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsAIBridgeConfigurationAIExcitationSourceDoubleBooleanString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIVoltageUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource excitationSource, Double excitationValue, Boolean useExcitationForScaling, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIVoltageUnits units, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageRmsChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageAcrmsUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageAcrmsUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageRmsChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageAcrmsUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageAcrmsUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.CreateVoltageRmsChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.GetEnumerator">
            <summary>Sets the Shim of AIChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.ICollection_CountGet">
            <summary>Sets the Shim of AIChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.InvalidateEnumerators">
            <summary>Sets the Shim of AIChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the Shim of AIChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.ItemGetInt64">
            <summary>Sets the Shim of AIChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.ItemGetString">
            <summary>Sets the Shim of AIChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.SyncRootGet">
            <summary>Sets the Shim of AIChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.AllInstances.ToString01">
            <summary>Sets the Shim of AIChannelCollection.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of AIChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.ConstructorTask">
            <summary>Sets the Shim of AIChannelCollection.AIChannelCollection(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CopyToArrayInt32">
            <summary>Sets the Shim of AIChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CountGet">
            <summary>Sets the Shim of AIChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerationChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsDoubleAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, Double sensitivity, AIAccelerationChargeSensitivityUnits sensitivityUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerationChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsStringDoubleAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, String customScaleName, Double sensitivity, AIAccelerationChargeSensitivityUnits sensitivityUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerationChargeChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIAccelerationChargeSensitivityUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIAccelerationChargeSensitivityUnits sensitivityUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerationFourWireDCVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsDoubleAIAccelerationFourWireDCVoltageSensitivityUnitsAIExcitationSourceDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationFourWireDCVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, Double sensitivity, AIAccelerationFourWireDCVoltageSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerationFourWireDCVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsStringDoubleAIAccelerationFourWireDCVoltageSensitivityUnitsAIExcitationSourceDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationFourWireDCVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, String customScaleName, Double sensitivity, AIAccelerationFourWireDCVoltageSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerationFourWireDCVoltageChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIAccelerationFourWireDCVoltageSensitivityUnitsAIExcitationSourceDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerationFourWireDCVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIAccelerationFourWireDCVoltageSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerometerChannelStringStringAITerminalConfigurationDoubleDoubleAIAccelerationUnitsDoubleAIAccelerometerSensitivityUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIAccelerationUnits units, Double sensitivity, AIAccelerometerSensitivityUnits sensitivityUnits, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerometerChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAIAccelerometerSensitivityUnitsAIExcitationSourceDoubleAIAccelerationUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, Double sensitivity, AIAccelerometerSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIAccelerationUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerometerChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAIAccelerometerSensitivityUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, Double sensitivity, AIAccelerometerSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateAccelerometerChannelStringStringDoubleDoubleAIAccelerationUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIAccelerationUnits units, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateBridgeChannelStringStringDoubleDoubleAIBridgeUnitsAIBridgeConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateBridgeChannelStringStringDoubleDoubleAIBridgeUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateBridgeChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateBuiltInSensorTemperatureChannelStringStringAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateBuiltInSensorTemperatureChannel(String physicalChannelName, String nameToAssignChannel, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateChannelStringStringAIMeasurementTypeString">
            <summary>Sets the Shim of AIChannelCollection.CreateChannel(String physicalChannelName, String nameToAssignChannel, AIMeasurementType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateChannelStringStringAIMeasurementTypeStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateChannel(String physicalChannelName, String nameToAssignChannel, AIMeasurementType type, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIChargeUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIChargeUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateChargeChannelStringStringAITerminalConfigurationDoubleDoubleAIChargeUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIChargeUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateChargeChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateChargeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnitsAICurrentShuntLocationDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units, AICurrentShuntLocation shuntResistorLoc, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnitsAICurrentShuntLocationDoubleStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units, AICurrentShuntLocation shuntResistorLoc, Double externalShuntResistorValue, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentAcrmsUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentAcrmsUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentAcrmsUnitsAICurrentShuntLocationDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentAcrmsUnits units, AICurrentShuntLocation shuntResistorLoc, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAICurrentAcrmsUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, AICurrentAcrmsUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateCurrentRmsChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateCurrentRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateDeviceTemperatureChannelStringStringAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateDeviceTemperatureChannel(String physicalChannelName, String nameToAssignChannel, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateEddyCurrentProximityProbeChannelStringStringDoubleDoubleAIEddyCurrentProximityProbeUnitsDoubleAIEddyCurrentProximityProbeSensitivityUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateEddyCurrentProximityProbeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIEddyCurrentProximityProbeUnits units, Double sensitivity, AIEddyCurrentProximityProbeSensitivityUnits sensitivityUnits, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateEddyCurrentProximityProbeChannelStringStringDoubleDoubleDoubleAIEddyCurrentProximityProbeSensitivityUnitsAIEddyCurrentProximityProbeUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateEddyCurrentProximityProbeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIEddyCurrentProximityProbeSensitivityUnits sensitivityUnits, AIEddyCurrentProximityProbeUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateEddyCurrentProximityProbeChannelStringStringDoubleDoubleDoubleAIEddyCurrentProximityProbeSensitivityUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateEddyCurrentProximityProbeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIEddyCurrentProximityProbeSensitivityUnits sensitivityUnits, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgePolynomialChannelStringStringDoubleDoubleAIForceUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgePolynomialChannelStringStringDoubleDoubleAIForceUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgePolynomialChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgeTableChannelStringStringDoubleDoubleAIForceUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgeTableChannelStringStringDoubleDoubleAIForceUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgeTableChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgeTwoPointLinearChannelStringStringDoubleDoubleAIForceUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgeTwoPointLinearChannelStringStringDoubleDoubleAIForceUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceBridgeTwoPointLinearChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateForceBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsDoubleAIForceIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, Double sensitivity, AIForceIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsStringDoubleAIForceIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, Double sensitivity, AIForceIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIForceIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIForceIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateFrequencyVoltageChannelStringStringDoubleDoubleAIFrequencyUnitsDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateFrequencyVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIFrequencyUnits units, Double thresholdVoltage, Double hysteresis, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateFrequencyVoltageChannelStringStringDoubleDoubleDoubleDoubleAIFrequencyUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateFrequencyVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double thresholdVoltage, Double hysteresis, AIFrequencyUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateFrequencyVoltageChannelStringStringDoubleDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateFrequencyVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double thresholdVoltage, Double hysteresis, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateLvdtChannelStringStringDoubleDoubleAILvdtUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AILvdtUnits units, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateLvdtChannelStringStringDoubleDoubleAILvdtUnitsDoubleAILvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AILvdtUnits units, Double sensitivity, AILvdtSensitivityUnits sensitivityUnits, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateLvdtChannelStringStringDoubleDoubleDoubleAILvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeAILvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AILvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AILvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateLvdtChannelStringStringDoubleDoubleDoubleAILvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AILvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateMicrophoneChannelStringStringDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateMicrophoneChannelStringStringDoubleDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double microphoneSensitivity, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateMicrophoneChannelStringStringDoubleDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double microphoneSensitivity, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateMicrophoneChannelStringStringDoubleDoubleAITerminalConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double microphoneSensitivity, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePowerChannelStringStringDoubleDoubleBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreatePowerChannel(String physicalChannelName, String nameToAssignChannel, Double voltageSetpoint, Double currentSetpoint, Boolean outputEnable)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgePolynomialChannelStringStringDoubleDoubleAIPressureUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgePolynomialChannelStringStringDoubleDoubleAIPressureUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgePolynomialChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgeTableChannelStringStringDoubleDoubleAIPressureUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgeTableChannelStringStringDoubleDoubleAIPressureUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgeTableChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgeTwoPointLinearChannelStringStringDoubleDoubleAIPressureUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgeTwoPointLinearChannelStringStringDoubleDoubleAIPressureUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreatePressureBridgeTwoPointLinearChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreatePressureBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleAIResistanceUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIResistanceUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateResistanceChannelStringStringDoubleDoubleAIResistanceUnitsAIResistanceConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateResistanceChannelStringStringDoubleDoubleAIResistanceUnitsAIResistanceConfigurationAIExcitationSourceDoubleStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource excitationSource, Double excitationValue, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateRosetteStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationDoubleAIExcitationSourceDoubleDoubleDoubleDoubleAIRosetteTypeDoubleAIRosetteMeasurementTypeArray">
            <summary>Sets the Shim of AIChannelCollection.CreateRosetteStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, Double leadWireResistance, AIExcitationSource excitationSource, Double excitationValue, Double gageFactor, Double nominalGageResistance, Double poissonRatio, AIRosetteType rosetteType, Double rosetteStrainGageOrientation, AIRosetteMeasurementType[] rosetteMeasurementTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateRosetteStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationDoubleAIExcitationSourceDoubleDoubleDoubleDoubleAIRosetteTypeDoubleAIRosetteMeasurementTypeArrayAIStrainUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateRosetteStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, Double leadWireResistance, AIExcitationSource excitationSource, Double excitationValue, Double gageFactor, Double nominalGageResistance, Double poissonRatio, AIRosetteType rosetteType, Double rosetteStrainGageOrientation, AIRosetteMeasurementType[] rosetteMeasurementTypes, AIStrainUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateRtdChannelStringStringDoubleDoubleAITemperatureUnitsAIRtdTypeAIResistanceConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateRtdChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIRtdType type, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, Double r0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateRvdtChannelStringStringDoubleDoubleAIRvdtUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIRvdtUnits units, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateRvdtChannelStringStringDoubleDoubleAIRvdtUnitsDoubleAIRvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIRvdtUnits units, Double sensitivity, AIRvdtSensitivityUnits sensitivityUnits, AIExcitationSource excitationSource, Double excitationValue, Double excitationFrequency, AIACExcitationWireMode excitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateRvdtChannelStringStringDoubleDoubleDoubleAIRvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeAIRvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIRvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AIRvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateRvdtChannelStringStringDoubleDoubleDoubleAIRvdtSensitivityUnitsAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double sensitivity, AIRvdtSensitivityUnits sensitivityUnits, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDoubleDoubleAIStrainUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double gageFactor, Double initialBridgeVoltage, Double nominalGageResistance, Double poissonRatio, Double leadWireResistance, AIStrainUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateStrainGageChannelStringStringDoubleDoubleAIStrainGageConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainGageConfiguration strainGageConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double gageFactor, Double initialBridgeVoltage, Double nominalGageResistance, Double poissonRatio, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateStrainGageChannelStringStringDoubleDoubleAIStrainUnitsAIExcitationSourceDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainUnits units, AIExcitationSource excitationSource, Double excitationValue, Double initialBridgeVoltage, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateStrainGageChannelStringStringDoubleDoubleAIStrainUnitsAIStrainGageConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIStrainUnits units, AIStrainGageConfiguration strainGageConfiguration, AIExcitationSource excitationSource, Double excitationValue, Double gageFactor, Double initialBridgeVoltage, Double nominalGageResist, Double poissonRatio, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateStrainRosetteChannelStringStringAIRosetteTypeDoubleAIRosetteMeasurementTypeArray">
            <summary>Sets the Shim of AIChannelCollection.CreateStrainRosetteChannel(String virtualChannelName, String physicalChannel, AIRosetteType rosetteType, Double gageOrientation, AIRosetteMeasurementType[] rosetteMeasurementTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsAccelerometerChannelStringStringDoubleDoubleAIExcitationSourceDoubleAIAccelerationUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIAccelerationUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsAccelerometerChannelStringStringDoubleDoubleAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsAccelerometerChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsBridgeChannelStringStringDoubleDoubleAIBridgeUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsBridgeChannelStringStringDoubleDoubleAIBridgeUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIBridgeUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleAICurrentUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, AICurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, Double externalShuntResistorValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsCurrentChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsCurrentChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsForceBridgeChannelStringStringDoubleDoubleAIForceUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsForceBridgeChannelStringStringDoubleDoubleAIForceUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsForceBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIForceUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIForceUnits units, String customScaleName, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsForceIepeChannelStringStringAITerminalConfigurationDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsForceIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsLvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeAILvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AILvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsLvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsLvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsMicrophoneChannelStringStringDoubleAITerminalConfigurationAIExcitationSourceDoubleAISoundPressureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AISoundPressureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsMicrophoneChannelStringStringDoubleAITerminalConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsMicrophoneChannel(String physicalChannelName, String nameToAssignChannel, Double maximumSoundPressureLevel, AITerminalConfiguration terminalConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsPressureBridgeChannelStringStringDoubleDoubleAIPressureUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsPressureBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsPressureBridgeChannelStringStringDoubleDoubleAIPressureUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsPressureBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIPressureUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsPressureBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsPressureBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleAIResistanceUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, AIResistanceUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsResistanceChannelStringStringDoubleDoubleAIResistanceConfigurationAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsResistanceChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsRtdChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsRtdChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsRvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeAIRvdtUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, AIRvdtUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsRvdtChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleAIACExcitationWireModeString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsRvdtChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double voltageExcitationFrequency, AIACExcitationWireMode voltageExcitationWireMode, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsStrainGageChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleDoubleAIStrainUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double initialBridgeVoltage, Double leadWireResistance, AIStrainUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsStrainGageChannelStringStringDoubleDoubleAIExcitationSourceDoubleDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsStrainGageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double initialBridgeVoltage, Double leadWireResistance, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsThermistorIExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermistorIExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsThermistorVExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermistorVExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double r1)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsThermocoupleChannelStringStringDoubleDoubleAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, Double cjcValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsTorqueBridgeChannelStringStringDoubleDoubleAITorqueUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsTorqueBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsTorqueBridgeChannelStringStringDoubleDoubleAITorqueUnitsStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsTorqueBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsTorqueBridgeChannelStringStringDoubleDoubleStringAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsTorqueBridgeChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsVoltageChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIExcitationSourceDoubleAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTedsVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateTedsVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateThermistorIExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateThermistorIExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource currentExcitationSource, Double currentExcitationValue, Double a, Double b, Double c)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateThermistorVExChannelStringStringDoubleDoubleAITemperatureUnitsAIResistanceConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateThermistorVExChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIResistanceConfiguration resistanceConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double a, Double b, Double c, Double r1)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsAIThermocoupleCjcSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIThermocoupleCjcSource cjcSource, Double cjcValue, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateThermocoupleChannelStringStringDoubleDoubleAITemperatureUnitsAIThermocoupleTypeAIThermocoupleCjcSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITemperatureUnits units, AIThermocoupleType thermocoupleType, AIThermocoupleCjcSource cjcSource, Double cjcValue, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateThermocoupleChannelStringStringDoubleDoubleAIThermocoupleTypeAITemperatureUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIThermocoupleType thermocoupleType, AITemperatureUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateThermocoupleChannelStringStringDoubleDoubleAIThermocoupleTypeAITemperatureUnitsDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIThermocoupleType thermocoupleType, AITemperatureUnits units, Double cjcValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateThermocoupleChannelStringStringDoubleDoubleAIThermocoupleTypeAITemperatureUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateThermocoupleChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AIThermocoupleType thermocoupleType, AITemperatureUnits units, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgePolynomialChannelStringStringDoubleDoubleAITorqueUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgePolynomialChannelStringStringDoubleDoubleAITorqueUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgePolynomialChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayDoubleArrayAIBridgeElectricalUnitsAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgePolynomialChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] forwardCoefficients, Double[] reverseCoefficients, AIBridgeElectricalUnits electricalUnits, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgeTableChannelStringStringDoubleDoubleAITorqueUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgeTableChannelStringStringDoubleDoubleAITorqueUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgeTableChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleArrayAIBridgeElectricalUnitsDoubleArrayAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTableChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double[] electricalValues, AIBridgeElectricalUnits electricalUnits, Double[] physicalValues, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgeTwoPointLinearChannelStringStringDoubleDoubleAITorqueUnitsAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgeTwoPointLinearChannelStringStringDoubleDoubleAITorqueUnitsStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AITorqueUnits units, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateTorqueBridgeTwoPointLinearChannelStringStringDoubleDoubleStringAIBridgeConfigurationAIExcitationSourceDoubleDoubleDoubleDoubleAIBridgeElectricalUnitsDoubleDoubleAIBridgePhysicalUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateTorqueBridgeTwoPointLinearChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Double nominalBridgeResistance, Double firstElectricalValue, Double secondElectricalValue, AIBridgeElectricalUnits electricalUnits, Double firstPhysicalValue, Double secondPhysicalValue, AIBridgePhysicalUnits physicalUnits)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVelocityIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIVelocityUnitsDoubleAIVelocityIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateVelocityIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVelocityUnits units, Double sensitivity, AIVelocityIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVelocityIepeChannelStringStringAITerminalConfigurationDoubleDoubleAIVelocityUnitsStringDoubleAIVelocityIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateVelocityIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVelocityUnits units, String customScaleName, Double sensitivity, AIVelocityIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVelocityIepeChannelStringStringAITerminalConfigurationDoubleDoubleStringDoubleAIVelocityIepeSensorSensitivityUnitsAIExcitationSourceDouble">
            <summary>Sets the Shim of AIChannelCollection.CreateVelocityIepeChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName, Double sensitivity, AIVelocityIepeSensorSensitivityUnits sensitivityUnits, AIExcitationSource currentExcitationSource, Double currentExcitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsStringBoolean">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageUnits units, String customScaleName, Boolean isAITedsChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIBridgeConfigurationAIExcitationSourceDoubleBooleanAIVoltageUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling, AIVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIBridgeConfigurationAIExcitationSourceDoubleBooleanString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource voltageExcitationSource, Double voltageExcitationValue, Boolean useExcitationForScaling, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsAIBridgeConfigurationAIExcitationSourceDoubleBooleanString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIVoltageUnits units, AIBridgeConfiguration bridgeConfiguration, AIExcitationSource excitationSource, Double excitationValue, Boolean useExcitationForScaling, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageChannelWithExcitationStringStringAITerminalConfigurationDoubleDoubleAIVoltageUnitsAIExcitationSourceDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageChannelWithExcitation(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration configuration, Double minimumValue, Double maximumValue, AIVoltageUnits units, AIExcitationSource excitationSource, Double excitationValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageRmsChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageAcrmsUnits">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageAcrmsUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageRmsChannelStringStringAITerminalConfigurationDoubleDoubleAIVoltageAcrmsUnitsString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, AIVoltageAcrmsUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.CreateVoltageRmsChannelStringStringAITerminalConfigurationDoubleDoubleString">
            <summary>Sets the Shim of AIChannelCollection.CreateVoltageRmsChannel(String physicalChannelName, String nameToAssignChannel, AITerminalConfiguration terminalConfiguration, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.GetEnumerator">
            <summary>Sets the Shim of AIChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.ICollection_CountGet">
            <summary>Sets the Shim of AIChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.InvalidateEnumerators">
            <summary>Sets the Shim of AIChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.IsSynchronizedGet">
            <summary>Sets the Shim of AIChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.ItemGetInt64">
            <summary>Sets the Shim of AIChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.ItemGetString">
            <summary>Sets the Shim of AIChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.SyncRootGet">
            <summary>Sets the Shim of AIChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIChannelCollection.ToString">
            <summary>Sets the Shim of AIChannelCollection.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement">
            <summary>Shim type of NationalInstruments.DAQmx.AIPowerMeasurement</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.EqualityOpAIPowerMeasurementAIPowerMeasurement">
            <summary>Sets the Shim of AIPowerMeasurement.op_Equality(AIPowerMeasurement x, AIPowerMeasurement y)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.EqualsAIPowerMeasurementAIPowerMeasurement">
            <summary>Sets the Shim of AIPowerMeasurement.Equals(AIPowerMeasurement x, AIPowerMeasurement y)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIPowerMeasurement.InequalityOpAIPowerMeasurementAIPowerMeasurement">
            <summary>Sets the Shim of AIPowerMeasurement.op_Inequality(AIPowerMeasurement x, AIPowerMeasurement y)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement">
            <summary>Shim type of NationalInstruments.DAQmx.AIUnscaledPowerMeasurement</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.EqualityOpAIUnscaledPowerMeasurementAIUnscaledPowerMeasurement">
            <summary>Sets the Shim of AIUnscaledPowerMeasurement.op_Equality(AIUnscaledPowerMeasurement x, AIUnscaledPowerMeasurement y)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.EqualsAIUnscaledPowerMeasurementAIUnscaledPowerMeasurement">
            <summary>Sets the Shim of AIUnscaledPowerMeasurement.Equals(AIUnscaledPowerMeasurement x, AIUnscaledPowerMeasurement y)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAIUnscaledPowerMeasurement.InequalityOpAIUnscaledPowerMeasurementAIUnscaledPowerMeasurement">
            <summary>Sets the Shim of AIUnscaledPowerMeasurement.op_Inequality(AIUnscaledPowerMeasurement x, AIUnscaledPowerMeasurement y)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAOChannel">
            <summary>Shim type of NationalInstruments.DAQmx.AOChannel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannel.#ctor(NationalInstruments.DAQmx.AOChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.CommonModeOffsetGet">
            <summary>Sets the Shim of AOChannel.get_CommonModeOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.CommonModeOffsetSetDouble">
            <summary>Sets the Shim of AOChannel.set_CommonModeOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.CurrentUnitsGet">
            <summary>Sets the Shim of AOChannel.get_CurrentUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.CurrentUnitsSetAOCurrentUnits">
            <summary>Sets the Shim of AOChannel.set_CurrentUnits(AOCurrentUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.CustomScaleNameGet">
            <summary>Sets the Shim of AOChannel.get_CustomScaleName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.CustomScaleNameSetString">
            <summary>Sets the Shim of AOChannel.set_CustomScaleName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacAllowConnectReferenceToGroundGet">
            <summary>Sets the Shim of AOChannel.get_DacAllowConnectReferenceToGround()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacAllowConnectReferenceToGroundSetBoolean">
            <summary>Sets the Shim of AOChannel.set_DacAllowConnectReferenceToGround(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacConnectReferenceToGroundGet">
            <summary>Sets the Shim of AOChannel.get_DacConnectReferenceToGround()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacConnectReferenceToGroundSetBoolean">
            <summary>Sets the Shim of AOChannel.set_DacConnectReferenceToGround(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacOffsetExternalSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacOffsetExternalSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacOffsetExternalSourceSetString">
            <summary>Sets the Shim of AOChannel.set_DacOffsetExternalSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacOffsetSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacOffsetSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacOffsetSourceSetAODacOffsetSource">
            <summary>Sets the Shim of AOChannel.set_DacOffsetSource(AODacOffsetSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacOffsetValueGet">
            <summary>Sets the Shim of AOChannel.get_DacOffsetValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacOffsetValueSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacOffsetValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacRangeHighGet">
            <summary>Sets the Shim of AOChannel.get_DacRangeHigh()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacRangeHighSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacRangeHigh(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacRangeLowGet">
            <summary>Sets the Shim of AOChannel.get_DacRangeLow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacRangeLowSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacRangeLow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacReferenceExternalSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacReferenceExternalSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacReferenceExternalSourceSetString">
            <summary>Sets the Shim of AOChannel.set_DacReferenceExternalSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacReferenceSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacReferenceSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacReferenceSourceSetAODacReferenceSource">
            <summary>Sets the Shim of AOChannel.set_DacReferenceSource(AODacReferenceSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacReferenceValueGet">
            <summary>Sets the Shim of AOChannel.get_DacReferenceValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DacReferenceValueSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacReferenceValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DataTransferMechanismGet">
            <summary>Sets the Shim of AOChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DataTransferMechanismSetAODataTransferMechanism">
            <summary>Sets the Shim of AOChannel.set_DataTransferMechanism(AODataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DataTransferRequestConditionGet">
            <summary>Sets the Shim of AOChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DataTransferRequestConditionSetAODataTransferRequestCondition">
            <summary>Sets the Shim of AOChannel.set_DataTransferRequestCondition(AODataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.DeviceScalingCoefficientsGet">
            <summary>Sets the Shim of AOChannel.get_DeviceScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.EnhancedImageRejectionEnableGet">
            <summary>Sets the Shim of AOChannel.get_EnhancedImageRejectionEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.EnhancedImageRejectionEnableSetBoolean">
            <summary>Sets the Shim of AOChannel.set_EnhancedImageRejectionEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FilterDelayAdjustmentGet">
            <summary>Sets the Shim of AOChannel.get_FilterDelayAdjustment()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FilterDelayAdjustmentSetDouble">
            <summary>Sets the Shim of AOChannel.set_FilterDelayAdjustment(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FilterDelayGet">
            <summary>Sets the Shim of AOChannel.get_FilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FilterDelaySetDouble">
            <summary>Sets the Shim of AOChannel.set_FilterDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FilterDelayUnitsGet">
            <summary>Sets the Shim of AOChannel.get_FilterDelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FilterDelayUnitsSetAOFilterDelayUnits">
            <summary>Sets the Shim of AOChannel.set_FilterDelayUnits(AOFilterDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationAmplitudeGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationAmplitude()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationAmplitudeSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationAmplitude(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationFMDeviationGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationFMDeviation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationFMDeviationSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationFMDeviation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationFrequencyGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationFrequencySetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationModulationTypeGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationModulationType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationModulationTypeSetAOFunctionGenerationModulationType">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationModulationType(AOFunctionGenerationModulationType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationOffsetGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationOffsetSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationSquareDutyCycleGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationSquareDutyCycle()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationSquareDutyCycleSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationSquareDutyCycle(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationStartPhaseGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationStartPhase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationStartPhaseSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationStartPhase(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationTypeGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.FunctionGenerationTypeSetAOFunctionGenerationType">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationType(AOFunctionGenerationType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.GainGet">
            <summary>Sets the Shim of AOChannel.get_Gain()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.GainSetDouble">
            <summary>Sets the Shim of AOChannel.set_Gain(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.IdleOutputBehaviorGet">
            <summary>Sets the Shim of AOChannel.get_IdleOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.IdleOutputBehaviorSetAOIdleOutputBehavior">
            <summary>Sets the Shim of AOChannel.set_IdleOutputBehavior(AOIdleOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.LoadImpedanceGet">
            <summary>Sets the Shim of AOChannel.get_LoadImpedance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.LoadImpedanceSetDouble">
            <summary>Sets the Shim of AOChannel.set_LoadImpedance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.MaximumGet">
            <summary>Sets the Shim of AOChannel.get_Maximum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.MaximumSetDouble">
            <summary>Sets the Shim of AOChannel.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.MemoryMappingEnableGet">
            <summary>Sets the Shim of AOChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of AOChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.MinimumGet">
            <summary>Sets the Shim of AOChannel.get_Minimum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.MinimumSetDouble">
            <summary>Sets the Shim of AOChannel.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.OutputImpedanceGet">
            <summary>Sets the Shim of AOChannel.get_OutputImpedance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.OutputImpedanceSetDouble">
            <summary>Sets the Shim of AOChannel.set_OutputImpedance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.OutputTypeGet">
            <summary>Sets the Shim of AOChannel.get_OutputType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.ReglitchEnableGet">
            <summary>Sets the Shim of AOChannel.get_ReglitchEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.ReglitchEnableSetBoolean">
            <summary>Sets the Shim of AOChannel.set_ReglitchEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.ResolutionGet">
            <summary>Sets the Shim of AOChannel.get_Resolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.ResolutionUnitsGet">
            <summary>Sets the Shim of AOChannel.get_ResolutionUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.ResolutionUnitsSetAOResolutionUnits">
            <summary>Sets the Shim of AOChannel.set_ResolutionUnits(AOResolutionUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.TerminalConfigurationGet">
            <summary>Sets the Shim of AOChannel.get_TerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.TerminalConfigurationSetAOTerminalConfiguration">
            <summary>Sets the Shim of AOChannel.set_TerminalConfiguration(AOTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.UsbTransferRequestCountGet">
            <summary>Sets the Shim of AOChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of AOChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of AOChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of AOChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.UseOnlyOnBoardMemoryGet">
            <summary>Sets the Shim of AOChannel.get_UseOnlyOnBoardMemory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.UseOnlyOnBoardMemorySetBoolean">
            <summary>Sets the Shim of AOChannel.set_UseOnlyOnBoardMemory(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.VoltageCurrentLimitGet">
            <summary>Sets the Shim of AOChannel.get_VoltageCurrentLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.VoltageCurrentLimitSetDouble">
            <summary>Sets the Shim of AOChannel.set_VoltageCurrentLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.VoltageUnitsGet">
            <summary>Sets the Shim of AOChannel.get_VoltageUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.AllInstances.VoltageUnitsSetAOVoltageUnits">
            <summary>Sets the Shim of AOChannel.set_VoltageUnits(AOVoltageUnits value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannel.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.CommonModeOffsetGet">
            <summary>Sets the Shim of AOChannel.get_CommonModeOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.CommonModeOffsetSetDouble">
            <summary>Sets the Shim of AOChannel.set_CommonModeOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.ConstructorStringTask">
            <summary>Sets the Shim of AOChannel.AOChannel(String str, Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.CurrentUnitsGet">
            <summary>Sets the Shim of AOChannel.get_CurrentUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.CurrentUnitsSetAOCurrentUnits">
            <summary>Sets the Shim of AOChannel.set_CurrentUnits(AOCurrentUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.CustomScaleNameGet">
            <summary>Sets the Shim of AOChannel.get_CustomScaleName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.CustomScaleNameSetString">
            <summary>Sets the Shim of AOChannel.set_CustomScaleName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacAllowConnectReferenceToGroundGet">
            <summary>Sets the Shim of AOChannel.get_DacAllowConnectReferenceToGround()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacAllowConnectReferenceToGroundSetBoolean">
            <summary>Sets the Shim of AOChannel.set_DacAllowConnectReferenceToGround(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacConnectReferenceToGroundGet">
            <summary>Sets the Shim of AOChannel.get_DacConnectReferenceToGround()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacConnectReferenceToGroundSetBoolean">
            <summary>Sets the Shim of AOChannel.set_DacConnectReferenceToGround(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacOffsetExternalSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacOffsetExternalSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacOffsetExternalSourceSetString">
            <summary>Sets the Shim of AOChannel.set_DacOffsetExternalSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacOffsetSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacOffsetSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacOffsetSourceSetAODacOffsetSource">
            <summary>Sets the Shim of AOChannel.set_DacOffsetSource(AODacOffsetSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacOffsetValueGet">
            <summary>Sets the Shim of AOChannel.get_DacOffsetValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacOffsetValueSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacOffsetValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacRangeHighGet">
            <summary>Sets the Shim of AOChannel.get_DacRangeHigh()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacRangeHighSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacRangeHigh(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacRangeLowGet">
            <summary>Sets the Shim of AOChannel.get_DacRangeLow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacRangeLowSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacRangeLow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacReferenceExternalSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacReferenceExternalSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacReferenceExternalSourceSetString">
            <summary>Sets the Shim of AOChannel.set_DacReferenceExternalSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacReferenceSourceGet">
            <summary>Sets the Shim of AOChannel.get_DacReferenceSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacReferenceSourceSetAODacReferenceSource">
            <summary>Sets the Shim of AOChannel.set_DacReferenceSource(AODacReferenceSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacReferenceValueGet">
            <summary>Sets the Shim of AOChannel.get_DacReferenceValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DacReferenceValueSetDouble">
            <summary>Sets the Shim of AOChannel.set_DacReferenceValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DataTransferMechanismGet">
            <summary>Sets the Shim of AOChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DataTransferMechanismSetAODataTransferMechanism">
            <summary>Sets the Shim of AOChannel.set_DataTransferMechanism(AODataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DataTransferRequestConditionGet">
            <summary>Sets the Shim of AOChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DataTransferRequestConditionSetAODataTransferRequestCondition">
            <summary>Sets the Shim of AOChannel.set_DataTransferRequestCondition(AODataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.DeviceScalingCoefficientsGet">
            <summary>Sets the Shim of AOChannel.get_DeviceScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.EnhancedImageRejectionEnableGet">
            <summary>Sets the Shim of AOChannel.get_EnhancedImageRejectionEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.EnhancedImageRejectionEnableSetBoolean">
            <summary>Sets the Shim of AOChannel.set_EnhancedImageRejectionEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FilterDelayAdjustmentGet">
            <summary>Sets the Shim of AOChannel.get_FilterDelayAdjustment()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FilterDelayAdjustmentSetDouble">
            <summary>Sets the Shim of AOChannel.set_FilterDelayAdjustment(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FilterDelayGet">
            <summary>Sets the Shim of AOChannel.get_FilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FilterDelaySetDouble">
            <summary>Sets the Shim of AOChannel.set_FilterDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FilterDelayUnitsGet">
            <summary>Sets the Shim of AOChannel.get_FilterDelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FilterDelayUnitsSetAOFilterDelayUnits">
            <summary>Sets the Shim of AOChannel.set_FilterDelayUnits(AOFilterDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationAmplitudeGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationAmplitude()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationAmplitudeSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationAmplitude(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationFMDeviationGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationFMDeviation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationFMDeviationSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationFMDeviation(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationFrequencyGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationFrequencySetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationModulationTypeGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationModulationType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationModulationTypeSetAOFunctionGenerationModulationType">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationModulationType(AOFunctionGenerationModulationType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationOffsetGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationOffsetSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationSquareDutyCycleGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationSquareDutyCycle()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationSquareDutyCycleSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationSquareDutyCycle(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationStartPhaseGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationStartPhase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationStartPhaseSetDouble">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationStartPhase(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationTypeGet">
            <summary>Sets the Shim of AOChannel.get_FunctionGenerationType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.FunctionGenerationTypeSetAOFunctionGenerationType">
            <summary>Sets the Shim of AOChannel.set_FunctionGenerationType(AOFunctionGenerationType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.GainGet">
            <summary>Sets the Shim of AOChannel.get_Gain()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.GainSetDouble">
            <summary>Sets the Shim of AOChannel.set_Gain(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.IdleOutputBehaviorGet">
            <summary>Sets the Shim of AOChannel.get_IdleOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.IdleOutputBehaviorSetAOIdleOutputBehavior">
            <summary>Sets the Shim of AOChannel.set_IdleOutputBehavior(AOIdleOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.LoadImpedanceGet">
            <summary>Sets the Shim of AOChannel.get_LoadImpedance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.LoadImpedanceSetDouble">
            <summary>Sets the Shim of AOChannel.set_LoadImpedance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.MaximumGet">
            <summary>Sets the Shim of AOChannel.get_Maximum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.MaximumSetDouble">
            <summary>Sets the Shim of AOChannel.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.MemoryMappingEnableGet">
            <summary>Sets the Shim of AOChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of AOChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.MinimumGet">
            <summary>Sets the Shim of AOChannel.get_Minimum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.MinimumSetDouble">
            <summary>Sets the Shim of AOChannel.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.OutputImpedanceGet">
            <summary>Sets the Shim of AOChannel.get_OutputImpedance()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.OutputImpedanceSetDouble">
            <summary>Sets the Shim of AOChannel.set_OutputImpedance(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.OutputTypeGet">
            <summary>Sets the Shim of AOChannel.get_OutputType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.ReglitchEnableGet">
            <summary>Sets the Shim of AOChannel.get_ReglitchEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.ReglitchEnableSetBoolean">
            <summary>Sets the Shim of AOChannel.set_ReglitchEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.ResolutionGet">
            <summary>Sets the Shim of AOChannel.get_Resolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.ResolutionUnitsGet">
            <summary>Sets the Shim of AOChannel.get_ResolutionUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.ResolutionUnitsSetAOResolutionUnits">
            <summary>Sets the Shim of AOChannel.set_ResolutionUnits(AOResolutionUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.TerminalConfigurationGet">
            <summary>Sets the Shim of AOChannel.get_TerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.TerminalConfigurationSetAOTerminalConfiguration">
            <summary>Sets the Shim of AOChannel.set_TerminalConfiguration(AOTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.UsbTransferRequestCountGet">
            <summary>Sets the Shim of AOChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of AOChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of AOChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of AOChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.UseOnlyOnBoardMemoryGet">
            <summary>Sets the Shim of AOChannel.get_UseOnlyOnBoardMemory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.UseOnlyOnBoardMemorySetBoolean">
            <summary>Sets the Shim of AOChannel.set_UseOnlyOnBoardMemory(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.VoltageCurrentLimitGet">
            <summary>Sets the Shim of AOChannel.get_VoltageCurrentLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.VoltageCurrentLimitSetDouble">
            <summary>Sets the Shim of AOChannel.set_VoltageCurrentLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.VoltageUnitsGet">
            <summary>Sets the Shim of AOChannel.get_VoltageUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannel.VoltageUnitsSetAOVoltageUnits">
            <summary>Sets the Shim of AOChannel.set_VoltageUnits(AOVoltageUnits value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection">
            <summary>Shim type of NationalInstruments.DAQmx.AOChannelCollection</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.#ctor(NationalInstruments.DAQmx.AOChannelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllGet">
            <summary>Sets the Shim of AOChannelCollection.get_All()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.AllGet">
            <summary>Sets the Shim of AOChannelCollection.get_All()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of AOChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the Shim of AOChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CountGet">
            <summary>Sets the Shim of AOChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateChannelStringStringAOOutputTypeString">
            <summary>Sets the Shim of AOChannelCollection.CreateChannel(String physicalChannelName, String nameToAssignChannel, AOOutputType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateCurrentChannelStringStringDoubleDoubleAOCurrentUnits">
            <summary>Sets the Shim of AOChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOCurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateCurrentChannelStringStringDoubleDoubleAOCurrentUnitsString">
            <summary>Sets the Shim of AOChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOCurrentUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateCurrentChannelStringStringDoubleDoubleString">
            <summary>Sets the Shim of AOChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateFunctionGenerationChannelStringStringAOFunctionGenerationTypeDoubleDouble">
            <summary>Sets the Shim of AOChannelCollection.CreateFunctionGenerationChannel(String physicalChannelName, String nameToAssignChannel, AOFunctionGenerationType waveformType, Double frequency, Double amplitude)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateFunctionGenerationChannelStringStringAOFunctionGenerationTypeDoubleDoubleDouble">
            <summary>Sets the Shim of AOChannelCollection.CreateFunctionGenerationChannel(String physicalChannelName, String nameToAssignChannel, AOFunctionGenerationType waveformType, Double frequency, Double amplitude, Double offset)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateVoltageChannelStringStringDoubleDoubleAOVoltageUnits">
            <summary>Sets the Shim of AOChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateVoltageChannelStringStringDoubleDoubleAOVoltageUnitsString">
            <summary>Sets the Shim of AOChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOVoltageUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.CreateVoltageChannelStringStringDoubleDoubleString">
            <summary>Sets the Shim of AOChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.GetEnumerator">
            <summary>Sets the Shim of AOChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.ICollection_CountGet">
            <summary>Sets the Shim of AOChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.InvalidateEnumerators">
            <summary>Sets the Shim of AOChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the Shim of AOChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.ItemGetInt64">
            <summary>Sets the Shim of AOChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.ItemGetString">
            <summary>Sets the Shim of AOChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.SyncRootGet">
            <summary>Sets the Shim of AOChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.AllInstances.ToString01">
            <summary>Sets the Shim of AOChannelCollection.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of AOChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.ConstructorTask">
            <summary>Sets the Shim of AOChannelCollection.AOChannelCollection(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CopyToArrayInt32">
            <summary>Sets the Shim of AOChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CountGet">
            <summary>Sets the Shim of AOChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateChannelStringStringAOOutputTypeString">
            <summary>Sets the Shim of AOChannelCollection.CreateChannel(String physicalChannelName, String nameToAssignChannel, AOOutputType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateCurrentChannelStringStringDoubleDoubleAOCurrentUnits">
            <summary>Sets the Shim of AOChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOCurrentUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateCurrentChannelStringStringDoubleDoubleAOCurrentUnitsString">
            <summary>Sets the Shim of AOChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOCurrentUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateCurrentChannelStringStringDoubleDoubleString">
            <summary>Sets the Shim of AOChannelCollection.CreateCurrentChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateFunctionGenerationChannelStringStringAOFunctionGenerationTypeDoubleDouble">
            <summary>Sets the Shim of AOChannelCollection.CreateFunctionGenerationChannel(String physicalChannelName, String nameToAssignChannel, AOFunctionGenerationType waveformType, Double frequency, Double amplitude)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateFunctionGenerationChannelStringStringAOFunctionGenerationTypeDoubleDoubleDouble">
            <summary>Sets the Shim of AOChannelCollection.CreateFunctionGenerationChannel(String physicalChannelName, String nameToAssignChannel, AOFunctionGenerationType waveformType, Double frequency, Double amplitude, Double offset)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateVoltageChannelStringStringDoubleDoubleAOVoltageUnits">
            <summary>Sets the Shim of AOChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOVoltageUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateVoltageChannelStringStringDoubleDoubleAOVoltageUnitsString">
            <summary>Sets the Shim of AOChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, AOVoltageUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.CreateVoltageChannelStringStringDoubleDoubleString">
            <summary>Sets the Shim of AOChannelCollection.CreateVoltageChannel(String physicalChannelName, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.GetEnumerator">
            <summary>Sets the Shim of AOChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.ICollection_CountGet">
            <summary>Sets the Shim of AOChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.InvalidateEnumerators">
            <summary>Sets the Shim of AOChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.IsSynchronizedGet">
            <summary>Sets the Shim of AOChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.ItemGetInt64">
            <summary>Sets the Shim of AOChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.ItemGetString">
            <summary>Sets the Shim of AOChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.SyncRootGet">
            <summary>Sets the Shim of AOChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAOChannelCollection.ToString">
            <summary>Sets the Shim of AOChannelCollection.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AdvanceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.#ctor(NationalInstruments.DAQmx.AdvanceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.ConfigureDigitalEdgeTriggerStringDigitalEdgeAdvanceTriggerEdge">
            <summary>Sets the Shim of AdvanceTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeAdvanceTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.ConfigureNone">
            <summary>Sets the Shim of AdvanceTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.ConfigureSoftwareTrigger">
            <summary>Sets the Shim of AdvanceTrigger.ConfigureSoftwareTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.DigitalEdgeGet">
            <summary>Sets the Shim of AdvanceTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of AdvanceTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.SendSoftwareTrigger">
            <summary>Sets the Shim of AdvanceTrigger.SendSoftwareTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AdvanceTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.TypeGet">
            <summary>Sets the Shim of AdvanceTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.AllInstances.TypeSetAdvanceTriggerType">
            <summary>Sets the Shim of AdvanceTrigger.set_Type(AdvanceTriggerType value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.ConfigureDigitalEdgeTriggerStringDigitalEdgeAdvanceTriggerEdge">
            <summary>Sets the Shim of AdvanceTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeAdvanceTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.ConfigureNone">
            <summary>Sets the Shim of AdvanceTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.ConfigureSoftwareTrigger">
            <summary>Sets the Shim of AdvanceTrigger.ConfigureSoftwareTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.ConstructorTask">
            <summary>Sets the Shim of AdvanceTrigger.AdvanceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.DigitalEdgeGet">
            <summary>Sets the Shim of AdvanceTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.InitializeSubobjects">
            <summary>Sets the Shim of AdvanceTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.SendSoftwareTrigger">
            <summary>Sets the Shim of AdvanceTrigger.SendSoftwareTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.ToString">
            <summary>Sets the Shim of AdvanceTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.TypeGet">
            <summary>Sets the Shim of AdvanceTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAdvanceTrigger.TypeSetAdvanceTriggerType">
            <summary>Sets the Shim of AdvanceTrigger.set_Type(AdvanceTriggerType value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogEdgeReferenceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.#ctor(NationalInstruments.DAQmx.AnalogEdgeReferenceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.CouplingGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.CouplingSetAnalogEdgeReferenceTriggerCoupling">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Coupling(AnalogEdgeReferenceTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.HysteresisGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Hysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.HysteresisSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Hysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.LevelGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Level()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.LevelSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Level(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.SlopeGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Slope()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.SlopeSetAnalogEdgeReferenceTriggerSlope">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Slope(AnalogEdgeReferenceTriggerSlope value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.AnalogEdgeReferenceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.CouplingGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.CouplingSetAnalogEdgeReferenceTriggerCoupling">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Coupling(AnalogEdgeReferenceTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.HysteresisGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Hysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.HysteresisSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Hysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.LevelGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Level()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.LevelSetDouble">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Level(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.SlopeGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Slope()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.SlopeSetAnalogEdgeReferenceTriggerSlope">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Slope(AnalogEdgeReferenceTriggerSlope value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.SourceGet">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.SourceSetString">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeReferenceTrigger.ToString">
            <summary>Sets the Shim of AnalogEdgeReferenceTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogEdgeStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.#ctor(NationalInstruments.DAQmx.AnalogEdgeStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.CouplingGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.CouplingSetAnalogEdgeStartTriggerCoupling">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Coupling(AnalogEdgeStartTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.HysteresisGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Hysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.HysteresisSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Hysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.LevelGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Level()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.LevelSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Level(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.SlopeGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Slope()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.SlopeSetAnalogEdgeStartTriggerSlope">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Slope(AnalogEdgeStartTriggerSlope value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.AnalogEdgeStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.CouplingGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.CouplingSetAnalogEdgeStartTriggerCoupling">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Coupling(AnalogEdgeStartTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.HysteresisGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Hysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.HysteresisSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Hysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.LevelGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Level()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.LevelSetDouble">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Level(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.SlopeGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Slope()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.SlopeSetAnalogEdgeStartTriggerSlope">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Slope(AnalogEdgeStartTriggerSlope value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.SourceGet">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.SourceSetString">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogEdgeStartTrigger.ToString">
            <summary>Sets the Shim of AnalogEdgeStartTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogLevelPauseTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.#ctor(NationalInstruments.DAQmx.AnalogLevelPauseTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.ConditionSetAnalogLevelPauseTriggerCondition">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Condition(AnalogLevelPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.CouplingGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.CouplingSetAnalogEdgePauseTriggerCoupling">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Coupling(AnalogEdgePauseTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.HysteresisGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Hysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.HysteresisSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Hysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.LevelGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Level()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.LevelSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Level(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.ConditionGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.ConditionSetAnalogLevelPauseTriggerCondition">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Condition(AnalogLevelPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.AnalogLevelPauseTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.CouplingGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.CouplingSetAnalogEdgePauseTriggerCoupling">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Coupling(AnalogEdgePauseTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.HysteresisGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Hysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.HysteresisSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Hysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.LevelGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Level()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.LevelSetDouble">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Level(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.SourceGet">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.SourceSetString">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogLevelPauseTrigger.ToString">
            <summary>Sets the Shim of AnalogLevelPauseTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.#ctor(NationalInstruments.DAQmx.AnalogMultiChannelReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleMdArray2">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleMdArray2ReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementMdArray2">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state, AIPowerMeasurement[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementMdArray2ReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state, AIPowerMeasurement[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginReadMultiSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginReadMultiSamplePowerInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginReadSingleSampleAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginReadSingleSamplePowerAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndMemoryOptimizedReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePowerIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndMemoryOptimizedReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndMemoryOptimizedReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndMemoryOptimizedReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndReadMultiSampleIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndReadMultiSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndReadSingleSampleIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndReadSingleSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32DoubleMdArray2RefInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadMultiSample(Int32 samplesPerChannel, Double[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32DoubleMdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadMultiSample(Int32 samplesPerChannel, Double[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePowerInt32AIPowerMeasurementMdArray2RefInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 samplesPerChannel, AIPowerMeasurement[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePowerInt32AIPowerMeasurementMdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 samplesPerChannel, AIPowerMeasurement[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.ReadMultiSampleInt32">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadMultiSample(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.ReadMultiSamplePowerInt32">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadMultiSamplePower(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.ReadSingleSample">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.ReadSingleSamplePower">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.ReadWaveformInt32">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadWaveform(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.ReadWaveformTimeSpan">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogMultiChannelReader.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleMdArray2">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleMdArray2ReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementMdArray2">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state, AIPowerMeasurement[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementMdArray2ReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state, AIPowerMeasurement[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginReadMultiSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginReadMultiSamplePowerInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginReadSingleSampleAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginReadSingleSamplePowerAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ConstructorDaqStream">
            <summary>Sets the Shim of AnalogMultiChannelReader.AnalogMultiChannelReader(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndMemoryOptimizedReadMultiSampleIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndMemoryOptimizedReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndMemoryOptimizedReadMultiSamplePowerIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndMemoryOptimizedReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndMemoryOptimizedReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndMemoryOptimizedReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndReadMultiSampleIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndReadMultiSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndReadSingleSampleIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndReadSingleSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogMultiChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ReadMultiSampleInt32">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadMultiSample(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ReadMultiSamplePowerInt32">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadMultiSamplePower(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ReadSingleSample">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ReadSingleSamplePower">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ReadWaveformInt32">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadWaveform(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ReadWaveformTimeSpan">
            <summary>Sets the Shim of AnalogMultiChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelReader.ToString">
            <summary>Sets the Shim of AnalogMultiChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.#ctor(NationalInstruments.DAQmx.AnalogMultiChannelWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.BeginWriteMultiSampleBooleanDoubleMdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.BeginWriteSingleSampleBooleanDoubleArrayAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.BeginWriteWaveformOf1BooleanAnalogWaveformOfM0ArrayAsyncCallbackObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NationalInstruments.DAQmx.AnalogMultiChannelWriter,System.Boolean,NationalInstruments.AnalogWaveform{``0}[],System.AsyncCallback,System.Object,System.IAsyncResult})">
            <summary>Sets the Shim of AnalogMultiChannelWriter.BeginWriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogMultiChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.WriteMultiSampleBooleanDoubleMdArray2">
            <summary>Sets the Shim of AnalogMultiChannelWriter.WriteMultiSample(Boolean autoStart, Double[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.WriteSingleSampleBooleanDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelWriter.WriteSingleSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.AllInstances.WriteWaveformOf1BooleanAnalogWaveformOfM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NationalInstruments.DAQmx.AnalogMultiChannelWriter,System.Boolean,NationalInstruments.AnalogWaveform{``0}[]})">
            <summary>Sets the Shim of AnalogMultiChannelWriter.WriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.BeginWriteMultiSampleBooleanDoubleMdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.BeginWriteSingleSampleBooleanDoubleArrayAsyncCallbackObject">
            <summary>Sets the Shim of AnalogMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.BeginWriteWaveformOf1BooleanAnalogWaveformOfM0ArrayAsyncCallbackObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,NationalInstruments.AnalogWaveform{``0}[],System.AsyncCallback,System.Object,System.IAsyncResult})">
            <summary>Sets the Shim of AnalogMultiChannelWriter.BeginWriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.ConstructorDaqStream">
            <summary>Sets the Shim of AnalogMultiChannelWriter.AnalogMultiChannelWriter(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the Shim of AnalogMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.ToString">
            <summary>Sets the Shim of AnalogMultiChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.WriteMultiSampleBooleanDoubleMdArray2">
            <summary>Sets the Shim of AnalogMultiChannelWriter.WriteMultiSample(Boolean autoStart, Double[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.WriteSingleSampleBooleanDoubleArray">
            <summary>Sets the Shim of AnalogMultiChannelWriter.WriteSingleSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiChannelWriter.WriteWaveformOf1BooleanAnalogWaveformOfM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Boolean,NationalInstruments.AnalogWaveform{``0}[]})">
            <summary>Sets the Shim of AnalogMultiChannelWriter.WriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogMultiEdgeReferenceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.#ctor(NationalInstruments.DAQmx.AnalogMultiEdgeReferenceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.CouplingsGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Couplings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.CouplingsSetAnalogMultiEdgeReferenceTriggerCouplingArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Couplings(AnalogMultiEdgeReferenceTriggerCoupling[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.HysteresesGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Hystereses()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.HysteresesSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Hystereses(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.LevelsGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Levels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.LevelsSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Levels(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.SlopesGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Slopes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.SlopesSetAnalogMultiEdgeReferenceTriggerSlopeArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Slopes(AnalogMultiEdgeReferenceTriggerSlope[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.SourcesGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Sources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.SourcesSetString">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Sources(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.AnalogMultiEdgeReferenceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.CouplingsGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Couplings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.CouplingsSetAnalogMultiEdgeReferenceTriggerCouplingArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Couplings(AnalogMultiEdgeReferenceTriggerCoupling[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.HysteresesGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Hystereses()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.HysteresesSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Hystereses(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.LevelsGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Levels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.LevelsSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Levels(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.SlopesGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Slopes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.SlopesSetAnalogMultiEdgeReferenceTriggerSlopeArray">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Slopes(AnalogMultiEdgeReferenceTriggerSlope[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.SourcesGet">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.get_Sources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.SourcesSetString">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.set_Sources(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeReferenceTrigger.ToString">
            <summary>Sets the Shim of AnalogMultiEdgeReferenceTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogMultiEdgeStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.#ctor(NationalInstruments.DAQmx.AnalogMultiEdgeStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.CouplingsGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Couplings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.CouplingsSetAnalogMultiEdgeStartTriggerCouplingArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Couplings(AnalogMultiEdgeStartTriggerCoupling[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.HysteresesGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Hystereses()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.HysteresesSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Hystereses(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.LevelsGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Levels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.LevelsSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Levels(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.SlopesGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Slopes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.SlopesSetAnalogMultiEdgeStartTriggerSlopeArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Slopes(AnalogMultiEdgeStartTriggerSlope[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.SourcesGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Sources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.SourcesSetString">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Sources(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.AnalogMultiEdgeStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.CouplingsGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Couplings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.CouplingsSetAnalogMultiEdgeStartTriggerCouplingArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Couplings(AnalogMultiEdgeStartTriggerCoupling[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.HysteresesGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Hystereses()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.HysteresesSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Hystereses(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.LevelsGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Levels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.LevelsSetDoubleArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Levels(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.SlopesGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Slopes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.SlopesSetAnalogMultiEdgeStartTriggerSlopeArray">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Slopes(AnalogMultiEdgeStartTriggerSlope[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.SourcesGet">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.get_Sources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.SourcesSetString">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.set_Sources(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogMultiEdgeStartTrigger.ToString">
            <summary>Sets the Shim of AnalogMultiEdgeStartTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.#ctor(NationalInstruments.DAQmx.AnalogSingleChannelReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleArray">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementArray">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginReadMultiSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginReadMultiSamplePowerInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginReadSingleSampleAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginReadSingleSamplePowerAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePowerIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndMemoryOptimizedReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndMemoryOptimizedReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndReadMultiSampleIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndReadMultiSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndReadSingleSampleIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndReadSingleSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32DoubleArrayRefInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32DoubleArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePowerInt32AIPowerMeasurementArrayRefInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePowerInt32AIPowerMeasurementArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.ReadMultiSampleInt32">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.ReadMultiSamplePowerInt32">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.ReadSingleSample">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.ReadSingleSamplePower">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.ReadWaveformInt32">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.ReadWaveformTimeSpan">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogSingleChannelReader.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleArray">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementArray">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementArrayReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginReadMultiSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginReadMultiSamplePowerInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginReadSingleSampleAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginReadSingleSamplePowerAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ConstructorDaqStream">
            <summary>Sets the Shim of AnalogSingleChannelReader.AnalogSingleChannelReader(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndMemoryOptimizedReadMultiSampleIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndMemoryOptimizedReadMultiSamplePowerIAsyncResultInt32Out">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndMemoryOptimizedReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndMemoryOptimizedReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndReadMultiSampleIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndReadMultiSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndReadSingleSampleIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndReadSingleSamplePowerIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDouble">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the Shim of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ReadMultiSampleInt32">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ReadMultiSamplePowerInt32">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ReadSingleSample">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ReadSingleSamplePower">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ReadWaveformInt32">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ReadWaveformTimeSpan">
            <summary>Sets the Shim of AnalogSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelReader.ToString">
            <summary>Sets the Shim of AnalogSingleChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.#ctor(NationalInstruments.DAQmx.AnalogSingleChannelWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.BeginWriteMultiSampleBooleanDoubleArrayAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.BeginWriteSingleSampleBooleanDoubleAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.BeginWriteWaveformOf1BooleanAnalogWaveformOfM0AsyncCallbackObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NationalInstruments.DAQmx.AnalogSingleChannelWriter,System.Boolean,NationalInstruments.AnalogWaveform{``0},System.AsyncCallback,System.Object,System.IAsyncResult})">
            <summary>Sets the Shim of AnalogSingleChannelWriter.BeginWriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogSingleChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.WriteMultiSampleBooleanDoubleArray">
            <summary>Sets the Shim of AnalogSingleChannelWriter.WriteMultiSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.WriteSingleSampleBooleanDouble">
            <summary>Sets the Shim of AnalogSingleChannelWriter.WriteSingleSample(Boolean autoStart, Double data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.AllInstances.WriteWaveformOf1BooleanAnalogWaveformOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NationalInstruments.DAQmx.AnalogSingleChannelWriter,System.Boolean,NationalInstruments.AnalogWaveform{``0}})">
            <summary>Sets the Shim of AnalogSingleChannelWriter.WriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.BeginWriteMultiSampleBooleanDoubleArrayAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.BeginWriteSingleSampleBooleanDoubleAsyncCallbackObject">
            <summary>Sets the Shim of AnalogSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.BeginWriteWaveformOf1BooleanAnalogWaveformOfM0AsyncCallbackObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,NationalInstruments.AnalogWaveform{``0},System.AsyncCallback,System.Object,System.IAsyncResult})">
            <summary>Sets the Shim of AnalogSingleChannelWriter.BeginWriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.ConstructorDaqStream">
            <summary>Sets the Shim of AnalogSingleChannelWriter.AnalogSingleChannelWriter(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the Shim of AnalogSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.ToString">
            <summary>Sets the Shim of AnalogSingleChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.WriteMultiSampleBooleanDoubleArray">
            <summary>Sets the Shim of AnalogSingleChannelWriter.WriteMultiSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.WriteSingleSampleBooleanDouble">
            <summary>Sets the Shim of AnalogSingleChannelWriter.WriteSingleSample(Boolean autoStart, Double data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogSingleChannelWriter.WriteWaveformOf1BooleanAnalogWaveformOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Boolean,NationalInstruments.AnalogWaveform{``0}})">
            <summary>Sets the Shim of AnalogSingleChannelWriter.WriteWaveform(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogUnscaledReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.#ctor(NationalInstruments.DAQmx.AnalogUnscaledReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.BeginReadInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.BeginReadInt16PowerInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadInt16Power(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.BeginReadInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.BeginReadUInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.BeginReadUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.EndReadInt16IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.EndReadInt16PowerIAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadInt16Power(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.EndReadInt32IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.EndReadUInt16IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.EndReadUInt32IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.ReadInt16Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.ReadInt16PowerInt32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadInt16Power(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.ReadInt32Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.ReadUInt16Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.ReadUInt32Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogUnscaledReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogUnscaledReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogUnscaledReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogUnscaledReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogUnscaledReader.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.BeginReadInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.BeginReadInt16PowerInt32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadInt16Power(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.BeginReadInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.BeginReadUInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.BeginReadUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledReader.BeginReadUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.ConstructorDaqStream">
            <summary>Sets the Shim of AnalogUnscaledReader.AnalogUnscaledReader(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.EndReadInt16IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.EndReadInt16PowerIAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadInt16Power(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.EndReadInt32IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.EndReadUInt16IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.EndReadUInt32IAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledReader.EndReadUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.ReadInt16Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.ReadInt16PowerInt32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadInt16Power(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.ReadInt32Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.ReadUInt16Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.ReadUInt32Int32">
            <summary>Sets the Shim of AnalogUnscaledReader.ReadUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogUnscaledReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogUnscaledReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogUnscaledReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogUnscaledReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledReader.ToString">
            <summary>Sets the Shim of AnalogUnscaledReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogUnscaledWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.#ctor(NationalInstruments.DAQmx.AnalogUnscaledWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.BeginWriteBooleanInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.BeginWriteBooleanInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.BeginWriteBooleanUInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.BeginWriteBooleanUInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogUnscaledWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogUnscaledWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogUnscaledWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogUnscaledWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogUnscaledWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.WriteBooleanInt16MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.WriteBooleanInt32MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.WriteBooleanUInt16MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.AllInstances.WriteBooleanUInt32MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.BeginWriteBooleanInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.BeginWriteBooleanInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.BeginWriteBooleanUInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.BeginWriteBooleanUInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of AnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.ConstructorDaqStream">
            <summary>Sets the Shim of AnalogUnscaledWriter.AnalogUnscaledWriter(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.EndWriteIAsyncResult">
            <summary>Sets the Shim of AnalogUnscaledWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.SynchronizeCallbacksGet">
            <summary>Sets the Shim of AnalogUnscaledWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of AnalogUnscaledWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.SynchronizingObjectGet">
            <summary>Sets the Shim of AnalogUnscaledWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of AnalogUnscaledWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.ToString">
            <summary>Sets the Shim of AnalogUnscaledWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.WriteBooleanInt16MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.WriteBooleanInt32MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.WriteBooleanUInt16MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogUnscaledWriter.WriteBooleanUInt32MdArray2">
            <summary>Sets the Shim of AnalogUnscaledWriter.Write(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogWindowPauseTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.#ctor(NationalInstruments.DAQmx.AnalogWindowPauseTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.ConditionSetAnalogWindowPauseTriggerCondition">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_Condition(AnalogWindowPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.CouplingGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.CouplingSetAnalogWindowPauseTriggerCoupling">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_Coupling(AnalogWindowPauseTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.WindowBottomGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_WindowBottom()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.WindowBottomSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_WindowBottom(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.WindowTopGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_WindowTop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.AllInstances.WindowTopSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_WindowTop(Double value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.ConditionGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.ConditionSetAnalogWindowPauseTriggerCondition">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_Condition(AnalogWindowPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.AnalogWindowPauseTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.CouplingGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.CouplingSetAnalogWindowPauseTriggerCoupling">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_Coupling(AnalogWindowPauseTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.SourceGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.SourceSetString">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.ToString">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.WindowBottomGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_WindowBottom()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.WindowBottomSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_WindowBottom(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.WindowTopGet">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.get_WindowTop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowPauseTrigger.WindowTopSetDouble">
            <summary>Sets the Shim of AnalogWindowPauseTrigger.set_WindowTop(Double value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogWindowReferenceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.#ctor(NationalInstruments.DAQmx.AnalogWindowReferenceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.ConditionSetAnalogWindowReferenceTriggerCondition">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_Condition(AnalogWindowReferenceTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.CouplingGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.CouplingSetAnalogWindowReferenceTriggerCoupling">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_Coupling(AnalogWindowReferenceTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.WindowBottomGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_WindowBottom()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.WindowBottomSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_WindowBottom(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.WindowTopGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_WindowTop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.AllInstances.WindowTopSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_WindowTop(Double value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.ConditionGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.ConditionSetAnalogWindowReferenceTriggerCondition">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_Condition(AnalogWindowReferenceTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.AnalogWindowReferenceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.CouplingGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.CouplingSetAnalogWindowReferenceTriggerCoupling">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_Coupling(AnalogWindowReferenceTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.SourceGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.SourceSetString">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.ToString">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.WindowBottomGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_WindowBottom()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.WindowBottomSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_WindowBottom(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.WindowTopGet">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.get_WindowTop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowReferenceTrigger.WindowTopSetDouble">
            <summary>Sets the Shim of AnalogWindowReferenceTrigger.set_WindowTop(Double value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.AnalogWindowStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.#ctor(NationalInstruments.DAQmx.AnalogWindowStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.ConditionSetAnalogWindowStartTriggerCondition">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_Condition(AnalogWindowStartTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.CouplingGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.CouplingSetAnalogWindowStartTriggerCoupling">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_Coupling(AnalogWindowStartTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogWindowStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogWindowStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of AnalogWindowStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.WindowBottomGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_WindowBottom()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.WindowBottomSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_WindowBottom(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.WindowTopGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_WindowTop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.AllInstances.WindowTopSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_WindowTop(Double value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.ConditionGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.ConditionSetAnalogWindowStartTriggerCondition">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_Condition(AnalogWindowStartTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.ConstructorTask">
            <summary>Sets the Shim of AnalogWindowStartTrigger.AnalogWindowStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.CouplingGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_Coupling()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.CouplingSetAnalogWindowStartTriggerCoupling">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_Coupling(AnalogWindowStartTriggerCoupling value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of AnalogWindowStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of AnalogWindowStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.SourceGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.SourceSetString">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.ToString">
            <summary>Sets the Shim of AnalogWindowStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.WindowBottomGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_WindowBottom()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.WindowBottomSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_WindowBottom(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.WindowTopGet">
            <summary>Sets the Shim of AnalogWindowStartTrigger.get_WindowTop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimAnalogWindowStartTrigger.WindowTopSetDouble">
            <summary>Sets the Shim of AnalogWindowStartTrigger.set_WindowTop(Double value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.ArmStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.#ctor(NationalInstruments.DAQmx.ArmStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.ConfigureDigitalEdgeTriggerStringDigitalEdgeArmStartTriggerEdge">
            <summary>Sets the Shim of ArmStartTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeArmStartTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.ConfigureNone">
            <summary>Sets the Shim of ArmStartTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.DigitalEdgeGet">
            <summary>Sets the Shim of ArmStartTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of ArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of ArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of ArmStartTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TerminalGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TimeGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Time()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TimestampEnableGet">
            <summary>Sets the Shim of ArmStartTrigger.get_TimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TimestampEnableSetBoolean">
            <summary>Sets the Shim of ArmStartTrigger.set_TimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TimestampGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Timestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TimestampTimescaleGet">
            <summary>Sets the Shim of ArmStartTrigger.get_TimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TimestampTimescaleSetArmStartTriggerTimestampTimescale">
            <summary>Sets the Shim of ArmStartTrigger.set_TimestampTimescale(ArmStartTriggerTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of ArmStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TypeGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.AllInstances.TypeSetArmStartTriggerType">
            <summary>Sets the Shim of ArmStartTrigger.set_Type(ArmStartTriggerType value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.ConfigureDigitalEdgeTriggerStringDigitalEdgeArmStartTriggerEdge">
            <summary>Sets the Shim of ArmStartTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeArmStartTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.ConfigureNone">
            <summary>Sets the Shim of ArmStartTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.ConstructorTask">
            <summary>Sets the Shim of ArmStartTrigger.ArmStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.DigitalEdgeGet">
            <summary>Sets the Shim of ArmStartTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of ArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of ArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.InitializeSubobjects">
            <summary>Sets the Shim of ArmStartTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TerminalGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TimeGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Time()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TimestampEnableGet">
            <summary>Sets the Shim of ArmStartTrigger.get_TimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TimestampEnableSetBoolean">
            <summary>Sets the Shim of ArmStartTrigger.set_TimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TimestampGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Timestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TimestampTimescaleGet">
            <summary>Sets the Shim of ArmStartTrigger.get_TimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TimestampTimescaleSetArmStartTriggerTimestampTimescale">
            <summary>Sets the Shim of ArmStartTrigger.set_TimestampTimescale(ArmStartTriggerTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.ToString">
            <summary>Sets the Shim of ArmStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TypeGet">
            <summary>Sets the Shim of ArmStartTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimArmStartTrigger.TypeSetArmStartTriggerType">
            <summary>Sets the Shim of ArmStartTrigger.set_Type(ArmStartTriggerType value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIChannel">
            <summary>Shim type of NationalInstruments.DAQmx.CIChannel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannel.#ctor(NationalInstruments.DAQmx.CIChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.AngularEncoderInitialAngleGet">
            <summary>Sets the Shim of CIChannel.get_AngularEncoderInitialAngle()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.AngularEncoderInitialAngleSetDouble">
            <summary>Sets the Shim of CIChannel.set_AngularEncoderInitialAngle(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.AngularEncoderPulsesPerRevolutionGet">
            <summary>Sets the Shim of CIChannel.get_AngularEncoderPulsesPerRevolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.AngularEncoderPulsesPerRevolutionSetInt64">
            <summary>Sets the Shim of CIChannel.set_AngularEncoderPulsesPerRevolution(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.AngularEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_AngularEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.AngularEncoderUnitsSetCIAngularEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_AngularEncoderUnits(CIAngularEncoderUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesActiveEdgeGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesActiveEdgeSetCICountEdgesActiveEdge">
            <summary>Sets the Shim of CIChannel.set_CountEdgesActiveEdge(CICountEdgesActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirection()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionLogicLevelBehaviorSetCICountEdgesCountDirectionLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionLogicLevelBehavior(CICountEdgesCountDirectionLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionSetCICountEdgesCountDirection">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirection(CICountEdgesCountDirection value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionTerminalConfigurationSetCICountEdgesCountDirectionTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionTerminalConfiguration(CICountEdgesCountDirectionTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountDirectionThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetActiveEdgeGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetActiveEdgeSetCICountEdgesCountResetActiveEdge">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetActiveEdge(CICountEdgesCountResetActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetLogicLevelBehaviorSetCICountEdgesCountResetLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetLogicLevelBehavior(CICountEdgesCountResetLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetResetCountGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetResetCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetResetCountSetInt64">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetResetCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetTerminalConfigurationSetCICountEdgesCountResetTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetTerminalConfiguration(CICountEdgesCountResetTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesCountResetThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateLogicLevelBehaviorSetCICountEdgesGateLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateLogicLevelBehavior(CICountEdgesGateLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGatePauseStateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGatePauseState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGatePauseStateSetCICountEdgesGatePauseState">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGatePauseState(CICountEdgesGatePauseState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateTerminalConfigurationSetCICountEdgesGateTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateTerminalConfiguration(CICountEdgesGateTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesGateThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesInitialCountGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesInitialCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesInitialCountSetInt64">
            <summary>Sets the Shim of CIChannel.set_CountEdgesInitialCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesLogicLevelBehaviorSetCICountEdgesLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesLogicLevelBehavior(CICountEdgesLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesTerminalConfigurationSetCICountEdgesTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesTerminalConfiguration(CICountEdgesTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountEdgesThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CountGet">
            <summary>Sets the Shim of CIChannel.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseActiveEdgeGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseActiveEdgeSetCICounterTimebaseActiveEdge">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseActiveEdge(CICounterTimebaseActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseMasterTimebaseDivisorGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseMasterTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseMasterTimebaseDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseMasterTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CounterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CustomScaleNameGet">
            <summary>Sets the Shim of CIChannel.get_CustomScaleName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.CustomScaleNameSetString">
            <summary>Sets the Shim of CIChannel.set_CustomScaleName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DataTransferMechanismGet">
            <summary>Sets the Shim of CIChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DataTransferMechanismSetCIDataTransferMechanism">
            <summary>Sets the Shim of CIChannel.set_DataTransferMechanism(CIDataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DataTransferRequestConditionGet">
            <summary>Sets the Shim of CIChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DataTransferRequestConditionSetCIDataTransferRequestCondition">
            <summary>Sets the Shim of CIChannel.set_DataTransferRequestCondition(CIDataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DuplicateCountPreventionGet">
            <summary>Sets the Shim of CIChannel.get_DuplicateCountPrevention()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DuplicateCountPreventionSetBoolean">
            <summary>Sets the Shim of CIChannel.set_DuplicateCountPrevention(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterEnabledGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterEnabledSetBoolean">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleLogicLevelBehaviorSetCIDutyCycleLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_DutyCycleLogicLevelBehavior(CIDutyCycleLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleStartingEdgeSetCIDutyCycleStartingEdge">
            <summary>Sets the Shim of CIChannel.set_DutyCycleStartingEdge(CIDutyCycleStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleTerminalConfigurationSetCIDutyCycleTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_DutyCycleTerminalConfiguration(CIDutyCycleTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleTerminalGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.DutyCycleTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_DutyCycleTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputLogicLevelBehaviorSetCIEncoderAInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputLogicLevelBehavior(CIEncoderAInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputTerminalConfigurationSetCIEncoderAInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputTerminalConfiguration(CIEncoderAInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderAInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputLogicLevelBehaviorSetCIEncoderBInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputLogicLevelBehavior(CIEncoderBInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputTerminalConfigurationSetCIEncoderBInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputTerminalConfiguration(CIEncoderBInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderBInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderDecodingTypeGet">
            <summary>Sets the Shim of CIChannel.get_EncoderDecodingType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderDecodingTypeSetCIEncoderDecodingType">
            <summary>Sets the Shim of CIChannel.set_EncoderDecodingType(CIEncoderDecodingType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZIndexEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZIndexEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZIndexEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderZIndexEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZIndexPhaseGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZIndexPhase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZIndexPhaseSetCIEncoderZIndexPhase">
            <summary>Sets the Shim of CIChannel.set_EncoderZIndexPhase(CIEncoderZIndexPhase value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZIndexValueGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZIndexValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZIndexValueSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderZIndexValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputLogicLevelBehaviorSetCIEncoderZInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputLogicLevelBehavior(CIEncoderZInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputTerminalConfigurationSetCIEncoderZInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputTerminalConfiguration(CIEncoderZInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.EncoderZInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterDelayGet">
            <summary>Sets the Shim of CIChannel.get_FilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterDelayUnitsGet">
            <summary>Sets the Shim of CIChannel.get_FilterDelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterDelayUnitsSetCIFilterDelayUnits">
            <summary>Sets the Shim of CIChannel.set_FilterDelayUnits(CIFilterDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterEnabledGet">
            <summary>Sets the Shim of CIChannel.get_FilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterEnabledSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterFrequencyGet">
            <summary>Sets the Shim of CIChannel.get_FilterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterFrequencySetDouble">
            <summary>Sets the Shim of CIChannel.set_FilterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterOrderGet">
            <summary>Sets the Shim of CIChannel.get_FilterOrder()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterOrderSetInt64">
            <summary>Sets the Shim of CIChannel.set_FilterOrder(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterResponseGet">
            <summary>Sets the Shim of CIChannel.get_FilterResponse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FilterResponseSetCIFilterResponse">
            <summary>Sets the Shim of CIChannel.set_FilterResponse(CIFilterResponse value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDivisorGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_FrequencyDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyEnableAveragingGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyEnableAveraging()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyEnableAveragingSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FrequencyEnableAveraging(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyLogicalLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyLogicalLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyLogicalLevelBehaviorSetCIFrequencyLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_FrequencyLogicalLevelBehavior(CIFrequencyLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyMeasurementMethodGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyMeasurementMethod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyMeasurementMethodSetCIFrequencyMeasurementMethod">
            <summary>Sets the Shim of CIChannel.set_FrequencyMeasurementMethod(CIFrequencyMeasurementMethod value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyStartingEdgeSetCIFrequencyStartingEdge">
            <summary>Sets the Shim of CIChannel.set_FrequencyStartingEdge(CIFrequencyStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyTerminalConfigurationSetCIFrequencyTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_FrequencyTerminalConfiguration(CIFrequencyTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyTerminalGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_FrequencyTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyUnitsGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.FrequencyUnitsSetCIFrequencyUnits">
            <summary>Sets the Shim of CIChannel.set_FrequencyUnits(CIFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of CIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of CIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.GpsSyncMethodGet">
            <summary>Sets the Shim of CIChannel.get_GpsSyncMethod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.GpsSyncMethodSetCIGpsSyncMethod">
            <summary>Sets the Shim of CIChannel.set_GpsSyncMethod(CIGpsSyncMethod value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.GpsSyncSourceGet">
            <summary>Sets the Shim of CIChannel.get_GpsSyncSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.GpsSyncSourceSetString">
            <summary>Sets the Shim of CIChannel.set_GpsSyncSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.LinearEncoderDistancePerPulseGet">
            <summary>Sets the Shim of CIChannel.get_LinearEncoderDistancePerPulse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.LinearEncoderDistancePerPulseSetDouble">
            <summary>Sets the Shim of CIChannel.set_LinearEncoderDistancePerPulse(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.LinearEncoderInitialPositionGet">
            <summary>Sets the Shim of CIChannel.get_LinearEncoderInitialPosition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.LinearEncoderInitialPositionSetDouble">
            <summary>Sets the Shim of CIChannel.set_LinearEncoderInitialPosition(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.LinearEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_LinearEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.LinearEncoderUnitsSetCILinearEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_LinearEncoderUnits(CILinearEncoderUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MaximumGet">
            <summary>Sets the Shim of CIChannel.get_Maximum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MaximumMeasurementPeriodGet">
            <summary>Sets the Shim of CIChannel.get_MaximumMeasurementPeriod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MaximumMeasurementPeriodSetDouble">
            <summary>Sets the Shim of CIChannel.set_MaximumMeasurementPeriod(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MaximumSetDouble">
            <summary>Sets the Shim of CIChannel.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MeasurementTypeGet">
            <summary>Sets the Shim of CIChannel.get_MeasurementType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MemoryMappingEnableGet">
            <summary>Sets the Shim of CIChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MinimumGet">
            <summary>Sets the Shim of CIChannel.get_Minimum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.MinimumSetDouble">
            <summary>Sets the Shim of CIChannel.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.NumberPossiblyInvalidSamplesGet">
            <summary>Sets the Shim of CIChannel.get_NumberPossiblyInvalidSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.OutputStateGet">
            <summary>Sets the Shim of CIChannel.get_OutputState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDivisorGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_PeriodDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodEnableAveragingGet">
            <summary>Sets the Shim of CIChannel.get_PeriodEnableAveraging()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodEnableAveragingSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PeriodEnableAveraging(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_PeriodHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PeriodLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodLogicLevelBehaviorSetCIPeriodLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PeriodLogicLevelBehavior(CIPeriodLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodMeasurementMethodGet">
            <summary>Sets the Shim of CIChannel.get_PeriodMeasurementMethod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodMeasurementMethodSetCIPeriodMeasurementMethod">
            <summary>Sets the Shim of CIChannel.set_PeriodMeasurementMethod(CIPeriodMeasurementMethod value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_PeriodMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PeriodStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodStartingEdgeSetCIPeriodStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PeriodStartingEdge(CIPeriodStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PeriodTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodTerminalConfigurationSetCIPeriodTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PeriodTerminalConfiguration(CIPeriodTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PeriodTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PeriodTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_PeriodThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PeriodUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PeriodUnitsSetCIPeriodUnits">
            <summary>Sets the Shim of CIChannel.set_PeriodUnits(CIPeriodUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PrescalerGet">
            <summary>Sets the Shim of CIChannel.get_Prescaler()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PrescalerSetInt64">
            <summary>Sets the Shim of CIChannel.set_Prescaler(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyLogicLevelBehaviorSetCIPulseFrequencyLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyLogicLevelBehavior(CIPulseFrequencyLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyStartingEdgeSetCIPulseFrequencyStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyStartingEdge(CIPulseFrequencyStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyTerminalConfigurationSetCIPulseFrequencyTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyTerminalConfiguration(CIPulseFrequencyTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseFrequencyUnitsSetCIPulseFrequencyUnits">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyUnits(CIPulseFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksLogicLevelBehaviorSetCIPulseTicksLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseTicksLogicLevelBehavior(CIPulseTicksLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksStartingEdgeSetCIPulseTicksStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseTicksStartingEdge(CIPulseTicksStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksTerminalConfigurationSetCIPulseTicksTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseTicksTerminalConfiguration(CIPulseTicksTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTicksTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTicksTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeLogicLevelBehaviorSetCIPulseTimeLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseTimeLogicLevelBehavior(CIPulseTimeLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeStartingEdgeSetCIPulseTimeStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseTimeStartingEdge(CIPulseTimeStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeTerminalConfigurationSetCIPulseTimeTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseTimeTerminalConfiguration(CIPulseTimeTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTimeTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseTimeUnitsSetCIPulseTimeUnits">
            <summary>Sets the Shim of CIChannel.set_PulseTimeUnits(CIPulseTimeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthLogicLevelBehaviorSetCIPulseWidthLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseWidthLogicLevelBehavior(CIPulseWidthLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthStartingEdgeSetCIPulseWidthStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseWidthStartingEdge(CIPulseWidthStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthTerminalConfigurationSetCIPulseWidthTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseWidthTerminalConfiguration(CIPulseWidthTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseWidthTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.PulseWidthUnitsSetCIPulseWidthUnits">
            <summary>Sets the Shim of CIChannel.set_PulseWidthUnits(CIPulseWidthUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SampleClockOverrunBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_SampleClockOverrunBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SampleClockOverrunBehaviorSetCISampleClockOverrunBehavior">
            <summary>Sets the Shim of CIChannel.set_SampleClockOverrunBehavior(CISampleClockOverrunBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SampleClockOverrunSentinelValueGet">
            <summary>Sets the Shim of CIChannel.get_SampleClockOverrunSentinelValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SampleClockOverrunSentinelValueSetInt32">
            <summary>Sets the Shim of CIChannel.set_SampleClockOverrunSentinelValue(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodLogicLevelBehaviorSetCISemiPeriodLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodLogicLevelBehavior(CISemiPeriodLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodStartingEdgeSetCISemiPeriodStartingEdge">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodStartingEdge(CISemiPeriodStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodTerminalConfigurationSetCISemiPeriodTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodTerminalConfiguration(CISemiPeriodTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodTerminalGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodUnitsGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.SemiPeriodUnitsSetCISemiPeriodUnits">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodUnits(CISemiPeriodUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TerminalCountReachedGet">
            <summary>Sets the Shim of CIChannel.get_TerminalCountReached()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TimestampInitialSecondsGet">
            <summary>Sets the Shim of CIChannel.get_TimestampInitialSeconds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TimestampInitialSecondsSetInt64">
            <summary>Sets the Shim of CIChannel.set_TimestampInitialSeconds(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TimestampUnitsGet">
            <summary>Sets the Shim of CIChannel.get_TimestampUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TimestampUnitsSetCITimestampUnits">
            <summary>Sets the Shim of CIChannel.set_TimestampUnits(CITimestampUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstEdgeSetCITwoEdgeSeparationFirstEdge">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdge(CITwoEdgeSeparationFirstEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstLogicLevelBehaviorSetCITwoEdgeSeparationFirstLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstLogicLevelBehavior(CITwoEdgeSeparationFirstLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstTerminalConfigurationSetCITwoEdgeSeparationFirstTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstTerminalConfiguration(CITwoEdgeSeparationFirstTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstTerminalGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationFirstTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondEdgeSetCITwoEdgeSeparationSecondEdge">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdge(CITwoEdgeSeparationSecondEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondLogicLevelBehaviorSetCITwoEdgeSeparationSecondLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondLogicLevelBehavior(CITwoEdgeSeparationSecondLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondTerminalConfigurationSetCITwoEdgeSeparationSecondTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondTerminalConfiguration(CITwoEdgeSeparationSecondTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondTerminalGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationSecondTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationUnitsGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.TwoEdgeSeparationUnitsSetCITwoEdgeSeparationUnits">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationUnits(CITwoEdgeSeparationUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.UsbTransferRequestCountGet">
            <summary>Sets the Shim of CIChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of CIChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of CIChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of CIChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputLogicLevelBehaviorSetCIVelocityAInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputLogicLevelBehavior(CIVelocityAInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputTerminalConfigurationSetCIVelocityAInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputTerminalConfiguration(CIVelocityAInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAdvancedDivisorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAdvancedDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAdvancedDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_VelocityAdvancedDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAdvancedMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAdvancedMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAdvancedMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityAdvancedMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAngularEncoderPulsesPerRevolutionGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAngularEncoderPulsesPerRevolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAngularEncoderPulsesPerRevolutionSetInt64">
            <summary>Sets the Shim of CIChannel.set_VelocityAngularEncoderPulsesPerRevolution(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAngularEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAngularEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityAngularEncoderUnitsSetCIVelocityAngularEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_VelocityAngularEncoderUnits(CIVelocityAngularEncoderUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputLogicLevelBehaviorSetCIVelocityBInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputLogicLevelBehavior(CIVelocityBInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputTerminalConfigurationSetCIVelocityBInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputTerminalConfiguration(CIVelocityBInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityBInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityDecodingTypeGet">
            <summary>Sets the Shim of CIChannel.get_VelocityDecodingType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityDecodingTypeSetCIVelocityEncoderType">
            <summary>Sets the Shim of CIChannel.set_VelocityDecodingType(CIVelocityEncoderType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityDivisorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_VelocityDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityLinearEncoderDistancePerPulseGet">
            <summary>Sets the Shim of CIChannel.get_VelocityLinearEncoderDistancePerPulse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityLinearEncoderDistancePerPulseSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityLinearEncoderDistancePerPulse(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityLinearEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_VelocityLinearEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityLinearEncoderUnitsSetCIVelocityLinearEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_VelocityLinearEncoderUnits(CIVelocityLinearEncoderUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_VelocityMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VelocityMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VoltageThresholdLevelGet">
            <summary>Sets the Shim of CIChannel.get_VoltageThresholdLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AllInstances.VoltageThresholdLevelSetDouble">
            <summary>Sets the Shim of CIChannel.set_VoltageThresholdLevel(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AngularEncoderInitialAngleGet">
            <summary>Sets the Shim of CIChannel.get_AngularEncoderInitialAngle()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AngularEncoderInitialAngleSetDouble">
            <summary>Sets the Shim of CIChannel.set_AngularEncoderInitialAngle(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AngularEncoderPulsesPerRevolutionGet">
            <summary>Sets the Shim of CIChannel.get_AngularEncoderPulsesPerRevolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AngularEncoderPulsesPerRevolutionSetInt64">
            <summary>Sets the Shim of CIChannel.set_AngularEncoderPulsesPerRevolution(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AngularEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_AngularEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.AngularEncoderUnitsSetCIAngularEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_AngularEncoderUnits(CIAngularEncoderUnits value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannel.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.ConstructorStringTask">
            <summary>Sets the Shim of CIChannel.CIChannel(String str, Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesActiveEdgeGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesActiveEdgeSetCICountEdgesActiveEdge">
            <summary>Sets the Shim of CIChannel.set_CountEdgesActiveEdge(CICountEdgesActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirection()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionLogicLevelBehaviorSetCICountEdgesCountDirectionLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionLogicLevelBehavior(CICountEdgesCountDirectionLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionSetCICountEdgesCountDirection">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirection(CICountEdgesCountDirection value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionTerminalConfigurationSetCICountEdgesCountDirectionTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionTerminalConfiguration(CICountEdgesCountDirectionTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountDirectionThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountDirectionThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountDirectionThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetActiveEdgeGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetActiveEdgeSetCICountEdgesCountResetActiveEdge">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetActiveEdge(CICountEdgesCountResetActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetLogicLevelBehaviorSetCICountEdgesCountResetLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetLogicLevelBehavior(CICountEdgesCountResetLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetResetCountGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetResetCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetResetCountSetInt64">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetResetCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetTerminalConfigurationSetCICountEdgesCountResetTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetTerminalConfiguration(CICountEdgesCountResetTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesCountResetThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesCountResetThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesCountResetThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateEnableGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateLogicLevelBehaviorSetCICountEdgesGateLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateLogicLevelBehavior(CICountEdgesGateLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGatePauseStateGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGatePauseState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGatePauseStateSetCICountEdgesGatePauseState">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGatePauseState(CICountEdgesGatePauseState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateTerminalConfigurationSetCICountEdgesGateTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateTerminalConfiguration(CICountEdgesGateTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesGateThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesGateThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesGateThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesInitialCountGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesInitialCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesInitialCountSetInt64">
            <summary>Sets the Shim of CIChannel.set_CountEdgesInitialCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesLogicLevelBehaviorSetCICountEdgesLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_CountEdgesLogicLevelBehavior(CICountEdgesLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesTerminalConfigurationSetCICountEdgesTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_CountEdgesTerminalConfiguration(CICountEdgesTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesTerminalGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_CountEdgesTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_CountEdgesThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountEdgesThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_CountEdgesThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CountGet">
            <summary>Sets the Shim of CIChannel.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseActiveEdgeGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseActiveEdgeSetCICounterTimebaseActiveEdge">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseActiveEdge(CICounterTimebaseActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseMasterTimebaseDivisorGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseMasterTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseMasterTimebaseDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseMasterTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_CounterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CounterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_CounterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CustomScaleNameGet">
            <summary>Sets the Shim of CIChannel.get_CustomScaleName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.CustomScaleNameSetString">
            <summary>Sets the Shim of CIChannel.set_CustomScaleName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DataTransferMechanismGet">
            <summary>Sets the Shim of CIChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DataTransferMechanismSetCIDataTransferMechanism">
            <summary>Sets the Shim of CIChannel.set_DataTransferMechanism(CIDataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DataTransferRequestConditionGet">
            <summary>Sets the Shim of CIChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DataTransferRequestConditionSetCIDataTransferRequestCondition">
            <summary>Sets the Shim of CIChannel.set_DataTransferRequestCondition(CIDataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DuplicateCountPreventionGet">
            <summary>Sets the Shim of CIChannel.get_DuplicateCountPrevention()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DuplicateCountPreventionSetBoolean">
            <summary>Sets the Shim of CIChannel.set_DuplicateCountPrevention(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterEnabledGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterEnabledSetBoolean">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_DutyCycleDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleLogicLevelBehaviorSetCIDutyCycleLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_DutyCycleLogicLevelBehavior(CIDutyCycleLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleStartingEdgeSetCIDutyCycleStartingEdge">
            <summary>Sets the Shim of CIChannel.set_DutyCycleStartingEdge(CIDutyCycleStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleTerminalConfigurationSetCIDutyCycleTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_DutyCycleTerminalConfiguration(CIDutyCycleTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleTerminalGet">
            <summary>Sets the Shim of CIChannel.get_DutyCycleTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.DutyCycleTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_DutyCycleTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputLogicLevelBehaviorSetCIEncoderAInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputLogicLevelBehavior(CIEncoderAInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputTerminalConfigurationSetCIEncoderAInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputTerminalConfiguration(CIEncoderAInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_EncoderAInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderAInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderAInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputLogicLevelBehaviorSetCIEncoderBInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputLogicLevelBehavior(CIEncoderBInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputTerminalConfigurationSetCIEncoderBInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputTerminalConfiguration(CIEncoderBInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_EncoderBInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderBInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderBInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderDecodingTypeGet">
            <summary>Sets the Shim of CIChannel.get_EncoderDecodingType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderDecodingTypeSetCIEncoderDecodingType">
            <summary>Sets the Shim of CIChannel.set_EncoderDecodingType(CIEncoderDecodingType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZIndexEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZIndexEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZIndexEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderZIndexEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZIndexPhaseGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZIndexPhase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZIndexPhaseSetCIEncoderZIndexPhase">
            <summary>Sets the Shim of CIChannel.set_EncoderZIndexPhase(CIEncoderZIndexPhase value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZIndexValueGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZIndexValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZIndexValueSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderZIndexValue(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputLogicLevelBehaviorSetCIEncoderZInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputLogicLevelBehavior(CIEncoderZInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputTerminalConfigurationSetCIEncoderZInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputTerminalConfiguration(CIEncoderZInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_EncoderZInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.EncoderZInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_EncoderZInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterDelayGet">
            <summary>Sets the Shim of CIChannel.get_FilterDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterDelayUnitsGet">
            <summary>Sets the Shim of CIChannel.get_FilterDelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterDelayUnitsSetCIFilterDelayUnits">
            <summary>Sets the Shim of CIChannel.set_FilterDelayUnits(CIFilterDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterEnabledGet">
            <summary>Sets the Shim of CIChannel.get_FilterEnabled()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterEnabledSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FilterEnabled(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterFrequencyGet">
            <summary>Sets the Shim of CIChannel.get_FilterFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterFrequencySetDouble">
            <summary>Sets the Shim of CIChannel.set_FilterFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterOrderGet">
            <summary>Sets the Shim of CIChannel.get_FilterOrder()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterOrderSetInt64">
            <summary>Sets the Shim of CIChannel.set_FilterOrder(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterResponseGet">
            <summary>Sets the Shim of CIChannel.get_FilterResponse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FilterResponseSetCIFilterResponse">
            <summary>Sets the Shim of CIChannel.set_FilterResponse(CIFilterResponse value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FrequencyDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDivisorGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_FrequencyDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyEnableAveragingGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyEnableAveraging()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyEnableAveragingSetBoolean">
            <summary>Sets the Shim of CIChannel.set_FrequencyEnableAveraging(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyLogicalLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyLogicalLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyLogicalLevelBehaviorSetCIFrequencyLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_FrequencyLogicalLevelBehavior(CIFrequencyLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyMeasurementMethodGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyMeasurementMethod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyMeasurementMethodSetCIFrequencyMeasurementMethod">
            <summary>Sets the Shim of CIChannel.set_FrequencyMeasurementMethod(CIFrequencyMeasurementMethod value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyStartingEdgeSetCIFrequencyStartingEdge">
            <summary>Sets the Shim of CIChannel.set_FrequencyStartingEdge(CIFrequencyStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyTerminalConfigurationSetCIFrequencyTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_FrequencyTerminalConfiguration(CIFrequencyTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyTerminalGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_FrequencyTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_FrequencyThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyUnitsGet">
            <summary>Sets the Shim of CIChannel.get_FrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.FrequencyUnitsSetCIFrequencyUnits">
            <summary>Sets the Shim of CIChannel.set_FrequencyUnits(CIFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of CIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of CIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.GpsSyncMethodGet">
            <summary>Sets the Shim of CIChannel.get_GpsSyncMethod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.GpsSyncMethodSetCIGpsSyncMethod">
            <summary>Sets the Shim of CIChannel.set_GpsSyncMethod(CIGpsSyncMethod value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.GpsSyncSourceGet">
            <summary>Sets the Shim of CIChannel.get_GpsSyncSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.GpsSyncSourceSetString">
            <summary>Sets the Shim of CIChannel.set_GpsSyncSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.LinearEncoderDistancePerPulseGet">
            <summary>Sets the Shim of CIChannel.get_LinearEncoderDistancePerPulse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.LinearEncoderDistancePerPulseSetDouble">
            <summary>Sets the Shim of CIChannel.set_LinearEncoderDistancePerPulse(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.LinearEncoderInitialPositionGet">
            <summary>Sets the Shim of CIChannel.get_LinearEncoderInitialPosition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.LinearEncoderInitialPositionSetDouble">
            <summary>Sets the Shim of CIChannel.set_LinearEncoderInitialPosition(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.LinearEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_LinearEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.LinearEncoderUnitsSetCILinearEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_LinearEncoderUnits(CILinearEncoderUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MaximumGet">
            <summary>Sets the Shim of CIChannel.get_Maximum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MaximumMeasurementPeriodGet">
            <summary>Sets the Shim of CIChannel.get_MaximumMeasurementPeriod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MaximumMeasurementPeriodSetDouble">
            <summary>Sets the Shim of CIChannel.set_MaximumMeasurementPeriod(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MaximumSetDouble">
            <summary>Sets the Shim of CIChannel.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MeasurementTypeGet">
            <summary>Sets the Shim of CIChannel.get_MeasurementType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MemoryMappingEnableGet">
            <summary>Sets the Shim of CIChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MinimumGet">
            <summary>Sets the Shim of CIChannel.get_Minimum()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.MinimumSetDouble">
            <summary>Sets the Shim of CIChannel.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.NumberPossiblyInvalidSamplesGet">
            <summary>Sets the Shim of CIChannel.get_NumberPossiblyInvalidSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.OutputStateGet">
            <summary>Sets the Shim of CIChannel.get_OutputState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PeriodDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDivisorGet">
            <summary>Sets the Shim of CIChannel.get_PeriodDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_PeriodDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodEnableAveragingGet">
            <summary>Sets the Shim of CIChannel.get_PeriodEnableAveraging()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodEnableAveragingSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PeriodEnableAveraging(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodHysteresisGet">
            <summary>Sets the Shim of CIChannel.get_PeriodHysteresis()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodHysteresisSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodHysteresis(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PeriodLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodLogicLevelBehaviorSetCIPeriodLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PeriodLogicLevelBehavior(CIPeriodLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodMeasurementMethodGet">
            <summary>Sets the Shim of CIChannel.get_PeriodMeasurementMethod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodMeasurementMethodSetCIPeriodMeasurementMethod">
            <summary>Sets the Shim of CIChannel.set_PeriodMeasurementMethod(CIPeriodMeasurementMethod value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_PeriodMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PeriodStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodStartingEdgeSetCIPeriodStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PeriodStartingEdge(CIPeriodStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PeriodTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodTerminalConfigurationSetCIPeriodTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PeriodTerminalConfiguration(CIPeriodTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PeriodTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PeriodTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodThresholdVoltageGet">
            <summary>Sets the Shim of CIChannel.get_PeriodThresholdVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodThresholdVoltageSetDouble">
            <summary>Sets the Shim of CIChannel.set_PeriodThresholdVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PeriodUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PeriodUnitsSetCIPeriodUnits">
            <summary>Sets the Shim of CIChannel.set_PeriodUnits(CIPeriodUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PrescalerGet">
            <summary>Sets the Shim of CIChannel.get_Prescaler()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PrescalerSetInt64">
            <summary>Sets the Shim of CIChannel.set_Prescaler(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyLogicLevelBehaviorSetCIPulseFrequencyLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyLogicLevelBehavior(CIPulseFrequencyLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyStartingEdgeSetCIPulseFrequencyStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyStartingEdge(CIPulseFrequencyStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyTerminalConfigurationSetCIPulseFrequencyTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyTerminalConfiguration(CIPulseFrequencyTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PulseFrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseFrequencyUnitsSetCIPulseFrequencyUnits">
            <summary>Sets the Shim of CIChannel.set_PulseFrequencyUnits(CIPulseFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTicksDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksLogicLevelBehaviorSetCIPulseTicksLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseTicksLogicLevelBehavior(CIPulseTicksLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksStartingEdgeSetCIPulseTicksStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseTicksStartingEdge(CIPulseTicksStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksTerminalConfigurationSetCIPulseTicksTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseTicksTerminalConfiguration(CIPulseTicksTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseTicksTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTicksTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTicksTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseTimeDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeLogicLevelBehaviorSetCIPulseTimeLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseTimeLogicLevelBehavior(CIPulseTimeLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeStartingEdgeSetCIPulseTimeStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseTimeStartingEdge(CIPulseTimeStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeTerminalConfigurationSetCIPulseTimeTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseTimeTerminalConfiguration(CIPulseTimeTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseTimeTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PulseTimeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseTimeUnitsSetCIPulseTimeUnits">
            <summary>Sets the Shim of CIChannel.set_PulseTimeUnits(CIPulseTimeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_PulseWidthDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthLogicLevelBehaviorSetCIPulseWidthLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_PulseWidthLogicLevelBehavior(CIPulseWidthLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthStartingEdgeSetCIPulseWidthStartingEdge">
            <summary>Sets the Shim of CIChannel.set_PulseWidthStartingEdge(CIPulseWidthStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthTerminalConfigurationSetCIPulseWidthTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_PulseWidthTerminalConfiguration(CIPulseWidthTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthTerminalGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_PulseWidthTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthUnitsGet">
            <summary>Sets the Shim of CIChannel.get_PulseWidthUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.PulseWidthUnitsSetCIPulseWidthUnits">
            <summary>Sets the Shim of CIChannel.set_PulseWidthUnits(CIPulseWidthUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SampleClockOverrunBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_SampleClockOverrunBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SampleClockOverrunBehaviorSetCISampleClockOverrunBehavior">
            <summary>Sets the Shim of CIChannel.set_SampleClockOverrunBehavior(CISampleClockOverrunBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SampleClockOverrunSentinelValueGet">
            <summary>Sets the Shim of CIChannel.get_SampleClockOverrunSentinelValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SampleClockOverrunSentinelValueSetInt32">
            <summary>Sets the Shim of CIChannel.set_SampleClockOverrunSentinelValue(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodLogicLevelBehaviorSetCISemiPeriodLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodLogicLevelBehavior(CISemiPeriodLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodStartingEdgeGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodStartingEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodStartingEdgeSetCISemiPeriodStartingEdge">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodStartingEdge(CISemiPeriodStartingEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodTerminalConfigurationSetCISemiPeriodTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodTerminalConfiguration(CISemiPeriodTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodTerminalGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodUnitsGet">
            <summary>Sets the Shim of CIChannel.get_SemiPeriodUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.SemiPeriodUnitsSetCISemiPeriodUnits">
            <summary>Sets the Shim of CIChannel.set_SemiPeriodUnits(CISemiPeriodUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TerminalCountReachedGet">
            <summary>Sets the Shim of CIChannel.get_TerminalCountReached()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TimestampInitialSecondsGet">
            <summary>Sets the Shim of CIChannel.get_TimestampInitialSeconds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TimestampInitialSecondsSetInt64">
            <summary>Sets the Shim of CIChannel.set_TimestampInitialSeconds(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TimestampUnitsGet">
            <summary>Sets the Shim of CIChannel.get_TimestampUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TimestampUnitsSetCITimestampUnits">
            <summary>Sets the Shim of CIChannel.set_TimestampUnits(CITimestampUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstEdgeSetCITwoEdgeSeparationFirstEdge">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstEdge(CITwoEdgeSeparationFirstEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstLogicLevelBehaviorSetCITwoEdgeSeparationFirstLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstLogicLevelBehavior(CITwoEdgeSeparationFirstLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstTerminalConfigurationSetCITwoEdgeSeparationFirstTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstTerminalConfiguration(CITwoEdgeSeparationFirstTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstTerminalGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationFirstTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationFirstTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationFirstTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondEdgeSetCITwoEdgeSeparationSecondEdge">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondEdge(CITwoEdgeSeparationSecondEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondLogicLevelBehaviorSetCITwoEdgeSeparationSecondLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondLogicLevelBehavior(CITwoEdgeSeparationSecondLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondTerminalConfigurationSetCITwoEdgeSeparationSecondTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondTerminalConfiguration(CITwoEdgeSeparationSecondTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondTerminalGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationSecondTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationSecondTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationSecondTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationUnitsGet">
            <summary>Sets the Shim of CIChannel.get_TwoEdgeSeparationUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.TwoEdgeSeparationUnitsSetCITwoEdgeSeparationUnits">
            <summary>Sets the Shim of CIChannel.set_TwoEdgeSeparationUnits(CITwoEdgeSeparationUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.UsbTransferRequestCountGet">
            <summary>Sets the Shim of CIChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of CIChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of CIChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of CIChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputLogicLevelBehaviorSetCIVelocityAInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputLogicLevelBehavior(CIVelocityAInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputTerminalConfigurationSetCIVelocityAInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputTerminalConfiguration(CIVelocityAInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityAInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAdvancedDivisorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAdvancedDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAdvancedDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_VelocityAdvancedDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAdvancedMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAdvancedMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAdvancedMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityAdvancedMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAngularEncoderPulsesPerRevolutionGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAngularEncoderPulsesPerRevolution()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAngularEncoderPulsesPerRevolutionSetInt64">
            <summary>Sets the Shim of CIChannel.set_VelocityAngularEncoderPulsesPerRevolution(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAngularEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_VelocityAngularEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityAngularEncoderUnitsSetCIVelocityAngularEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_VelocityAngularEncoderUnits(CIVelocityAngularEncoderUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterEnableGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputLogicLevelBehaviorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputLogicLevelBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputLogicLevelBehaviorSetCIVelocityBInputLogicLevelBehavior">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputLogicLevelBehavior(CIVelocityBInputLogicLevelBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputTerminalConfigurationGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputTerminalConfiguration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputTerminalConfigurationSetCIVelocityBInputTerminalConfiguration">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputTerminalConfiguration(CIVelocityBInputTerminalConfiguration value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputTerminalGet">
            <summary>Sets the Shim of CIChannel.get_VelocityBInputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityBInputTerminalSetString">
            <summary>Sets the Shim of CIChannel.set_VelocityBInputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityDecodingTypeGet">
            <summary>Sets the Shim of CIChannel.get_VelocityDecodingType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityDecodingTypeSetCIVelocityEncoderType">
            <summary>Sets the Shim of CIChannel.set_VelocityDecodingType(CIVelocityEncoderType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityDivisorGet">
            <summary>Sets the Shim of CIChannel.get_VelocityDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityDivisorSetInt64">
            <summary>Sets the Shim of CIChannel.set_VelocityDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityLinearEncoderDistancePerPulseGet">
            <summary>Sets the Shim of CIChannel.get_VelocityLinearEncoderDistancePerPulse()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityLinearEncoderDistancePerPulseSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityLinearEncoderDistancePerPulse(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityLinearEncoderUnitsGet">
            <summary>Sets the Shim of CIChannel.get_VelocityLinearEncoderUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityLinearEncoderUnitsSetCIVelocityLinearEncoderUnits">
            <summary>Sets the Shim of CIChannel.set_VelocityLinearEncoderUnits(CIVelocityLinearEncoderUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityMeasurementTimeGet">
            <summary>Sets the Shim of CIChannel.get_VelocityMeasurementTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VelocityMeasurementTimeSetDouble">
            <summary>Sets the Shim of CIChannel.set_VelocityMeasurementTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VoltageThresholdLevelGet">
            <summary>Sets the Shim of CIChannel.get_VoltageThresholdLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannel.VoltageThresholdLevelSetDouble">
            <summary>Sets the Shim of CIChannel.set_VoltageThresholdLevel(Double value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection">
            <summary>Shim type of NationalInstruments.DAQmx.CIChannelCollection</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.#ctor(NationalInstruments.DAQmx.CIChannelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllGet">
            <summary>Sets the Shim of CIChannelCollection.get_All()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.AllGet">
            <summary>Sets the Shim of CIChannelCollection.get_All()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of CIChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the Shim of CIChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CountGet">
            <summary>Sets the Shim of CIChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseCIAngularEncoderUnitsInt32DoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, CIAngularEncoderUnits units, Int32 pulsesPerRevolution, Double initialAngle, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseInt32DoubleCIAngularEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Int32 pulsesPerRevolution, Double initialAngle, CIAngularEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseInt32DoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Int32 pulsesPerRevolution, Double initialAngle, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularVelocityChannelStringStringDoubleDoubleInt64CIVelocityEncoderTypeCIVelocityAngularEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Int64 pulsesPerRevolution, CIVelocityEncoderType decodingType, CIVelocityAngularEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularVelocityChannelStringStringDoubleDoubleInt64CIVelocityEncoderTypeCIVelocityAngularEncoderUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Int64 pulsesPerRevolution, CIVelocityEncoderType decodingType, CIVelocityAngularEncoderUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularVelocityChannelStringStringDoubleDoubleInt64CIVelocityEncoderTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Int64 pulsesPerRevolution, CIVelocityEncoderType decodingType, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularVelocityChannelStringStringDoubleDoubleUInt32CIVelocityEncoderTypeCIVelocityAngularEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, UInt32 pulsesPerRevolution, CIVelocityEncoderType decodingType, CIVelocityAngularEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateAngularVelocityChannelStringStringDoubleDoubleUInt32CIVelocityEncoderTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, UInt32 pulsesPerRevolution, CIVelocityEncoderType decodingType, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateChannelStringStringCIMeasurementTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateChannel(String counter, String nameToAssignChannel, CIMeasurementType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateCountEdgesChannelStringStringCICountEdgesActiveEdgeInt64CICountEdgesCountDirection">
            <summary>Sets the Shim of CIChannelCollection.CreateCountEdgesChannel(String counter, String nameToAssignChannel, CICountEdgesActiveEdge edge, Int64 initialCount, CICountEdgesCountDirection countDirection)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateDutyCycleChannelStringStringDoubleDoubleCIDutyCycleStartingEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreateDutyCycleChannel(String counter, String nameToAssignChannel, Double minimumFrequency, Double maximumFrequency, CIDutyCycleStartingEdge edge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateFrequencyChannelStringStringDoubleDoubleCIFrequencyStartingEdgeCIFrequencyMeasurementMethodDoubleInt64CIFrequencyUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateFrequencyChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIFrequencyStartingEdge edge, CIFrequencyMeasurementMethod method, Double measurementTime, Int64 divisor, CIFrequencyUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateFrequencyChannelStringStringDoubleDoubleCIFrequencyStartingEdgeCIFrequencyMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreateFrequencyChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIFrequencyStartingEdge edge, CIFrequencyMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateFrequencyChannelStringStringDoubleDoubleCIFrequencyUnitsCIFrequencyStartingEdgeCIFrequencyMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreateFrequencyChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIFrequencyUnits units, CIFrequencyStartingEdge edge, CIFrequencyMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateGpsTimestampChannelStringStringCIGpsSyncMethodCITimestampUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateGpsTimestampChannel(String counter, String nameToAssignChannel, CIGpsSyncMethod method, CITimestampUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateGpsTimestampChannelStringStringCIGpsSyncMethodCITimestampUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateGpsTimestampChannel(String counter, String nameToAssignChannel, CIGpsSyncMethod method, CITimestampUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateGpsTimestampChannelStringStringCIGpsSyncMethodString">
            <summary>Sets the Shim of CIChannelCollection.CreateGpsTimestampChannel(String counter, String nameToAssignChannel, CIGpsSyncMethod method, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateLinearEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseCILinearEncoderUnitsDoubleDoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, CILinearEncoderUnits units, Double distancePerPulse, Double initialPosition, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateLinearEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseDoubleDoubleCILinearEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Double distancePerPulse, Double initialPosition, CILinearEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateLinearEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseDoubleDoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Double distancePerPulse, Double initialPosition, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateLinearVelocityChannelStringStringDoubleDoubleDoubleCIVelocityEncoderTypeCIVelocityLinearEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double distancePerPulse, CIVelocityEncoderType decodingType, CIVelocityLinearEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateLinearVelocityChannelStringStringDoubleDoubleDoubleCIVelocityEncoderTypeCIVelocityLinearEncoderUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double distancePerPulse, CIVelocityEncoderType decodingType, CIVelocityLinearEncoderUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateLinearVelocityChannelStringStringDoubleDoubleDoubleCIVelocityEncoderTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double distancePerPulse, CIVelocityEncoderType decodingType, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePeriodChannelStringStringDoubleDoubleCIPeriodStartingEdgeCIPeriodMeasurementMethodDoubleInt64CIPeriodUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPeriodStartingEdge edge, CIPeriodMeasurementMethod method, Double measurementTime, Int64 divisor, CIPeriodUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePeriodChannelStringStringDoubleDoubleCIPeriodStartingEdgeCIPeriodMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreatePeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPeriodStartingEdge edge, CIPeriodMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePeriodChannelStringStringDoubleDoubleCIPeriodUnitsCIPeriodStartingEdgeCIPeriodMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreatePeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPeriodUnits units, CIPeriodStartingEdge edge, CIPeriodMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePulseChannelFrequencyStringStringDoubleDoubleCIPulseFrequencyUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseChannelFrequency(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseFrequencyUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePulseChannelTicksStringStringStringDoubleDouble">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseChannelTicks(String counter, String nameToAssignChannel, String sourceTerminal, Double minimumValue, Double maximumValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePulseChannelTimeStringStringDoubleDoubleCIPulseTimeUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseChannelTime(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseTimeUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePulseWidthChannelStringStringDoubleDoubleCIPulseWidthStartingEdgeCIPulseWidthUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseWidthChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseWidthStartingEdge edge, CIPulseWidthUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePulseWidthChannelStringStringDoubleDoubleCIPulseWidthStartingEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseWidthChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseWidthStartingEdge edge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreatePulseWidthChannelStringStringDoubleDoubleCIPulseWidthUnitsCIPulseWidthStartingEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseWidthChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseWidthUnits units, CIPulseWidthStartingEdge edge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateSemiPeriodChannelStringStringDoubleDoubleCISemiPeriodUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateSemiPeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CISemiPeriodUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateSemiPeriodChannelStringStringDoubleDoubleCISemiPeriodUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateSemiPeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CISemiPeriodUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateSemiPeriodChannelStringStringDoubleDoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateSemiPeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateTwoEdgeSeparationChannelStringStringDoubleDoubleCITwoEdgeSeparationFirstEdgeCITwoEdgeSeparationSecondEdgeCITwoEdgeSeparationUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateTwoEdgeSeparationChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CITwoEdgeSeparationFirstEdge firstEdge, CITwoEdgeSeparationSecondEdge secondEdge, CITwoEdgeSeparationUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateTwoEdgeSeparationChannelStringStringDoubleDoubleCITwoEdgeSeparationFirstEdgeCITwoEdgeSeparationSecondEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreateTwoEdgeSeparationChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CITwoEdgeSeparationFirstEdge firstEdge, CITwoEdgeSeparationSecondEdge secondEdge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.CreateTwoEdgeSeparationChannelStringStringDoubleDoubleCITwoEdgeSeparationUnitsCITwoEdgeSeparationFirstEdgeCITwoEdgeSeparationSecondEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreateTwoEdgeSeparationChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CITwoEdgeSeparationUnits units, CITwoEdgeSeparationFirstEdge firstEdge, CITwoEdgeSeparationSecondEdge secondEdge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.GetEnumerator">
            <summary>Sets the Shim of CIChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.ICollection_CountGet">
            <summary>Sets the Shim of CIChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.InvalidateEnumerators">
            <summary>Sets the Shim of CIChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the Shim of CIChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.ItemGetInt64">
            <summary>Sets the Shim of CIChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.ItemGetString">
            <summary>Sets the Shim of CIChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.SyncRootGet">
            <summary>Sets the Shim of CIChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.AllInstances.ToString01">
            <summary>Sets the Shim of CIChannelCollection.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of CIChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.ConstructorTask">
            <summary>Sets the Shim of CIChannelCollection.CIChannelCollection(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CopyToArrayInt32">
            <summary>Sets the Shim of CIChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CountGet">
            <summary>Sets the Shim of CIChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseCIAngularEncoderUnitsInt32DoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, CIAngularEncoderUnits units, Int32 pulsesPerRevolution, Double initialAngle, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseInt32DoubleCIAngularEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Int32 pulsesPerRevolution, Double initialAngle, CIAngularEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseInt32DoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Int32 pulsesPerRevolution, Double initialAngle, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularVelocityChannelStringStringDoubleDoubleInt64CIVelocityEncoderTypeCIVelocityAngularEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Int64 pulsesPerRevolution, CIVelocityEncoderType decodingType, CIVelocityAngularEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularVelocityChannelStringStringDoubleDoubleInt64CIVelocityEncoderTypeCIVelocityAngularEncoderUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Int64 pulsesPerRevolution, CIVelocityEncoderType decodingType, CIVelocityAngularEncoderUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularVelocityChannelStringStringDoubleDoubleInt64CIVelocityEncoderTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Int64 pulsesPerRevolution, CIVelocityEncoderType decodingType, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularVelocityChannelStringStringDoubleDoubleUInt32CIVelocityEncoderTypeCIVelocityAngularEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, UInt32 pulsesPerRevolution, CIVelocityEncoderType decodingType, CIVelocityAngularEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateAngularVelocityChannelStringStringDoubleDoubleUInt32CIVelocityEncoderTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateAngularVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, UInt32 pulsesPerRevolution, CIVelocityEncoderType decodingType, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateChannelStringStringCIMeasurementTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateChannel(String counter, String nameToAssignChannel, CIMeasurementType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateCountEdgesChannelStringStringCICountEdgesActiveEdgeInt64CICountEdgesCountDirection">
            <summary>Sets the Shim of CIChannelCollection.CreateCountEdgesChannel(String counter, String nameToAssignChannel, CICountEdgesActiveEdge edge, Int64 initialCount, CICountEdgesCountDirection countDirection)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateDutyCycleChannelStringStringDoubleDoubleCIDutyCycleStartingEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreateDutyCycleChannel(String counter, String nameToAssignChannel, Double minimumFrequency, Double maximumFrequency, CIDutyCycleStartingEdge edge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateFrequencyChannelStringStringDoubleDoubleCIFrequencyStartingEdgeCIFrequencyMeasurementMethodDoubleInt64CIFrequencyUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateFrequencyChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIFrequencyStartingEdge edge, CIFrequencyMeasurementMethod method, Double measurementTime, Int64 divisor, CIFrequencyUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateFrequencyChannelStringStringDoubleDoubleCIFrequencyStartingEdgeCIFrequencyMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreateFrequencyChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIFrequencyStartingEdge edge, CIFrequencyMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateFrequencyChannelStringStringDoubleDoubleCIFrequencyUnitsCIFrequencyStartingEdgeCIFrequencyMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreateFrequencyChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIFrequencyUnits units, CIFrequencyStartingEdge edge, CIFrequencyMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateGpsTimestampChannelStringStringCIGpsSyncMethodCITimestampUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateGpsTimestampChannel(String counter, String nameToAssignChannel, CIGpsSyncMethod method, CITimestampUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateGpsTimestampChannelStringStringCIGpsSyncMethodCITimestampUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateGpsTimestampChannel(String counter, String nameToAssignChannel, CIGpsSyncMethod method, CITimestampUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateGpsTimestampChannelStringStringCIGpsSyncMethodString">
            <summary>Sets the Shim of CIChannelCollection.CreateGpsTimestampChannel(String counter, String nameToAssignChannel, CIGpsSyncMethod method, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateLinearEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseCILinearEncoderUnitsDoubleDoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, CILinearEncoderUnits units, Double distancePerPulse, Double initialPosition, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateLinearEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseDoubleDoubleCILinearEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Double distancePerPulse, Double initialPosition, CILinearEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateLinearEncoderChannelStringStringCIEncoderDecodingTypeBooleanDoubleCIEncoderZIndexPhaseDoubleDoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearEncoderChannel(String counter, String nameToAssignChannel, CIEncoderDecodingType encoderDecodingType, Boolean zIndexEnable, Double zIndexValue, CIEncoderZIndexPhase zIndexPhase, Double distancePerPulse, Double initialPosition, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateLinearVelocityChannelStringStringDoubleDoubleDoubleCIVelocityEncoderTypeCIVelocityLinearEncoderUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double distancePerPulse, CIVelocityEncoderType decodingType, CIVelocityLinearEncoderUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateLinearVelocityChannelStringStringDoubleDoubleDoubleCIVelocityEncoderTypeCIVelocityLinearEncoderUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double distancePerPulse, CIVelocityEncoderType decodingType, CIVelocityLinearEncoderUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateLinearVelocityChannelStringStringDoubleDoubleDoubleCIVelocityEncoderTypeString">
            <summary>Sets the Shim of CIChannelCollection.CreateLinearVelocityChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, Double distancePerPulse, CIVelocityEncoderType decodingType, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePeriodChannelStringStringDoubleDoubleCIPeriodStartingEdgeCIPeriodMeasurementMethodDoubleInt64CIPeriodUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPeriodStartingEdge edge, CIPeriodMeasurementMethod method, Double measurementTime, Int64 divisor, CIPeriodUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePeriodChannelStringStringDoubleDoubleCIPeriodStartingEdgeCIPeriodMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreatePeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPeriodStartingEdge edge, CIPeriodMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePeriodChannelStringStringDoubleDoubleCIPeriodUnitsCIPeriodStartingEdgeCIPeriodMeasurementMethodDoubleInt64String">
            <summary>Sets the Shim of CIChannelCollection.CreatePeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPeriodUnits units, CIPeriodStartingEdge edge, CIPeriodMeasurementMethod method, Double measurementTime, Int64 divisor, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePulseChannelFrequencyStringStringDoubleDoubleCIPulseFrequencyUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseChannelFrequency(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseFrequencyUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePulseChannelTicksStringStringStringDoubleDouble">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseChannelTicks(String counter, String nameToAssignChannel, String sourceTerminal, Double minimumValue, Double maximumValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePulseChannelTimeStringStringDoubleDoubleCIPulseTimeUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseChannelTime(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseTimeUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePulseWidthChannelStringStringDoubleDoubleCIPulseWidthStartingEdgeCIPulseWidthUnits">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseWidthChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseWidthStartingEdge edge, CIPulseWidthUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePulseWidthChannelStringStringDoubleDoubleCIPulseWidthStartingEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseWidthChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseWidthStartingEdge edge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreatePulseWidthChannelStringStringDoubleDoubleCIPulseWidthUnitsCIPulseWidthStartingEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreatePulseWidthChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CIPulseWidthUnits units, CIPulseWidthStartingEdge edge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateSemiPeriodChannelStringStringDoubleDoubleCISemiPeriodUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateSemiPeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CISemiPeriodUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateSemiPeriodChannelStringStringDoubleDoubleCISemiPeriodUnitsString">
            <summary>Sets the Shim of CIChannelCollection.CreateSemiPeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CISemiPeriodUnits units, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateSemiPeriodChannelStringStringDoubleDoubleString">
            <summary>Sets the Shim of CIChannelCollection.CreateSemiPeriodChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateTwoEdgeSeparationChannelStringStringDoubleDoubleCITwoEdgeSeparationFirstEdgeCITwoEdgeSeparationSecondEdgeCITwoEdgeSeparationUnits">
            <summary>Sets the Shim of CIChannelCollection.CreateTwoEdgeSeparationChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CITwoEdgeSeparationFirstEdge firstEdge, CITwoEdgeSeparationSecondEdge secondEdge, CITwoEdgeSeparationUnits units)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateTwoEdgeSeparationChannelStringStringDoubleDoubleCITwoEdgeSeparationFirstEdgeCITwoEdgeSeparationSecondEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreateTwoEdgeSeparationChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CITwoEdgeSeparationFirstEdge firstEdge, CITwoEdgeSeparationSecondEdge secondEdge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.CreateTwoEdgeSeparationChannelStringStringDoubleDoubleCITwoEdgeSeparationUnitsCITwoEdgeSeparationFirstEdgeCITwoEdgeSeparationSecondEdgeString">
            <summary>Sets the Shim of CIChannelCollection.CreateTwoEdgeSeparationChannel(String counter, String nameToAssignChannel, Double minimumValue, Double maximumValue, CITwoEdgeSeparationUnits units, CITwoEdgeSeparationFirstEdge firstEdge, CITwoEdgeSeparationSecondEdge secondEdge, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.GetEnumerator">
            <summary>Sets the Shim of CIChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.ICollection_CountGet">
            <summary>Sets the Shim of CIChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.InvalidateEnumerators">
            <summary>Sets the Shim of CIChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.IsSynchronizedGet">
            <summary>Sets the Shim of CIChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.ItemGetInt64">
            <summary>Sets the Shim of CIChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.ItemGetString">
            <summary>Sets the Shim of CIChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.SyncRootGet">
            <summary>Sets the Shim of CIChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIChannelCollection.ToString">
            <summary>Sets the Shim of CIChannelCollection.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency">
            <summary>Shim type of NationalInstruments.DAQmx.CIDataFrequency</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.EqualityOpCIDataFrequencyCIDataFrequency">
            <summary>Sets the Shim of CIDataFrequency.op_Equality(CIDataFrequency c1, CIDataFrequency c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.EqualsCIDataFrequencyCIDataFrequency">
            <summary>Sets the Shim of CIDataFrequency.Equals(CIDataFrequency c1, CIDataFrequency c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataFrequency.InequalityOpCIDataFrequencyCIDataFrequency">
            <summary>Sets the Shim of CIDataFrequency.op_Inequality(CIDataFrequency c1, CIDataFrequency c2)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks">
            <summary>Shim type of NationalInstruments.DAQmx.CIDataTicks</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.EqualityOpCIDataTicksCIDataTicks">
            <summary>Sets the Shim of CIDataTicks.op_Equality(CIDataTicks c1, CIDataTicks c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.EqualsCIDataTicksCIDataTicks">
            <summary>Sets the Shim of CIDataTicks.Equals(CIDataTicks c1, CIDataTicks c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTicks.InequalityOpCIDataTicksCIDataTicks">
            <summary>Sets the Shim of CIDataTicks.op_Inequality(CIDataTicks c1, CIDataTicks c2)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIDataTime">
            <summary>Shim type of NationalInstruments.DAQmx.CIDataTime</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.EqualityOpCIDataTimeCIDataTime">
            <summary>Sets the Shim of CIDataTime.op_Equality(CIDataTime c1, CIDataTime c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.EqualsCIDataTimeCIDataTime">
            <summary>Sets the Shim of CIDataTime.Equals(CIDataTime c1, CIDataTime c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCIDataTime.InequalityOpCIDataTimeCIDataTime">
            <summary>Sets the Shim of CIDataTime.op_Inequality(CIDataTime c1, CIDataTime c2)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCOChannel">
            <summary>Shim type of NationalInstruments.DAQmx.COChannel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannel.#ctor(NationalInstruments.DAQmx.COChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.AutoIncrementCountGet">
            <summary>Sets the Shim of COChannel.get_AutoIncrementCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.AutoIncrementCountSetInt64">
            <summary>Sets the Shim of COChannel.set_AutoIncrementCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.ConstrainedGenerationModeGet">
            <summary>Sets the Shim of COChannel.get_ConstrainedGenerationMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.ConstrainedGenerationModeSetCOConstrainedGenerationMode">
            <summary>Sets the Shim of COChannel.set_ConstrainedGenerationMode(COConstrainedGenerationMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CountGet">
            <summary>Sets the Shim of COChannel.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseActiveEdgeGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseActiveEdgeSetCOCounterTimebaseActiveEdge">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseActiveEdge(COCounterTimebaseActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterEnableGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseMasterTimebaseDivisorGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseMasterTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseMasterTimebaseDivisorSetInt64">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseMasterTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseRateGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseRateSetDouble">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseSourceGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.CounterTimebaseSourceSetString">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.DataTransferMechanismGet">
            <summary>Sets the Shim of COChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.DataTransferMechanismSetCODataTransferMechanism">
            <summary>Sets the Shim of COChannel.set_DataTransferMechanism(CODataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.DataTransferRequestConditionGet">
            <summary>Sets the Shim of COChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.DataTransferRequestConditionSetCODataTransferRequestCondition">
            <summary>Sets the Shim of COChannel.set_DataTransferRequestCondition(CODataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.EnableInitialDelayOnRetriggerGet">
            <summary>Sets the Shim of COChannel.get_EnableInitialDelayOnRetrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.EnableInitialDelayOnRetriggerSetBoolean">
            <summary>Sets the Shim of COChannel.set_EnableInitialDelayOnRetrigger(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of COChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of COChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.MemoryMappingEnableGet">
            <summary>Sets the Shim of COChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of COChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.OutputStateGet">
            <summary>Sets the Shim of COChannel.get_OutputState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.OutputTypeGet">
            <summary>Sets the Shim of COChannel.get_OutputType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PrescalerGet">
            <summary>Sets the Shim of COChannel.get_Prescaler()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PrescalerSetInt64">
            <summary>Sets the Shim of COChannel.set_Prescaler(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseDoneGet">
            <summary>Sets the Shim of COChannel.get_PulseDone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseDutyCycleGet">
            <summary>Sets the Shim of COChannel.get_PulseDutyCycle()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseDutyCycleSetDouble">
            <summary>Sets the Shim of COChannel.set_PulseDutyCycle(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseFrequencyGet">
            <summary>Sets the Shim of COChannel.get_PulseFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseFrequencyInitialDelayGet">
            <summary>Sets the Shim of COChannel.get_PulseFrequencyInitialDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseFrequencyInitialDelaySetDouble">
            <summary>Sets the Shim of COChannel.set_PulseFrequencyInitialDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseFrequencySetDouble">
            <summary>Sets the Shim of COChannel.set_PulseFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseFrequencyUnitsGet">
            <summary>Sets the Shim of COChannel.get_PulseFrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseFrequencyUnitsSetCOPulseFrequencyUnits">
            <summary>Sets the Shim of COChannel.set_PulseFrequencyUnits(COPulseFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseHighTicksGet">
            <summary>Sets the Shim of COChannel.get_PulseHighTicks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseHighTicksSetInt64">
            <summary>Sets the Shim of COChannel.set_PulseHighTicks(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseHighTimeGet">
            <summary>Sets the Shim of COChannel.get_PulseHighTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseHighTimeSetDouble">
            <summary>Sets the Shim of COChannel.set_PulseHighTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseIdleStateGet">
            <summary>Sets the Shim of COChannel.get_PulseIdleState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseIdleStateSetCOPulseIdleState">
            <summary>Sets the Shim of COChannel.set_PulseIdleState(COPulseIdleState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseLowTicksGet">
            <summary>Sets the Shim of COChannel.get_PulseLowTicks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseLowTicksSetInt64">
            <summary>Sets the Shim of COChannel.set_PulseLowTicks(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseLowTimeGet">
            <summary>Sets the Shim of COChannel.get_PulseLowTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseLowTimeSetDouble">
            <summary>Sets the Shim of COChannel.set_PulseLowTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTerminalGet">
            <summary>Sets the Shim of COChannel.get_PulseTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTerminalSetString">
            <summary>Sets the Shim of COChannel.set_PulseTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTicksInitialDelayGet">
            <summary>Sets the Shim of COChannel.get_PulseTicksInitialDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTicksInitialDelaySetInt64">
            <summary>Sets the Shim of COChannel.set_PulseTicksInitialDelay(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTimeInitialDelayGet">
            <summary>Sets the Shim of COChannel.get_PulseTimeInitialDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTimeInitialDelaySetDouble">
            <summary>Sets the Shim of COChannel.set_PulseTimeInitialDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTimeUnitsGet">
            <summary>Sets the Shim of COChannel.get_PulseTimeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.PulseTimeUnitsSetCOPulseTimeUnits">
            <summary>Sets the Shim of COChannel.set_PulseTimeUnits(COPulseTimeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.ReadyForNewValueGet">
            <summary>Sets the Shim of COChannel.get_ReadyForNewValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.UsbTransferRequestCountGet">
            <summary>Sets the Shim of COChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of COChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of COChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of COChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.UseOnlyOnBoardMemoryGet">
            <summary>Sets the Shim of COChannel.get_UseOnlyOnBoardMemory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AllInstances.UseOnlyOnBoardMemorySetBoolean">
            <summary>Sets the Shim of COChannel.set_UseOnlyOnBoardMemory(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AutoIncrementCountGet">
            <summary>Sets the Shim of COChannel.get_AutoIncrementCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.AutoIncrementCountSetInt64">
            <summary>Sets the Shim of COChannel.set_AutoIncrementCount(Int64 value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannel.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.ConstrainedGenerationModeGet">
            <summary>Sets the Shim of COChannel.get_ConstrainedGenerationMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.ConstrainedGenerationModeSetCOConstrainedGenerationMode">
            <summary>Sets the Shim of COChannel.set_ConstrainedGenerationMode(COConstrainedGenerationMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.ConstructorStringTask">
            <summary>Sets the Shim of COChannel.COChannel(String str, Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CountGet">
            <summary>Sets the Shim of COChannel.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseActiveEdgeGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseActiveEdgeSetCOCounterTimebaseActiveEdge">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseActiveEdge(COCounterTimebaseActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterEnableGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseMasterTimebaseDivisorGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseMasterTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseMasterTimebaseDivisorSetInt64">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseMasterTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseRateGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseRateSetDouble">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseSourceGet">
            <summary>Sets the Shim of COChannel.get_CounterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.CounterTimebaseSourceSetString">
            <summary>Sets the Shim of COChannel.set_CounterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.DataTransferMechanismGet">
            <summary>Sets the Shim of COChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.DataTransferMechanismSetCODataTransferMechanism">
            <summary>Sets the Shim of COChannel.set_DataTransferMechanism(CODataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.DataTransferRequestConditionGet">
            <summary>Sets the Shim of COChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.DataTransferRequestConditionSetCODataTransferRequestCondition">
            <summary>Sets the Shim of COChannel.set_DataTransferRequestCondition(CODataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.EnableInitialDelayOnRetriggerGet">
            <summary>Sets the Shim of COChannel.get_EnableInitialDelayOnRetrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.EnableInitialDelayOnRetriggerSetBoolean">
            <summary>Sets the Shim of COChannel.set_EnableInitialDelayOnRetrigger(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of COChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of COChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.MemoryMappingEnableGet">
            <summary>Sets the Shim of COChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of COChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.OutputStateGet">
            <summary>Sets the Shim of COChannel.get_OutputState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.OutputTypeGet">
            <summary>Sets the Shim of COChannel.get_OutputType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PrescalerGet">
            <summary>Sets the Shim of COChannel.get_Prescaler()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PrescalerSetInt64">
            <summary>Sets the Shim of COChannel.set_Prescaler(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseDoneGet">
            <summary>Sets the Shim of COChannel.get_PulseDone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseDutyCycleGet">
            <summary>Sets the Shim of COChannel.get_PulseDutyCycle()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseDutyCycleSetDouble">
            <summary>Sets the Shim of COChannel.set_PulseDutyCycle(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseFrequencyGet">
            <summary>Sets the Shim of COChannel.get_PulseFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseFrequencyInitialDelayGet">
            <summary>Sets the Shim of COChannel.get_PulseFrequencyInitialDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseFrequencyInitialDelaySetDouble">
            <summary>Sets the Shim of COChannel.set_PulseFrequencyInitialDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseFrequencySetDouble">
            <summary>Sets the Shim of COChannel.set_PulseFrequency(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseFrequencyUnitsGet">
            <summary>Sets the Shim of COChannel.get_PulseFrequencyUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseFrequencyUnitsSetCOPulseFrequencyUnits">
            <summary>Sets the Shim of COChannel.set_PulseFrequencyUnits(COPulseFrequencyUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseHighTicksGet">
            <summary>Sets the Shim of COChannel.get_PulseHighTicks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseHighTicksSetInt64">
            <summary>Sets the Shim of COChannel.set_PulseHighTicks(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseHighTimeGet">
            <summary>Sets the Shim of COChannel.get_PulseHighTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseHighTimeSetDouble">
            <summary>Sets the Shim of COChannel.set_PulseHighTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseIdleStateGet">
            <summary>Sets the Shim of COChannel.get_PulseIdleState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseIdleStateSetCOPulseIdleState">
            <summary>Sets the Shim of COChannel.set_PulseIdleState(COPulseIdleState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseLowTicksGet">
            <summary>Sets the Shim of COChannel.get_PulseLowTicks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseLowTicksSetInt64">
            <summary>Sets the Shim of COChannel.set_PulseLowTicks(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseLowTimeGet">
            <summary>Sets the Shim of COChannel.get_PulseLowTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseLowTimeSetDouble">
            <summary>Sets the Shim of COChannel.set_PulseLowTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTerminalGet">
            <summary>Sets the Shim of COChannel.get_PulseTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTerminalSetString">
            <summary>Sets the Shim of COChannel.set_PulseTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTicksInitialDelayGet">
            <summary>Sets the Shim of COChannel.get_PulseTicksInitialDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTicksInitialDelaySetInt64">
            <summary>Sets the Shim of COChannel.set_PulseTicksInitialDelay(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTimeInitialDelayGet">
            <summary>Sets the Shim of COChannel.get_PulseTimeInitialDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTimeInitialDelaySetDouble">
            <summary>Sets the Shim of COChannel.set_PulseTimeInitialDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTimeUnitsGet">
            <summary>Sets the Shim of COChannel.get_PulseTimeUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.PulseTimeUnitsSetCOPulseTimeUnits">
            <summary>Sets the Shim of COChannel.set_PulseTimeUnits(COPulseTimeUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.ReadyForNewValueGet">
            <summary>Sets the Shim of COChannel.get_ReadyForNewValue()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.UsbTransferRequestCountGet">
            <summary>Sets the Shim of COChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of COChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of COChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of COChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.UseOnlyOnBoardMemoryGet">
            <summary>Sets the Shim of COChannel.get_UseOnlyOnBoardMemory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannel.UseOnlyOnBoardMemorySetBoolean">
            <summary>Sets the Shim of COChannel.set_UseOnlyOnBoardMemory(Boolean value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection">
            <summary>Shim type of NationalInstruments.DAQmx.COChannelCollection</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.#ctor(NationalInstruments.DAQmx.COChannelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllGet">
            <summary>Sets the Shim of COChannelCollection.get_All()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.AllGet">
            <summary>Sets the Shim of COChannelCollection.get_All()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of COChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the Shim of COChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.CountGet">
            <summary>Sets the Shim of COChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.CreateChannelStringStringCOOutputTypeString">
            <summary>Sets the Shim of COChannelCollection.CreateChannel(String counter, String nameToAssignChannel, COOutputType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.CreatePulseChannelFrequencyStringStringCOPulseFrequencyUnitsCOPulseIdleStateDoubleDoubleDouble">
            <summary>Sets the Shim of COChannelCollection.CreatePulseChannelFrequency(String counter, String nameToAssignChannel, COPulseFrequencyUnits units, COPulseIdleState idleState, Double initialDelay, Double frequency, Double dutyCycle)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.CreatePulseChannelTicksStringStringStringCOPulseIdleStateInt32Int32Int32">
            <summary>Sets the Shim of COChannelCollection.CreatePulseChannelTicks(String counter, String nameToAssignChannel, String sourceTerminal, COPulseIdleState idleState, Int32 initialDelay, Int32 lowTicks, Int32 highTicks)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.CreatePulseChannelTimeStringStringCOPulseTimeUnitsCOPulseIdleStateDoubleDoubleDouble">
            <summary>Sets the Shim of COChannelCollection.CreatePulseChannelTime(String counter, String nameToAssignChannel, COPulseTimeUnits units, COPulseIdleState idleState, Double initialDelay, Double lowTime, Double highTime)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.GetEnumerator">
            <summary>Sets the Shim of COChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.ICollection_CountGet">
            <summary>Sets the Shim of COChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.InvalidateEnumerators">
            <summary>Sets the Shim of COChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the Shim of COChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.ItemGetInt64">
            <summary>Sets the Shim of COChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.ItemGetString">
            <summary>Sets the Shim of COChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.SyncRootGet">
            <summary>Sets the Shim of COChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.AllInstances.ToString01">
            <summary>Sets the Shim of COChannelCollection.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of COChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.ConstructorTask">
            <summary>Sets the Shim of COChannelCollection.COChannelCollection(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.CopyToArrayInt32">
            <summary>Sets the Shim of COChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.CountGet">
            <summary>Sets the Shim of COChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.CreateChannelStringStringCOOutputTypeString">
            <summary>Sets the Shim of COChannelCollection.CreateChannel(String counter, String nameToAssignChannel, COOutputType type, String customScaleName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.CreatePulseChannelFrequencyStringStringCOPulseFrequencyUnitsCOPulseIdleStateDoubleDoubleDouble">
            <summary>Sets the Shim of COChannelCollection.CreatePulseChannelFrequency(String counter, String nameToAssignChannel, COPulseFrequencyUnits units, COPulseIdleState idleState, Double initialDelay, Double frequency, Double dutyCycle)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.CreatePulseChannelTicksStringStringStringCOPulseIdleStateInt32Int32Int32">
            <summary>Sets the Shim of COChannelCollection.CreatePulseChannelTicks(String counter, String nameToAssignChannel, String sourceTerminal, COPulseIdleState idleState, Int32 initialDelay, Int32 lowTicks, Int32 highTicks)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.CreatePulseChannelTimeStringStringCOPulseTimeUnitsCOPulseIdleStateDoubleDoubleDouble">
            <summary>Sets the Shim of COChannelCollection.CreatePulseChannelTime(String counter, String nameToAssignChannel, COPulseTimeUnits units, COPulseIdleState idleState, Double initialDelay, Double lowTime, Double highTime)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.GetEnumerator">
            <summary>Sets the Shim of COChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.ICollection_CountGet">
            <summary>Sets the Shim of COChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.InvalidateEnumerators">
            <summary>Sets the Shim of COChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.IsSynchronizedGet">
            <summary>Sets the Shim of COChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.ItemGetInt64">
            <summary>Sets the Shim of COChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.ItemGetString">
            <summary>Sets the Shim of COChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.SyncRootGet">
            <summary>Sets the Shim of COChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCOChannelCollection.ToString">
            <summary>Sets the Shim of COChannelCollection.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency">
            <summary>Shim type of NationalInstruments.DAQmx.CODataFrequency</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.EqualityOpCODataFrequencyCODataFrequency">
            <summary>Sets the Shim of CODataFrequency.op_Equality(CODataFrequency c1, CODataFrequency c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.EqualsCODataFrequencyCODataFrequency">
            <summary>Sets the Shim of CODataFrequency.Equals(CODataFrequency c1, CODataFrequency c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataFrequency.InequalityOpCODataFrequencyCODataFrequency">
            <summary>Sets the Shim of CODataFrequency.op_Inequality(CODataFrequency c1, CODataFrequency c2)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCODataTicks">
            <summary>Shim type of NationalInstruments.DAQmx.CODataTicks</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.EqualityOpCODataTicksCODataTicks">
            <summary>Sets the Shim of CODataTicks.op_Equality(CODataTicks c1, CODataTicks c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.EqualsCODataTicksCODataTicks">
            <summary>Sets the Shim of CODataTicks.Equals(CODataTicks c1, CODataTicks c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTicks.InequalityOpCODataTicksCODataTicks">
            <summary>Sets the Shim of CODataTicks.op_Inequality(CODataTicks c1, CODataTicks c2)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCODataTime">
            <summary>Shim type of NationalInstruments.DAQmx.CODataTime</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataTime.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCODataTime.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataTime.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCODataTime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTime.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTime.EqualityOpCODataTimeCODataTime">
            <summary>Sets the Shim of CODataTime.op_Equality(CODataTime c1, CODataTime c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTime.EqualsCODataTimeCODataTime">
            <summary>Sets the Shim of CODataTime.Equals(CODataTime c1, CODataTime c2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCODataTime.InequalityOpCODataTimeCODataTime">
            <summary>Sets the Shim of CODataTime.op_Inequality(CODataTime c1, CODataTime c2)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimChannel">
            <summary>Shim type of NationalInstruments.DAQmx.Channel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimChannel.#ctor(NationalInstruments.DAQmx.Channel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.CalculateComponentChannelStrings">
            <summary>Sets the Shim of Channel.CalculateComponentChannelStrings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.DescriptionGet">
            <summary>Sets the Shim of Channel.get_Description()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.DescriptionSetString">
            <summary>Sets the Shim of Channel.set_Description(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.Dispose">
            <summary>Sets the Shim of Channel.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of Channel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.IsGlobalGet">
            <summary>Sets the Shim of Channel.get_IsGlobal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.MSeriesLegacyCompatibilityGet">
            <summary>Sets the Shim of Channel.get_MSeriesLegacyCompatibility()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.MSeriesLegacyCompatibilitySetBoolean">
            <summary>Sets the Shim of Channel.set_MSeriesLegacyCompatibility(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.PhysicalNameGet">
            <summary>Sets the Shim of Channel.get_PhysicalName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.PhysicalNameSetString">
            <summary>Sets the Shim of Channel.set_PhysicalName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.RollbackFailedChannelCreations">
            <summary>Sets the Shim of Channel.RollbackFailedChannelCreations()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.SetCjcParametersAIThermocoupleCjcSourceString">
            <summary>Sets the Shim of Channel.SetCjcParameters(AIThermocoupleCjcSource cjcSource, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.SynchronizationUnlockBehaviorGet">
            <summary>Sets the Shim of Channel.get_SynchronizationUnlockBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.SynchronizationUnlockBehaviorSetChannelSynchronizationUnlockBehavior">
            <summary>Sets the Shim of Channel.set_SynchronizationUnlockBehavior(ChannelSynchronizationUnlockBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of Channel.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.ToString01">
            <summary>Sets the Shim of Channel.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.TypeGet">
            <summary>Sets the Shim of Channel.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances.VirtualNameGet">
            <summary>Sets the Shim of Channel.get_VirtualName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances._Channel">
            <summary>Sets the Shim of Channel.!Channel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.AllInstances._Channel01">
            <summary>Sets the Shim of Channel.~Channel()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.CalculateComponentChannelStrings">
            <summary>Sets the Shim of Channel.CalculateComponentChannelStrings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.ConstructorStringTask">
            <summary>Sets the Shim of Channel.Channel(String str, Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.DescriptionGet">
            <summary>Sets the Shim of Channel.get_Description()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.DescriptionSetString">
            <summary>Sets the Shim of Channel.set_Description(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.Dispose">
            <summary>Sets the Shim of Channel.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.DisposeBoolean">
            <summary>Sets the Shim of Channel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.IsGlobalGet">
            <summary>Sets the Shim of Channel.get_IsGlobal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.MSeriesLegacyCompatibilityGet">
            <summary>Sets the Shim of Channel.get_MSeriesLegacyCompatibility()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.MSeriesLegacyCompatibilitySetBoolean">
            <summary>Sets the Shim of Channel.set_MSeriesLegacyCompatibility(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.PhysicalNameGet">
            <summary>Sets the Shim of Channel.get_PhysicalName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.PhysicalNameSetString">
            <summary>Sets the Shim of Channel.set_PhysicalName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.RollbackFailedChannelCreations">
            <summary>Sets the Shim of Channel.RollbackFailedChannelCreations()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.SetCjcParametersAIThermocoupleCjcSourceString">
            <summary>Sets the Shim of Channel.SetCjcParameters(AIThermocoupleCjcSource cjcSource, String cjcChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.SynchronizationUnlockBehaviorGet">
            <summary>Sets the Shim of Channel.get_SynchronizationUnlockBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.SynchronizationUnlockBehaviorSetChannelSynchronizationUnlockBehavior">
            <summary>Sets the Shim of Channel.set_SynchronizationUnlockBehavior(ChannelSynchronizationUnlockBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.ThrowIfDisposed">
            <summary>Sets the Shim of Channel.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.ToString">
            <summary>Sets the Shim of Channel.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.TypeGet">
            <summary>Sets the Shim of Channel.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel.VirtualNameGet">
            <summary>Sets the Shim of Channel.get_VirtualName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel._Channel">
            <summary>Sets the Shim of Channel.!Channel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimChannel._Channel01">
            <summary>Sets the Shim of Channel.~Channel()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader">
            <summary>Shim type of NationalInstruments.DAQmx.CounterMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.#ctor(NationalInstruments.DAQmx.CounterMultiChannelReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleMdArray2">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleMdArray2ReallocationPolicy">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32MdArray2">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32MdArray2">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginReadMultiSampleDoubleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginReadMultiSampleInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginReadMultiSampleUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginReadSingleSampleDoubleAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginReadSingleSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.BeginReadSingleSampleUInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleDoubleIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndReadMultiSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndReadMultiSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndReadMultiSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndReadSingleSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndReadSingleSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.EndReadSingleSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleDoubleInt32DoubleMdArray2RefInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.MemoryOptimizedReadMultiSampleDouble(Int32 samplesPerChannel, Double[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleDoubleInt32DoubleMdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.MemoryOptimizedReadMultiSampleDouble(Int32 samplesPerChannel, Double[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32Int32Int32MdArray2RefInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.MemoryOptimizedReadMultiSampleInt32(Int32 samplesPerChannel, Int32[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32Int32Int32MdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.MemoryOptimizedReadMultiSampleInt32(Int32 samplesPerChannel, Int32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleUInt32Int32UInt32MdArray2RefInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.MemoryOptimizedReadMultiSampleUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSampleUInt32Int32UInt32MdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.MemoryOptimizedReadMultiSampleUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.ReadMultiSampleDoubleInt32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadMultiSampleDouble(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.ReadMultiSampleInt32Int32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadMultiSampleInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.ReadMultiSampleUInt32Int32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadMultiSampleUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.ReadSingleSampleDouble">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.ReadSingleSampleInt32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.ReadSingleSampleUInt32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.AllInstances.ToString01">
            <summary>Sets the Shim of CounterMultiChannelReader.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleMdArray2">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleMdArray2ReallocationPolicy">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32MdArray2">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32MdArray2">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginReadMultiSampleDoubleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginReadMultiSampleInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginReadMultiSampleUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginReadSingleSampleDoubleAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginReadSingleSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BeginReadSingleSampleUInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ConstructorDaqStream">
            <summary>Sets the Shim of CounterMultiChannelReader.CounterMultiChannelReader(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleDoubleIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterMultiChannelReader.EndMemoryOptimizedReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndReadMultiSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndReadMultiSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndReadMultiSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndReadSingleSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndReadSingleSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.EndReadSingleSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ReadMultiSampleDoubleInt32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadMultiSampleDouble(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ReadMultiSampleInt32Int32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadMultiSampleInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ReadMultiSampleUInt32Int32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadMultiSampleUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ReadSingleSampleDouble">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ReadSingleSampleInt32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ReadSingleSampleUInt32">
            <summary>Sets the Shim of CounterMultiChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelReader.ToString">
            <summary>Sets the Shim of CounterMultiChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter">
            <summary>Shim type of NationalInstruments.DAQmx.CounterMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.#ctor(NationalInstruments.DAQmx.CounterMultiChannelWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.BeginWriteSingleSampleBooleanCODataFrequencyArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.BeginWriteSingleSampleBooleanCODataTicksArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.BeginWriteSingleSampleBooleanCODataTimeArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.ToString01">
            <summary>Sets the Shim of CounterMultiChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.WriteSingleSampleBooleanCODataFrequencyArray">
            <summary>Sets the Shim of CounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.WriteSingleSampleBooleanCODataTicksArray">
            <summary>Sets the Shim of CounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.AllInstances.WriteSingleSampleBooleanCODataTimeArray">
            <summary>Sets the Shim of CounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.BeginWriteSingleSampleBooleanCODataFrequencyArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.BeginWriteSingleSampleBooleanCODataTicksArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.BeginWriteSingleSampleBooleanCODataTimeArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.ConstructorDaqStream">
            <summary>Sets the Shim of CounterMultiChannelWriter.CounterMultiChannelWriter(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the Shim of CounterMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.ToString">
            <summary>Sets the Shim of CounterMultiChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.WriteSingleSampleBooleanCODataFrequencyArray">
            <summary>Sets the Shim of CounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.WriteSingleSampleBooleanCODataTicksArray">
            <summary>Sets the Shim of CounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterMultiChannelWriter.WriteSingleSampleBooleanCODataTimeArray">
            <summary>Sets the Shim of CounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.CounterOutputEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.#ctor(NationalInstruments.DAQmx.CounterOutputEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of CounterOutputEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of CounterOutputEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.Constructor">
            <summary>Sets the Shim of CounterOutputEventArgs.CounterOutputEventArgs()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of CounterOutputEventArgs.CounterOutputEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of CounterOutputEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterOutputEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of CounterOutputEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader">
            <summary>Shim type of NationalInstruments.DAQmx.CounterSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.#ctor(NationalInstruments.DAQmx.CounterSingleChannelReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32Array">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePulseFrequencyInt32AsyncCallbackObjectCIDataFrequencyArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataFrequency[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePulseFrequencyInt32AsyncCallbackObjectCIDataFrequencyArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataFrequency[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePulseTicksInt32AsyncCallbackObjectCIDataTicksArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTicks[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePulseTicksInt32AsyncCallbackObjectCIDataTicksArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTicks[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePulseTimeInt32AsyncCallbackObjectCIDataTimeArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTime[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePulseTimeInt32AsyncCallbackObjectCIDataTimeArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTime[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32Array">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadMultiSampleDoubleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadMultiSampleInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadMultiSamplePulseFrequencyInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadMultiSamplePulseTicksInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadMultiSamplePulseTimeInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadMultiSampleUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadSingleSampleDoubleAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadSingleSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadSingleSamplePulseFrequencyAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSamplePulseFrequency(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadSingleSamplePulseTicksAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSamplePulseTicks(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadSingleSamplePulseTimeAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSamplePulseTime(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.BeginReadSingleSampleUInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleDoubleIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePulseFrequencyIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseFrequency(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePulseTicksIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseTicks(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePulseTimeIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseTime(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSampleUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadMultiSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadMultiSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadMultiSamplePulseFrequencyIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadMultiSamplePulseTicksIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadMultiSamplePulseTimeIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadMultiSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadSingleSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadSingleSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadSingleSamplePulseFrequencyIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadSingleSamplePulseTicksIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadSingleSamplePulseTimeIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.EndReadSingleSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleDoubleInt32DoubleArrayRefInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSampleDouble(Int32 numberOfSamples, Double[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleDoubleInt32DoubleArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSampleDouble(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32Int32Int32ArrayRefInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSampleInt32(Int32 numberOfSamples, Int32[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleInt32Int32Int32ArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSampleInt32(Int32 numberOfSamples, Int32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePulseFrequencyInt32CIDataFrequencyArrayRefInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSamplePulseFrequency(Int32 numberOfSamples, CIDataFrequency[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePulseFrequencyInt32CIDataFrequencyArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSamplePulseFrequency(Int32 numberOfSamples, CIDataFrequency[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePulseTicksInt32CIDataTicksArrayRefInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSamplePulseTicks(Int32 numberOfSamples, CIDataTicks[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePulseTicksInt32CIDataTicksArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSamplePulseTicks(Int32 numberOfSamples, CIDataTicks[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePulseTimeInt32CIDataTimeArrayRefInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSamplePulseTime(Int32 numberOfSamples, CIDataTime[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePulseTimeInt32CIDataTimeArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSamplePulseTime(Int32 numberOfSamples, CIDataTime[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleUInt32Int32UInt32ArrayRefInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSampleUInt32(Int32 numberOfSamples, UInt32[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSampleUInt32Int32UInt32ArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.MemoryOptimizedReadMultiSampleUInt32(Int32 numberOfSamples, UInt32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadMultiSampleDoubleInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSampleDouble(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadMultiSampleInt32Int32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSampleInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadMultiSamplePulseFrequencyInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSamplePulseFrequency(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadMultiSamplePulseTicksInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSamplePulseTicks(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadMultiSamplePulseTimeInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSamplePulseTime(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadMultiSampleUInt32Int32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSampleUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadSingleSampleDouble">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadSingleSampleInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadSingleSamplePulseFrequency">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSamplePulseFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadSingleSamplePulseTicks">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSamplePulseTicks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadSingleSamplePulseTime">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSamplePulseTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ReadSingleSampleUInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.AllInstances.ToString01">
            <summary>Sets the Shim of CounterSingleChannelReader.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32Array">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32Int32AsyncCallbackObjectInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseFrequencyInt32AsyncCallbackObjectCIDataFrequencyArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataFrequency[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseFrequencyInt32AsyncCallbackObjectCIDataFrequencyArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataFrequency[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTicksInt32AsyncCallbackObjectCIDataTicksArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTicks[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTicksInt32AsyncCallbackObjectCIDataTicksArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTicks[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTimeInt32AsyncCallbackObjectCIDataTimeArray">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTime[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTimeInt32AsyncCallbackObjectCIDataTimeArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTime[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32Array">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginMemoryOptimizedReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadMultiSampleDoubleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadMultiSampleInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadMultiSamplePulseFrequencyInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadMultiSamplePulseTicksInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadMultiSamplePulseTimeInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadMultiSampleUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadSingleSampleDoubleAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadSingleSampleInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadSingleSamplePulseFrequencyAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSamplePulseFrequency(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadSingleSamplePulseTicksAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSamplePulseTicks(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadSingleSamplePulseTimeAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSamplePulseTime(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BeginReadSingleSampleUInt32AsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ConstructorDaqStream">
            <summary>Sets the Shim of CounterSingleChannelReader.CounterSingleChannelReader(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleDoubleIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseFrequencyIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseFrequency(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseTicksIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseTicks(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseTimeIAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSamplePulseTime(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of CounterSingleChannelReader.EndMemoryOptimizedReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadMultiSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadMultiSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadMultiSamplePulseFrequencyIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadMultiSamplePulseTicksIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadMultiSamplePulseTimeIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadMultiSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadSingleSampleDoubleIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadSingleSampleInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadSingleSamplePulseFrequencyIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadSingleSamplePulseTicksIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadSingleSamplePulseTimeIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.EndReadSingleSampleUInt32IAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadMultiSampleDoubleInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSampleDouble(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadMultiSampleInt32Int32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSampleInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadMultiSamplePulseFrequencyInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSamplePulseFrequency(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadMultiSamplePulseTicksInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSamplePulseTicks(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadMultiSamplePulseTimeInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSamplePulseTime(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadMultiSampleUInt32Int32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadMultiSampleUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadSingleSampleDouble">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadSingleSampleInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadSingleSamplePulseFrequency">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSamplePulseFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadSingleSamplePulseTicks">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSamplePulseTicks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadSingleSamplePulseTime">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSamplePulseTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ReadSingleSampleUInt32">
            <summary>Sets the Shim of CounterSingleChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelReader.ToString">
            <summary>Sets the Shim of CounterSingleChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter">
            <summary>Shim type of NationalInstruments.DAQmx.CounterSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.#ctor(NationalInstruments.DAQmx.CounterSingleChannelWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.BeginWriteMultiSampleBooleanCODataFrequencyArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.BeginWriteMultiSampleBooleanCODataTicksArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.BeginWriteMultiSampleBooleanCODataTimeArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.BeginWriteSingleSampleBooleanCODataFrequencyAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.BeginWriteSingleSampleBooleanCODataTicksAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.BeginWriteSingleSampleBooleanCODataTimeAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.ToString01">
            <summary>Sets the Shim of CounterSingleChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.WriteMultiSampleBooleanCODataFrequencyArray">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.WriteMultiSampleBooleanCODataTicksArray">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.WriteMultiSampleBooleanCODataTimeArray">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.WriteSingleSampleBooleanCODataFrequency">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.WriteSingleSampleBooleanCODataTicks">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.AllInstances.WriteSingleSampleBooleanCODataTime">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BeginWriteMultiSampleBooleanCODataFrequencyArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BeginWriteMultiSampleBooleanCODataTicksArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BeginWriteMultiSampleBooleanCODataTimeArrayAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BeginWriteSingleSampleBooleanCODataFrequencyAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BeginWriteSingleSampleBooleanCODataTicksAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BeginWriteSingleSampleBooleanCODataTimeAsyncCallbackObject">
            <summary>Sets the Shim of CounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.ConstructorDaqStream">
            <summary>Sets the Shim of CounterSingleChannelWriter.CounterSingleChannelWriter(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the Shim of CounterSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the Shim of CounterSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of CounterSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.SynchronizingObjectGet">
            <summary>Sets the Shim of CounterSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of CounterSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.ToString">
            <summary>Sets the Shim of CounterSingleChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.WriteMultiSampleBooleanCODataFrequencyArray">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.WriteMultiSampleBooleanCODataTicksArray">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.WriteMultiSampleBooleanCODataTimeArray">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.WriteSingleSampleBooleanCODataFrequency">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.WriteSingleSampleBooleanCODataTicks">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimCounterSingleChannelWriter.WriteSingleSampleBooleanCODataTime">
            <summary>Sets the Shim of CounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime data)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDIChannel">
            <summary>Shim type of NationalInstruments.DAQmx.DIChannel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannel.#ctor(NationalInstruments.DAQmx.DIChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AcquireOnGet">
            <summary>Sets the Shim of DIChannel.get_AcquireOn()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AcquireOnSetDIAcquireOn">
            <summary>Sets the Shim of DIChannel.set_AcquireOn(DIAcquireOn value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.AcquireOnGet">
            <summary>Sets the Shim of DIChannel.get_AcquireOn()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.AcquireOnSetDIAcquireOn">
            <summary>Sets the Shim of DIChannel.set_AcquireOn(DIAcquireOn value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DataTransferMechanismGet">
            <summary>Sets the Shim of DIChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DataTransferMechanismSetDIDataTransferMechanism">
            <summary>Sets the Shim of DIChannel.set_DataTransferMechanism(DIDataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DataTransferRequestConditionGet">
            <summary>Sets the Shim of DIChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DataTransferRequestConditionSetDIDataTransferRequestCondition">
            <summary>Sets the Shim of DIChannel.set_DataTransferRequestCondition(DIDataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterEnableBusModeGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterEnableBusMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterEnableBusModeSetBoolean">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterEnableBusMode(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DIChannel.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DIChannel.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.InvertLinesGet">
            <summary>Sets the Shim of DIChannel.get_InvertLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.InvertLinesSetBoolean">
            <summary>Sets the Shim of DIChannel.set_InvertLines(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.LogicFamilyGet">
            <summary>Sets the Shim of DIChannel.get_LogicFamily()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.LogicFamilySetDILogicFamily">
            <summary>Sets the Shim of DIChannel.set_LogicFamily(DILogicFamily value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.MemoryMappingEnableGet">
            <summary>Sets the Shim of DIChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of DIChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.NumberOfLinesGet">
            <summary>Sets the Shim of DIChannel.get_NumberOfLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.TristateGet">
            <summary>Sets the Shim of DIChannel.get_Tristate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.TristateSetBoolean">
            <summary>Sets the Shim of DIChannel.set_Tristate(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.UsbTransferRequestCountGet">
            <summary>Sets the Shim of DIChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of DIChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of DIChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.AllInstances.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of DIChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannel.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.ConstructorStringTask">
            <summary>Sets the Shim of DIChannel.DIChannel(String str, Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DataTransferMechanismGet">
            <summary>Sets the Shim of DIChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DataTransferMechanismSetDIDataTransferMechanism">
            <summary>Sets the Shim of DIChannel.set_DataTransferMechanism(DIDataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DataTransferRequestConditionGet">
            <summary>Sets the Shim of DIChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DataTransferRequestConditionSetDIDataTransferRequestCondition">
            <summary>Sets the Shim of DIChannel.set_DataTransferRequestCondition(DIDataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterEnableBusModeGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterEnableBusMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterEnableBusModeSetBoolean">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterEnableBusMode(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterEnableGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DIChannel.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DIChannel.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DIChannel.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DIChannel.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DIChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.InvertLinesGet">
            <summary>Sets the Shim of DIChannel.get_InvertLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.InvertLinesSetBoolean">
            <summary>Sets the Shim of DIChannel.set_InvertLines(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.LogicFamilyGet">
            <summary>Sets the Shim of DIChannel.get_LogicFamily()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.LogicFamilySetDILogicFamily">
            <summary>Sets the Shim of DIChannel.set_LogicFamily(DILogicFamily value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.MemoryMappingEnableGet">
            <summary>Sets the Shim of DIChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of DIChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.NumberOfLinesGet">
            <summary>Sets the Shim of DIChannel.get_NumberOfLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.TristateGet">
            <summary>Sets the Shim of DIChannel.get_Tristate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.TristateSetBoolean">
            <summary>Sets the Shim of DIChannel.set_Tristate(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.UsbTransferRequestCountGet">
            <summary>Sets the Shim of DIChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of DIChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of DIChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannel.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of DIChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection">
            <summary>Shim type of NationalInstruments.DAQmx.DIChannelCollection</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.#ctor(NationalInstruments.DAQmx.DIChannelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllGet">
            <summary>Sets the Shim of DIChannelCollection.get_All()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.AllGet">
            <summary>Sets the Shim of DIChannelCollection.get_All()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of DIChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the Shim of DIChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.CountGet">
            <summary>Sets the Shim of DIChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.CreateChannelStringStringChannelLineGrouping">
            <summary>Sets the Shim of DIChannelCollection.CreateChannel(String lines, String nameToAssign, ChannelLineGrouping grouping)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.GetEnumerator">
            <summary>Sets the Shim of DIChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.ICollection_CountGet">
            <summary>Sets the Shim of DIChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.InvalidateEnumerators">
            <summary>Sets the Shim of DIChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the Shim of DIChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.ItemGetInt64">
            <summary>Sets the Shim of DIChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.ItemGetString">
            <summary>Sets the Shim of DIChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.SyncRootGet">
            <summary>Sets the Shim of DIChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.AllInstances.ToString01">
            <summary>Sets the Shim of DIChannelCollection.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of DIChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.ConstructorTask">
            <summary>Sets the Shim of DIChannelCollection.DIChannelCollection(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.CopyToArrayInt32">
            <summary>Sets the Shim of DIChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.CountGet">
            <summary>Sets the Shim of DIChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.CreateChannelStringStringChannelLineGrouping">
            <summary>Sets the Shim of DIChannelCollection.CreateChannel(String lines, String nameToAssign, ChannelLineGrouping grouping)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.GetEnumerator">
            <summary>Sets the Shim of DIChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.ICollection_CountGet">
            <summary>Sets the Shim of DIChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.InvalidateEnumerators">
            <summary>Sets the Shim of DIChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.IsSynchronizedGet">
            <summary>Sets the Shim of DIChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.ItemGetInt64">
            <summary>Sets the Shim of DIChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.ItemGetString">
            <summary>Sets the Shim of DIChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.SyncRootGet">
            <summary>Sets the Shim of DIChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDIChannelCollection.ToString">
            <summary>Sets the Shim of DIChannelCollection.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDOChannel">
            <summary>Shim type of NationalInstruments.DAQmx.DOChannel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannel.#ctor(NationalInstruments.DAQmx.DOChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.DataTransferMechanismGet">
            <summary>Sets the Shim of DOChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.DataTransferMechanismSetDODataTransferMechanism">
            <summary>Sets the Shim of DOChannel.set_DataTransferMechanism(DODataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.DataTransferRequestConditionGet">
            <summary>Sets the Shim of DOChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.DataTransferRequestConditionSetDODataTransferRequestCondition">
            <summary>Sets the Shim of DOChannel.set_DataTransferRequestCondition(DODataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.GenerateOnGet">
            <summary>Sets the Shim of DOChannel.get_GenerateOn()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.GenerateOnSetDOGenerateOn">
            <summary>Sets the Shim of DOChannel.set_GenerateOn(DOGenerateOn value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.InvertLinesGet">
            <summary>Sets the Shim of DOChannel.get_InvertLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.InvertLinesSetBoolean">
            <summary>Sets the Shim of DOChannel.set_InvertLines(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LineStatesDoneStateGet">
            <summary>Sets the Shim of DOChannel.get_LineStatesDoneState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LineStatesDoneStateSetDOLineStatesDoneState">
            <summary>Sets the Shim of DOChannel.set_LineStatesDoneState(DOLineStatesDoneState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LineStatesPausedStateGet">
            <summary>Sets the Shim of DOChannel.get_LineStatesPausedState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LineStatesPausedStateSetDOLineStatesPausedState">
            <summary>Sets the Shim of DOChannel.set_LineStatesPausedState(DOLineStatesPausedState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LineStatesStartStateGet">
            <summary>Sets the Shim of DOChannel.get_LineStatesStartState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LineStatesStartStateSetDOLineStatesStartState">
            <summary>Sets the Shim of DOChannel.set_LineStatesStartState(DOLineStatesStartState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LogicFamilyGet">
            <summary>Sets the Shim of DOChannel.get_LogicFamily()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.LogicFamilySetDOLogicFamily">
            <summary>Sets the Shim of DOChannel.set_LogicFamily(DOLogicFamily value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.MemoryMappingEnableGet">
            <summary>Sets the Shim of DOChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of DOChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.NumberOfLinesGet">
            <summary>Sets the Shim of DOChannel.get_NumberOfLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OutputDriveTypeGet">
            <summary>Sets the Shim of DOChannel.get_OutputDriveType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OutputDriveTypeSetDOOutputDriveType">
            <summary>Sets the Shim of DOChannel.set_OutputDriveType(DOOutputDriveType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OvercurrentAutoReenableGet">
            <summary>Sets the Shim of DOChannel.get_OvercurrentAutoReenable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OvercurrentAutoReenableSetBoolean">
            <summary>Sets the Shim of DOChannel.set_OvercurrentAutoReenable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OvercurrentLimitGet">
            <summary>Sets the Shim of DOChannel.get_OvercurrentLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OvercurrentLimitSetDouble">
            <summary>Sets the Shim of DOChannel.set_OvercurrentLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OvercurrentReenablePeriodGet">
            <summary>Sets the Shim of DOChannel.get_OvercurrentReenablePeriod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.OvercurrentReenablePeriodSetDouble">
            <summary>Sets the Shim of DOChannel.set_OvercurrentReenablePeriod(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.TristateGet">
            <summary>Sets the Shim of DOChannel.get_Tristate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.TristateSetBoolean">
            <summary>Sets the Shim of DOChannel.set_Tristate(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.UsbTransferRequestCountGet">
            <summary>Sets the Shim of DOChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of DOChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of DOChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of DOChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.UseOnlyOnBoardMemoryGet">
            <summary>Sets the Shim of DOChannel.get_UseOnlyOnBoardMemory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.AllInstances.UseOnlyOnBoardMemorySetBoolean">
            <summary>Sets the Shim of DOChannel.set_UseOnlyOnBoardMemory(Boolean value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannel.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.ConstructorStringTask">
            <summary>Sets the Shim of DOChannel.DOChannel(String str, Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.DataTransferMechanismGet">
            <summary>Sets the Shim of DOChannel.get_DataTransferMechanism()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.DataTransferMechanismSetDODataTransferMechanism">
            <summary>Sets the Shim of DOChannel.set_DataTransferMechanism(DODataTransferMechanism value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.DataTransferRequestConditionGet">
            <summary>Sets the Shim of DOChannel.get_DataTransferRequestCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.DataTransferRequestConditionSetDODataTransferRequestCondition">
            <summary>Sets the Shim of DOChannel.set_DataTransferRequestCondition(DODataTransferRequestCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.GenerateOnGet">
            <summary>Sets the Shim of DOChannel.get_GenerateOn()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.GenerateOnSetDOGenerateOn">
            <summary>Sets the Shim of DOChannel.set_GenerateOn(DOGenerateOn value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DOChannel.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.InvertLinesGet">
            <summary>Sets the Shim of DOChannel.get_InvertLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.InvertLinesSetBoolean">
            <summary>Sets the Shim of DOChannel.set_InvertLines(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LineStatesDoneStateGet">
            <summary>Sets the Shim of DOChannel.get_LineStatesDoneState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LineStatesDoneStateSetDOLineStatesDoneState">
            <summary>Sets the Shim of DOChannel.set_LineStatesDoneState(DOLineStatesDoneState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LineStatesPausedStateGet">
            <summary>Sets the Shim of DOChannel.get_LineStatesPausedState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LineStatesPausedStateSetDOLineStatesPausedState">
            <summary>Sets the Shim of DOChannel.set_LineStatesPausedState(DOLineStatesPausedState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LineStatesStartStateGet">
            <summary>Sets the Shim of DOChannel.get_LineStatesStartState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LineStatesStartStateSetDOLineStatesStartState">
            <summary>Sets the Shim of DOChannel.set_LineStatesStartState(DOLineStatesStartState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LogicFamilyGet">
            <summary>Sets the Shim of DOChannel.get_LogicFamily()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.LogicFamilySetDOLogicFamily">
            <summary>Sets the Shim of DOChannel.set_LogicFamily(DOLogicFamily value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.MemoryMappingEnableGet">
            <summary>Sets the Shim of DOChannel.get_MemoryMappingEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.MemoryMappingEnableSetBoolean">
            <summary>Sets the Shim of DOChannel.set_MemoryMappingEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.NumberOfLinesGet">
            <summary>Sets the Shim of DOChannel.get_NumberOfLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OutputDriveTypeGet">
            <summary>Sets the Shim of DOChannel.get_OutputDriveType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OutputDriveTypeSetDOOutputDriveType">
            <summary>Sets the Shim of DOChannel.set_OutputDriveType(DOOutputDriveType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OvercurrentAutoReenableGet">
            <summary>Sets the Shim of DOChannel.get_OvercurrentAutoReenable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OvercurrentAutoReenableSetBoolean">
            <summary>Sets the Shim of DOChannel.set_OvercurrentAutoReenable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OvercurrentLimitGet">
            <summary>Sets the Shim of DOChannel.get_OvercurrentLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OvercurrentLimitSetDouble">
            <summary>Sets the Shim of DOChannel.set_OvercurrentLimit(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OvercurrentReenablePeriodGet">
            <summary>Sets the Shim of DOChannel.get_OvercurrentReenablePeriod()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.OvercurrentReenablePeriodSetDouble">
            <summary>Sets the Shim of DOChannel.set_OvercurrentReenablePeriod(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.TristateGet">
            <summary>Sets the Shim of DOChannel.get_Tristate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.TristateSetBoolean">
            <summary>Sets the Shim of DOChannel.set_Tristate(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.UsbTransferRequestCountGet">
            <summary>Sets the Shim of DOChannel.get_UsbTransferRequestCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.UsbTransferRequestCountSetInt64">
            <summary>Sets the Shim of DOChannel.set_UsbTransferRequestCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.UsbTransferRequestSizeGet">
            <summary>Sets the Shim of DOChannel.get_UsbTransferRequestSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.UsbTransferRequestSizeSetInt64">
            <summary>Sets the Shim of DOChannel.set_UsbTransferRequestSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.UseOnlyOnBoardMemoryGet">
            <summary>Sets the Shim of DOChannel.get_UseOnlyOnBoardMemory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannel.UseOnlyOnBoardMemorySetBoolean">
            <summary>Sets the Shim of DOChannel.set_UseOnlyOnBoardMemory(Boolean value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection">
            <summary>Shim type of NationalInstruments.DAQmx.DOChannelCollection</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.#ctor(NationalInstruments.DAQmx.DOChannelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllGet">
            <summary>Sets the Shim of DOChannelCollection.get_All()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.AllGet">
            <summary>Sets the Shim of DOChannelCollection.get_All()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of DOChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the Shim of DOChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.CountGet">
            <summary>Sets the Shim of DOChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.CreateChannelStringStringChannelLineGrouping">
            <summary>Sets the Shim of DOChannelCollection.CreateChannel(String lines, String nameToAssign, ChannelLineGrouping grouping)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.GetEnumerator">
            <summary>Sets the Shim of DOChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.ICollection_CountGet">
            <summary>Sets the Shim of DOChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.InvalidateEnumerators">
            <summary>Sets the Shim of DOChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the Shim of DOChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.ItemGetInt64">
            <summary>Sets the Shim of DOChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.ItemGetString">
            <summary>Sets the Shim of DOChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.SyncRootGet">
            <summary>Sets the Shim of DOChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.AllInstances.ToString01">
            <summary>Sets the Shim of DOChannelCollection.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.CastToSpecificChannelTypeChannel">
            <summary>Sets the Shim of DOChannelCollection.CastToSpecificChannelType(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.ConstructorTask">
            <summary>Sets the Shim of DOChannelCollection.DOChannelCollection(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.CopyToArrayInt32">
            <summary>Sets the Shim of DOChannelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.CountGet">
            <summary>Sets the Shim of DOChannelCollection.get_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.CreateChannelStringStringChannelLineGrouping">
            <summary>Sets the Shim of DOChannelCollection.CreateChannel(String lines, String nameToAssign, ChannelLineGrouping grouping)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.GetEnumerator">
            <summary>Sets the Shim of DOChannelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.ICollection_CountGet">
            <summary>Sets the Shim of DOChannelCollection.get_ICollection_Count()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.InvalidateEnumerators">
            <summary>Sets the Shim of DOChannelCollection.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.IsSynchronizedGet">
            <summary>Sets the Shim of DOChannelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.ItemGetInt64">
            <summary>Sets the Shim of DOChannelCollection.get_Item(Int64 index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.ItemGetString">
            <summary>Sets the Shim of DOChannelCollection.get_Item(String virtualChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.SyncRootGet">
            <summary>Sets the Shim of DOChannelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDOChannelCollection.ToString">
            <summary>Sets the Shim of DOChannelCollection.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer">
            <summary>Shim type of NationalInstruments.DAQmx.DaqBuffer</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.#ctor(NationalInstruments.DAQmx.DaqBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DaqBuffer.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DaqBuffer.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.InputBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_InputBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.InputBufferSizeSetInt64">
            <summary>Sets the Shim of DaqBuffer.set_InputBufferSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.InputOnBoardBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_InputOnBoardBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.OutputBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_OutputBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.OutputBufferSizeSetInt64">
            <summary>Sets the Shim of DaqBuffer.set_OutputBufferSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.OutputOnBoardBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_OutputOnBoardBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.OutputOnBoardBufferSizeSetInt64">
            <summary>Sets the Shim of DaqBuffer.set_OutputOnBoardBufferSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.AllInstances.ToString01">
            <summary>Sets the Shim of DaqBuffer.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.ConstructorTask">
            <summary>Sets the Shim of DaqBuffer.DaqBuffer(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DaqBuffer.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DaqBuffer.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.InputBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_InputBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.InputBufferSizeSetInt64">
            <summary>Sets the Shim of DaqBuffer.set_InputBufferSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.InputOnBoardBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_InputOnBoardBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.OutputBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_OutputBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.OutputBufferSizeSetInt64">
            <summary>Sets the Shim of DaqBuffer.set_OutputBufferSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.OutputOnBoardBufferSizeGet">
            <summary>Sets the Shim of DaqBuffer.get_OutputOnBoardBufferSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.OutputOnBoardBufferSizeSetInt64">
            <summary>Sets the Shim of DaqBuffer.set_OutputOnBoardBufferSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqBuffer.ToString">
            <summary>Sets the Shim of DaqBuffer.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqException">
            <summary>Shim type of NationalInstruments.DAQmx.DaqException</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqException.#ctor(NationalInstruments.DAQmx.DaqException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.AllInstances.ErrorGet">
            <summary>Sets the Shim of DaqException.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqException.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.Constructor">
            <summary>Sets the Shim of DaqException.DaqException()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqException.DaqException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.ConstructorString">
            <summary>Sets the Shim of DaqException.DaqException(String message)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.ConstructorStringException">
            <summary>Sets the Shim of DaqException.DaqException(String message, Exception inner)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.ConstructorStringInt32">
            <summary>Sets the Shim of DaqException.DaqException(String message, Int32 errorCode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.ConstructorStringInt32Exception">
            <summary>Sets the Shim of DaqException.DaqException(String message, Int32 errorCode, Exception inner)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.ErrorGet">
            <summary>Sets the Shim of DaqException.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqException.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqStream">
            <summary>Shim type of NationalInstruments.DAQmx.DaqStream</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqStream.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AccessoryInsertionOrRemovalDetectedGet">
            <summary>Sets the Shim of DaqStream.get_AccessoryInsertionOrRemovalDetected()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.AccessoryInsertionOrRemovalDetectedGet">
            <summary>Sets the Shim of DaqStream.get_AccessoryInsertionOrRemovalDetected()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.AvailableSamplesPerChannelGet">
            <summary>Sets the Shim of DaqStream.get_AvailableSamplesPerChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.BufferGet">
            <summary>Sets the Shim of DaqStream.get_Buffer()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ChannelsToReadGet">
            <summary>Sets the Shim of DaqStream.get_ChannelsToRead()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ChannelsToReadSetString">
            <summary>Sets the Shim of DaqStream.set_ChannelsToRead(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.CommonModeRangeErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_CommonModeRangeErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.CommonModeRangeErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_CommonModeRangeErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ConfigureInputBufferInt64">
            <summary>Sets the Shim of DaqStream.ConfigureInputBuffer(Int64 bufferSize)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ConfigureOutputBufferInt64">
            <summary>Sets the Shim of DaqStream.ConfigureOutputBuffer(Int64 bufferSize)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.CurrentReadPositionGet">
            <summary>Sets the Shim of DaqStream.get_CurrentReadPosition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.CurrentWritePositionGet">
            <summary>Sets the Shim of DaqStream.get_CurrentWritePosition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.DevicesWithInsertedOrRemovedAccessoriesGet">
            <summary>Sets the Shim of DaqStream.get_DevicesWithInsertedOrRemovedAccessories()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.DigitalLinesPerInputChannelGet">
            <summary>Sets the Shim of DaqStream.get_DigitalLinesPerInputChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.DigitalLinesPerOutputChannelGet">
            <summary>Sets the Shim of DaqStream.get_DigitalLinesPerOutputChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DaqStream.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DaqStream.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.GetServiceInt32">
            <summary>Sets the Shim of DaqStream.GetService(Int32 serviceType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of DaqStream.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingFilePathGet">
            <summary>Sets the Shim of DaqStream.get_LoggingFilePath()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingFilePathSetString">
            <summary>Sets the Shim of DaqStream.set_LoggingFilePath(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingFilePreallocationSizeGet">
            <summary>Sets the Shim of DaqStream.get_LoggingFilePreallocationSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingFilePreallocationSizeSetInt64">
            <summary>Sets the Shim of DaqStream.set_LoggingFilePreallocationSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingFileWriteSizeGet">
            <summary>Sets the Shim of DaqStream.get_LoggingFileWriteSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingFileWriteSizeSetInt64">
            <summary>Sets the Shim of DaqStream.set_LoggingFileWriteSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingModeGet">
            <summary>Sets the Shim of DaqStream.get_LoggingMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingModeSetLoggingMode">
            <summary>Sets the Shim of DaqStream.set_LoggingMode(LoggingMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingPauseGet">
            <summary>Sets the Shim of DaqStream.get_LoggingPause()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingPauseSetBoolean">
            <summary>Sets the Shim of DaqStream.set_LoggingPause(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingSamplesPerFileGet">
            <summary>Sets the Shim of DaqStream.get_LoggingSamplesPerFile()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.LoggingSamplesPerFileSetInt64">
            <summary>Sets the Shim of DaqStream.set_LoggingSamplesPerFile(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.NumberOfInputChannelsGet">
            <summary>Sets the Shim of DaqStream.get_NumberOfInputChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.NumberOfOutputChannelsGet">
            <summary>Sets the Shim of DaqStream.get_NumberOfOutputChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.OpenThermocoupleChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_OpenThermocoupleChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.OpenThermocoupleChannelsGet">
            <summary>Sets the Shim of DaqStream.get_OpenThermocoupleChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.OutputBufferSpaceAvailableGet">
            <summary>Sets the Shim of DaqStream.get_OutputBufferSpaceAvailable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.OverloadedInputChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_OverloadedInputChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.OverloadedInputChannelsGet">
            <summary>Sets the Shim of DaqStream.get_OverloadedInputChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.PhaseLockedLoopUnlockedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_PhaseLockedLoopUnlockedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.PhaseLockedLoopUnlockedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_PhaseLockedLoopUnlockedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadAllAvailableSamplesGet">
            <summary>Sets the Shim of DaqStream.get_ReadAllAvailableSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadAllAvailableSamplesSetBoolean">
            <summary>Sets the Shim of DaqStream.set_ReadAllAvailableSamples(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadAutoStartGet">
            <summary>Sets the Shim of DaqStream.get_ReadAutoStart()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadAutoStartSetBoolean">
            <summary>Sets the Shim of DaqStream.set_ReadAutoStart(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadAuxPowerErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadAuxPowerErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadAuxPowerErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadAuxPowerErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadExcitationFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadExcitationFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadExcitationFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadExcitationFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadInputLimitsFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadInputLimitsFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadInputLimitsFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadInputLimitsFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOffsetGet">
            <summary>Sets the Shim of DaqStream.get_ReadOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOffsetSetInt32">
            <summary>Sets the Shim of DaqStream.set_ReadOffset(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOpenCurrentLoopChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadOpenCurrentLoopChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOpenCurrentLoopChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadOpenCurrentLoopChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOvercurrentChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvercurrentChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOvercurrentChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvercurrentChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOvertemperatureChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvertemperatureChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOvertemperatureChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvertemperatureChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOverwriteModeGet">
            <summary>Sets the Shim of DaqStream.get_ReadOverwriteMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadOverwriteModeSetReadOverwriteMode">
            <summary>Sets the Shim of DaqStream.set_ReadOverwriteMode(ReadOverwriteMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadPowerSupplyFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadPowerSupplyFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadPowerSupplyFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadPowerSupplyFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadRawDataWidthGet">
            <summary>Sets the Shim of DaqStream.get_ReadRawDataWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadRawInt32">
            <summary>Sets the Shim of DaqStream.ReadRaw(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadRelativeToGet">
            <summary>Sets the Shim of DaqStream.get_ReadRelativeTo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadRelativeToSetReadRelativeTo">
            <summary>Sets the Shim of DaqStream.set_ReadRelativeTo(ReadRelativeTo value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadRemoteSenseErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadRemoteSenseErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadRemoteSenseErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadRemoteSenseErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadReverseVoltageErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadReverseVoltageErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadReverseVoltageErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadReverseVoltageErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadSleepTimeGet">
            <summary>Sets the Shim of DaqStream.get_ReadSleepTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadSleepTimeSetDouble">
            <summary>Sets the Shim of DaqStream.set_ReadSleepTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadSynchronizationUnlockedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadSynchronizationUnlockedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadSynchronizationUnlockedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadSynchronizationUnlockedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadWaitModeGet">
            <summary>Sets the Shim of DaqStream.get_ReadWaitMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ReadWaitModeSetReadWaitMode">
            <summary>Sets the Shim of DaqStream.set_ReadWaitMode(ReadWaitMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TdmsLoggingGroupNameGet">
            <summary>Sets the Shim of DaqStream.get_TdmsLoggingGroupName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TdmsLoggingGroupNameSetString">
            <summary>Sets the Shim of DaqStream.set_TdmsLoggingGroupName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TdmsLoggingOperationGet">
            <summary>Sets the Shim of DaqStream.get_TdmsLoggingOperation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TdmsLoggingOperationSetTdmsLoggingOperation">
            <summary>Sets the Shim of DaqStream.set_TdmsLoggingOperation(TdmsLoggingOperation value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TimeoutAsDoubleGet">
            <summary>Sets the Shim of DaqStream.get_TimeoutAsDouble()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TimeoutGet">
            <summary>Sets the Shim of DaqStream.get_Timeout()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TimeoutSetInt32">
            <summary>Sets the Shim of DaqStream.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.ToString01">
            <summary>Sets the Shim of DaqStream.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TotalSamplesAcquiredPerChannelGet">
            <summary>Sets the Shim of DaqStream.get_TotalSamplesAcquiredPerChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.TotalSamplesGeneratedPerChannelGet">
            <summary>Sets the Shim of DaqStream.get_TotalSamplesGeneratedPerChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WaveformAttributeModeGet">
            <summary>Sets the Shim of DaqStream.get_WaveformAttributeMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WaveformAttributeModeSetWaveformAttributeModes">
            <summary>Sets the Shim of DaqStream.set_WaveformAttributeMode(WaveformAttributeModes value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteExternalOvervoltageChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteExternalOvervoltageChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteExternalOvervoltageChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteExternalOvervoltageChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOffsetGet">
            <summary>Sets the Shim of DaqStream.get_WriteOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOffsetSetInt32">
            <summary>Sets the Shim of DaqStream.set_WriteOffset(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOpenCurrentLoopChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOpenCurrentLoopChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOpenCurrentLoopChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOpenCurrentLoopChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOvercurrentChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvercurrentChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOvercurrentChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvercurrentChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOverloadedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOverloadedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOverloadedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOverloadedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOvertemperatureChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvertemperatureChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteOvertemperatureChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvertemperatureChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WritePowerSupplyFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WritePowerSupplyFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WritePowerSupplyFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WritePowerSupplyFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteRawBooleanByteArray">
            <summary>Sets the Shim of DaqStream.WriteRaw(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteRawDataWidthGet">
            <summary>Sets the Shim of DaqStream.get_WriteRawDataWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteRegenerationModeGet">
            <summary>Sets the Shim of DaqStream.get_WriteRegenerationMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteRegenerationModeSetWriteRegenerationMode">
            <summary>Sets the Shim of DaqStream.set_WriteRegenerationMode(WriteRegenerationMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteRelativeToGet">
            <summary>Sets the Shim of DaqStream.get_WriteRelativeTo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteRelativeToSetWriteRelativeTo">
            <summary>Sets the Shim of DaqStream.set_WriteRelativeTo(WriteRelativeTo value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteSleepTimeGet">
            <summary>Sets the Shim of DaqStream.get_WriteSleepTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteSleepTimeSetDouble">
            <summary>Sets the Shim of DaqStream.set_WriteSleepTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteSynchronizationUnlockedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteSynchronizationUnlockedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteSynchronizationUnlockedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteSynchronizationUnlockedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteWaitModeGet">
            <summary>Sets the Shim of DaqStream.get_WriteWaitMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AllInstances.WriteWaitModeSetWriteWaitMode">
            <summary>Sets the Shim of DaqStream.set_WriteWaitMode(WriteWaitMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.AvailableSamplesPerChannelGet">
            <summary>Sets the Shim of DaqStream.get_AvailableSamplesPerChannel()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqStream.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.BufferGet">
            <summary>Sets the Shim of DaqStream.get_Buffer()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ChannelsToReadGet">
            <summary>Sets the Shim of DaqStream.get_ChannelsToRead()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ChannelsToReadSetString">
            <summary>Sets the Shim of DaqStream.set_ChannelsToRead(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.CommonModeRangeErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_CommonModeRangeErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.CommonModeRangeErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_CommonModeRangeErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ConfigureInputBufferInt64">
            <summary>Sets the Shim of DaqStream.ConfigureInputBuffer(Int64 bufferSize)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ConfigureOutputBufferInt64">
            <summary>Sets the Shim of DaqStream.ConfigureOutputBuffer(Int64 bufferSize)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ConstructorTask">
            <summary>Sets the Shim of DaqStream.DaqStream(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.CurrentReadPositionGet">
            <summary>Sets the Shim of DaqStream.get_CurrentReadPosition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.CurrentWritePositionGet">
            <summary>Sets the Shim of DaqStream.get_CurrentWritePosition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.DevicesWithInsertedOrRemovedAccessoriesGet">
            <summary>Sets the Shim of DaqStream.get_DevicesWithInsertedOrRemovedAccessories()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.DigitalLinesPerInputChannelGet">
            <summary>Sets the Shim of DaqStream.get_DigitalLinesPerInputChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.DigitalLinesPerOutputChannelGet">
            <summary>Sets the Shim of DaqStream.get_DigitalLinesPerOutputChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DaqStream.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DaqStream.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.GetServiceInt32">
            <summary>Sets the Shim of DaqStream.GetService(Int32 serviceType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.InitializeSubobjects">
            <summary>Sets the Shim of DaqStream.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingFilePathGet">
            <summary>Sets the Shim of DaqStream.get_LoggingFilePath()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingFilePathSetString">
            <summary>Sets the Shim of DaqStream.set_LoggingFilePath(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingFilePreallocationSizeGet">
            <summary>Sets the Shim of DaqStream.get_LoggingFilePreallocationSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingFilePreallocationSizeSetInt64">
            <summary>Sets the Shim of DaqStream.set_LoggingFilePreallocationSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingFileWriteSizeGet">
            <summary>Sets the Shim of DaqStream.get_LoggingFileWriteSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingFileWriteSizeSetInt64">
            <summary>Sets the Shim of DaqStream.set_LoggingFileWriteSize(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingModeGet">
            <summary>Sets the Shim of DaqStream.get_LoggingMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingModeSetLoggingMode">
            <summary>Sets the Shim of DaqStream.set_LoggingMode(LoggingMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingPauseGet">
            <summary>Sets the Shim of DaqStream.get_LoggingPause()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingPauseSetBoolean">
            <summary>Sets the Shim of DaqStream.set_LoggingPause(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingSamplesPerFileGet">
            <summary>Sets the Shim of DaqStream.get_LoggingSamplesPerFile()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.LoggingSamplesPerFileSetInt64">
            <summary>Sets the Shim of DaqStream.set_LoggingSamplesPerFile(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.NumberOfInputChannelsGet">
            <summary>Sets the Shim of DaqStream.get_NumberOfInputChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.NumberOfOutputChannelsGet">
            <summary>Sets the Shim of DaqStream.get_NumberOfOutputChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.OpenThermocoupleChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_OpenThermocoupleChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.OpenThermocoupleChannelsGet">
            <summary>Sets the Shim of DaqStream.get_OpenThermocoupleChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.OutputBufferSpaceAvailableGet">
            <summary>Sets the Shim of DaqStream.get_OutputBufferSpaceAvailable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.OverloadedInputChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_OverloadedInputChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.OverloadedInputChannelsGet">
            <summary>Sets the Shim of DaqStream.get_OverloadedInputChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.PhaseLockedLoopUnlockedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_PhaseLockedLoopUnlockedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.PhaseLockedLoopUnlockedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_PhaseLockedLoopUnlockedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadAllAvailableSamplesGet">
            <summary>Sets the Shim of DaqStream.get_ReadAllAvailableSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadAllAvailableSamplesSetBoolean">
            <summary>Sets the Shim of DaqStream.set_ReadAllAvailableSamples(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadAutoStartGet">
            <summary>Sets the Shim of DaqStream.get_ReadAutoStart()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadAutoStartSetBoolean">
            <summary>Sets the Shim of DaqStream.set_ReadAutoStart(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadAuxPowerErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadAuxPowerErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadAuxPowerErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadAuxPowerErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadExcitationFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadExcitationFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadExcitationFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadExcitationFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadInputLimitsFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadInputLimitsFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadInputLimitsFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadInputLimitsFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOffsetGet">
            <summary>Sets the Shim of DaqStream.get_ReadOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOffsetSetInt32">
            <summary>Sets the Shim of DaqStream.set_ReadOffset(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOpenCurrentLoopChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadOpenCurrentLoopChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOpenCurrentLoopChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadOpenCurrentLoopChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOvercurrentChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvercurrentChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOvercurrentChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvercurrentChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOvertemperatureChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvertemperatureChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOvertemperatureChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadOvertemperatureChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOverwriteModeGet">
            <summary>Sets the Shim of DaqStream.get_ReadOverwriteMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadOverwriteModeSetReadOverwriteMode">
            <summary>Sets the Shim of DaqStream.set_ReadOverwriteMode(ReadOverwriteMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadPowerSupplyFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadPowerSupplyFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadPowerSupplyFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadPowerSupplyFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadRawDataWidthGet">
            <summary>Sets the Shim of DaqStream.get_ReadRawDataWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadRawInt32">
            <summary>Sets the Shim of DaqStream.ReadRaw(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadRelativeToGet">
            <summary>Sets the Shim of DaqStream.get_ReadRelativeTo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadRelativeToSetReadRelativeTo">
            <summary>Sets the Shim of DaqStream.set_ReadRelativeTo(ReadRelativeTo value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadRemoteSenseErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadRemoteSenseErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadRemoteSenseErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadRemoteSenseErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadReverseVoltageErrorChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadReverseVoltageErrorChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadReverseVoltageErrorChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadReverseVoltageErrorChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadSleepTimeGet">
            <summary>Sets the Shim of DaqStream.get_ReadSleepTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadSleepTimeSetDouble">
            <summary>Sets the Shim of DaqStream.set_ReadSleepTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadSynchronizationUnlockedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_ReadSynchronizationUnlockedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadSynchronizationUnlockedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_ReadSynchronizationUnlockedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadWaitModeGet">
            <summary>Sets the Shim of DaqStream.get_ReadWaitMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ReadWaitModeSetReadWaitMode">
            <summary>Sets the Shim of DaqStream.set_ReadWaitMode(ReadWaitMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TdmsLoggingGroupNameGet">
            <summary>Sets the Shim of DaqStream.get_TdmsLoggingGroupName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TdmsLoggingGroupNameSetString">
            <summary>Sets the Shim of DaqStream.set_TdmsLoggingGroupName(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TdmsLoggingOperationGet">
            <summary>Sets the Shim of DaqStream.get_TdmsLoggingOperation()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TdmsLoggingOperationSetTdmsLoggingOperation">
            <summary>Sets the Shim of DaqStream.set_TdmsLoggingOperation(TdmsLoggingOperation value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TimeoutAsDoubleGet">
            <summary>Sets the Shim of DaqStream.get_TimeoutAsDouble()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TimeoutGet">
            <summary>Sets the Shim of DaqStream.get_Timeout()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TimeoutSetInt32">
            <summary>Sets the Shim of DaqStream.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.ToString">
            <summary>Sets the Shim of DaqStream.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TotalSamplesAcquiredPerChannelGet">
            <summary>Sets the Shim of DaqStream.get_TotalSamplesAcquiredPerChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.TotalSamplesGeneratedPerChannelGet">
            <summary>Sets the Shim of DaqStream.get_TotalSamplesGeneratedPerChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WaveformAttributeModeGet">
            <summary>Sets the Shim of DaqStream.get_WaveformAttributeMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WaveformAttributeModeSetWaveformAttributeModes">
            <summary>Sets the Shim of DaqStream.set_WaveformAttributeMode(WaveformAttributeModes value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteExternalOvervoltageChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteExternalOvervoltageChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteExternalOvervoltageChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteExternalOvervoltageChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOffsetGet">
            <summary>Sets the Shim of DaqStream.get_WriteOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOffsetSetInt32">
            <summary>Sets the Shim of DaqStream.set_WriteOffset(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOpenCurrentLoopChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOpenCurrentLoopChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOpenCurrentLoopChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOpenCurrentLoopChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOvercurrentChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvercurrentChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOvercurrentChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvercurrentChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOverloadedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOverloadedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOverloadedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOverloadedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOvertemperatureChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvertemperatureChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteOvertemperatureChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteOvertemperatureChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WritePowerSupplyFaultChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WritePowerSupplyFaultChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WritePowerSupplyFaultChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WritePowerSupplyFaultChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteRawBooleanByteArray">
            <summary>Sets the Shim of DaqStream.WriteRaw(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteRawDataWidthGet">
            <summary>Sets the Shim of DaqStream.get_WriteRawDataWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteRegenerationModeGet">
            <summary>Sets the Shim of DaqStream.get_WriteRegenerationMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteRegenerationModeSetWriteRegenerationMode">
            <summary>Sets the Shim of DaqStream.set_WriteRegenerationMode(WriteRegenerationMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteRelativeToGet">
            <summary>Sets the Shim of DaqStream.get_WriteRelativeTo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteRelativeToSetWriteRelativeTo">
            <summary>Sets the Shim of DaqStream.set_WriteRelativeTo(WriteRelativeTo value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteSleepTimeGet">
            <summary>Sets the Shim of DaqStream.get_WriteSleepTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteSleepTimeSetDouble">
            <summary>Sets the Shim of DaqStream.set_WriteSleepTime(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteSynchronizationUnlockedChannelsExistGet">
            <summary>Sets the Shim of DaqStream.get_WriteSynchronizationUnlockedChannelsExist()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteSynchronizationUnlockedChannelsGet">
            <summary>Sets the Shim of DaqStream.get_WriteSynchronizationUnlockedChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteWaitModeGet">
            <summary>Sets the Shim of DaqStream.get_WriteWaitMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqStream.WriteWaitModeSetWriteWaitMode">
            <summary>Sets the Shim of DaqStream.set_WriteWaitMode(WriteWaitMode value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqSystem">
            <summary>Shim type of NationalInstruments.DAQmx.DaqSystem</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.#ctor(NationalInstruments.DAQmx.DaqSystem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AddCDaqSynchronizationConnectionString">
            <summary>Sets the Shim of DaqSystem.AddCDaqSynchronizationConnection(String portList)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AddNetworkDeviceStringStringBooleanDouble">
            <summary>Sets the Shim of DaqSystem.AddNetworkDevice(String ipAddress, String deviceName, Boolean attemptReservation, Double timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AddNetworkDeviceStringStringDouble">
            <summary>Sets the Shim of DaqSystem.AddNetworkDevice(String ipAddress, String deviceName, Double timeout)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.AddCDaqSynchronizationConnectionString">
            <summary>Sets the Shim of DaqSystem.AddCDaqSynchronizationConnection(String portList)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.AddNetworkDeviceStringStringBooleanDouble">
            <summary>Sets the Shim of DaqSystem.AddNetworkDevice(String ipAddress, String deviceName, Boolean attemptReservation, Double timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.AddNetworkDeviceStringStringDouble">
            <summary>Sets the Shim of DaqSystem.AddNetworkDevice(String ipAddress, String deviceName, Double timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.AutoConfigureCDaqSynchronizationConnectionsStringDouble">
            <summary>Sets the Shim of DaqSystem.AutoConfigureCDaqSynchronizationConnections(String deviceRequested, Double timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.ClearLastDaqWarning">
            <summary>Sets the Shim of DaqSystem.ClearLastDaqWarning()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.CloseSwitchRelaysStringBoolean">
            <summary>Sets the Shim of DaqSystem.CloseSwitchRelays(String relays, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.ConnectSwitchChannelsStringBoolean">
            <summary>Sets the Shim of DaqSystem.ConnectSwitchChannels(String connectionList, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.ConnectSwitchChannelsStringStringBoolean">
            <summary>Sets the Shim of DaqSystem.ConnectSwitchChannels(String switchChannel1, String switchChannel2, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.ConnectTerminalsStringString">
            <summary>Sets the Shim of DaqSystem.ConnectTerminals(String sourceTerminal, String destinationTerminal)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.ConnectTerminalsStringStringSignalRoutingModifiers">
            <summary>Sets the Shim of DaqSystem.ConnectTerminals(String sourceTerminal, String destinationTerminal, SignalRoutingModifiers signalModifiers)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.CreateSwitchScanTaskStringString">
            <summary>Sets the Shim of DaqSystem.CreateSwitchScanTask(String taskName, String scanList)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.CreateWatchdogTimerTaskStringStringDoubleStringArrayWatchdogDOExpirationStateArray">
            <summary>Sets the Shim of DaqSystem.CreateWatchdogTimerTask(String taskName, String device, Double timeout, String[] physicalChannels, WatchdogDOExpirationState[] expirationStates)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DaqWarningAddDaqWarningEventHandler">
            <summary>Sets the Shim of DaqSystem.add_DaqWarning(DaqWarningEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DaqWarningRemoveDaqWarningEventHandler">
            <summary>Sets the Shim of DaqSystem.remove_DaqWarning(DaqWarningEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DeleteGlobalChannelString">
            <summary>Sets the Shim of DaqSystem.DeleteGlobalChannel(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DeleteScaleString">
            <summary>Sets the Shim of DaqSystem.DeleteScale(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DeleteTaskString">
            <summary>Sets the Shim of DaqSystem.DeleteTask(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DevicesGet">
            <summary>Sets the Shim of DaqSystem.get_Devices()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DisconnectAllStringBoolean">
            <summary>Sets the Shim of DaqSystem.DisconnectAll(String switchDevice, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DisconnectSwitchChannelsStringBoolean">
            <summary>Sets the Shim of DaqSystem.DisconnectSwitchChannels(String disconnectionList, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DisconnectSwitchChannelsStringStringBoolean">
            <summary>Sets the Shim of DaqSystem.DisconnectSwitchChannels(String switchChannel1, String switchChannel2, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DisconnectTerminalsStringString">
            <summary>Sets the Shim of DaqSystem.DisconnectTerminals(String sourceTerminal, String destinationTerminal)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DriverMajorVersionGet">
            <summary>Sets the Shim of DaqSystem.get_DriverMajorVersion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DriverMinorVersionGet">
            <summary>Sets the Shim of DaqSystem.get_DriverMinorVersion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.DriverUpdateVersionGet">
            <summary>Sets the Shim of DaqSystem.get_DriverUpdateVersion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetAnalogPowerUpStatesWithOutputTypeStringDoubleArrayOutAOPowerUpOutputBehaviorArrayOut">
            <summary>Sets the Shim of DaqSystem.GetAnalogPowerUpStatesWithOutputType(String channels, Double[]&amp; states, AOPowerUpOutputBehavior[]&amp; modes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetDevicePowerUpStateStringStringArrayOutDigitalPowerUpStateArrayOut">
            <summary>Sets the Shim of DaqSystem.GetDevicePowerUpState(String deviceName, String[]&amp; channels, DigitalPowerUpState[]&amp; states)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetDevicePowerUpStateStringStringArrayOutDigitalPullUpPullDownResistorStateArrayOut">
            <summary>Sets the Shim of DaqSystem.GetDevicePowerUpState(String deviceName, String[]&amp; channels, DigitalPullUpPullDownResistorState[]&amp; states)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetDevicePowerUpStateStringStringArrayOutDoubleArrayOutStringArrayOutDoubleArrayOut">
            <summary>Sets the Shim of DaqSystem.GetDevicePowerUpState(String deviceName, String[]&amp; voltageChannels, Double[]&amp; voltageValues, String[]&amp; currentChannels, Double[]&amp; currentValues)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetDisconnectedCDaqSynchronizationPortsStringDoubleBooleanOut">
            <summary>Sets the Shim of DaqSystem.GetDisconnectedCDaqSynchronizationPorts(String deviceRequested, Double timeout, Boolean&amp; disconnectedPortsFound)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetLogicFamilyPowerUpStateString">
            <summary>Sets the Shim of DaqSystem.GetLogicFamilyPowerUpState(String deviceName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetPhysicalChannelsPhysicalChannelTypesPhysicalChannelAccess">
            <summary>Sets the Shim of DaqSystem.GetPhysicalChannels(PhysicalChannelTypes physicalChannelTypes, PhysicalChannelAccess physicalChannelAccess)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetSavedChannelInfoString">
            <summary>Sets the Shim of DaqSystem.GetSavedChannelInfo(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetSavedScaleInfoString">
            <summary>Sets the Shim of DaqSystem.GetSavedScaleInfo(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetSavedTaskInfoString">
            <summary>Sets the Shim of DaqSystem.GetSavedTaskInfo(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetSwitchRelayCountString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayCount(String relay)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetSwitchRelayCountsString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayCounts(String relays)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetSwitchRelayPositionString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayPosition(String relay)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetSwitchRelayPositionsString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayPositions(String relays)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GetTerminalsTerminalTypes">
            <summary>Sets the Shim of DaqSystem.GetTerminals(TerminalTypes terminalTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.GlobalChannelsGet">
            <summary>Sets the Shim of DaqSystem.get_GlobalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.IsReadOrWriteLateGet">
            <summary>Sets the Shim of DaqSystem.get_IsReadOrWriteLate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.LastDaqWarningGet">
            <summary>Sets the Shim of DaqSystem.get_LastDaqWarning()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.LoadDeviceString">
            <summary>Sets the Shim of DaqSystem.LoadDevice(String deviceName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.LoadPhysicalChannelString">
            <summary>Sets the Shim of DaqSystem.LoadPhysicalChannel(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.LoadScaleString">
            <summary>Sets the Shim of DaqSystem.LoadScale(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.LoadSwitchChannelString">
            <summary>Sets the Shim of DaqSystem.LoadSwitchChannel(String switchChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.LoadTaskString">
            <summary>Sets the Shim of DaqSystem.LoadTask(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.OnDaqWarningDaqWarningEventArgs">
            <summary>Sets the Shim of DaqSystem.OnDaqWarning(DaqWarningEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.OpenSwitchRelaysStringBoolean">
            <summary>Sets the Shim of DaqSystem.OpenSwitchRelays(String relays, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.RemoveCDaqSynchronizationConnectionString">
            <summary>Sets the Shim of DaqSystem.RemoveCDaqSynchronizationConnection(String portList)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveGlobalChannelAsChannelString">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannelAs(Channel channel, String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveGlobalChannelAsChannelStringStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannelAs(Channel channel, String persistedName, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveGlobalChannelChannel">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannel(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveGlobalChannelChannelStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannel(Channel channel, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveScaleAsScaleString">
            <summary>Sets the Shim of DaqSystem.SaveScaleAs(Scale scale, String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveScaleAsScaleStringStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveScaleAs(Scale scale, String persistedName, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveScaleScale">
            <summary>Sets the Shim of DaqSystem.SaveScale(Scale scale)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveScaleScaleStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveScale(Scale scale, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveTaskAsTaskString">
            <summary>Sets the Shim of DaqSystem.SaveTaskAs(Task task, String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveTaskAsTaskStringStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveTaskAs(Task task, String persistedName, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveTaskTask">
            <summary>Sets the Shim of DaqSystem.SaveTask(Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SaveTaskTaskStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveTask(Task task, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.ScalesGet">
            <summary>Sets the Shim of DaqSystem.get_Scales()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SetAnalogPowerUpStatesWithOutputTypeStringDoubleArrayAOPowerUpOutputBehaviorArray">
            <summary>Sets the Shim of DaqSystem.SetAnalogPowerUpStatesWithOutputType(String channels, Double[] states, AOPowerUpOutputBehavior[] modes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SetDevicePowerUpStateStringStringArrayDigitalPowerUpStateArray">
            <summary>Sets the Shim of DaqSystem.SetDevicePowerUpState(String deviceName, String[] virtualChannels, DigitalPowerUpState[] powerUpStates)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SetDevicePowerUpStateStringStringArrayDigitalPullUpPullDownResistorStateArray">
            <summary>Sets the Shim of DaqSystem.SetDevicePowerUpState(String deviceName, String[] channels, DigitalPullUpPullDownResistorState[] states)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SetDevicePowerUpStateStringStringArrayDoubleArrayStringArrayDoubleArray">
            <summary>Sets the Shim of DaqSystem.SetDevicePowerUpState(String deviceName, String[] voltageChannels, Double[] voltageValues, String[] currentChannels, Double[] currentValues)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SetLogicFamilyPowerUpStateStringLogicFamily">
            <summary>Sets the Shim of DaqSystem.SetLogicFamilyPowerUpState(String deviceName, LogicFamily logicFamily)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SwitchChannelsGet">
            <summary>Sets the Shim of DaqSystem.get_SwitchChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SwitchFindPathStringString">
            <summary>Sets the Shim of DaqSystem.SwitchFindPath(String switchChannel1, String switchChannel2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SwitchFindPathStringStringEnum">
            <summary>Sets the Shim of DaqSystem.SwitchFindPath(String switchChannel1, String switchChannel2, Enum switchPathStatus)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SwitchRelaysGet">
            <summary>Sets the Shim of DaqSystem.get_SwitchRelays()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SwitchTopologiesGet">
            <summary>Sets the Shim of DaqSystem.get_SwitchTopologies()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DaqSystem.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DaqSystem.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of DaqSystem.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DaqSystem.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.TasksGet">
            <summary>Sets the Shim of DaqSystem.get_Tasks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AllInstances.TristateOutputTerminalString">
            <summary>Sets the Shim of DaqSystem.TristateOutputTerminal(String outputTerminal)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.AutoConfigureCDaqSynchronizationConnectionsStringDouble">
            <summary>Sets the Shim of DaqSystem.AutoConfigureCDaqSynchronizationConnections(String deviceRequested, Double timeout)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.ClearLastDaqWarning">
            <summary>Sets the Shim of DaqSystem.ClearLastDaqWarning()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.CloseSwitchRelaysStringBoolean">
            <summary>Sets the Shim of DaqSystem.CloseSwitchRelays(String relays, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.ConnectSwitchChannelsStringBoolean">
            <summary>Sets the Shim of DaqSystem.ConnectSwitchChannels(String connectionList, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.ConnectSwitchChannelsStringStringBoolean">
            <summary>Sets the Shim of DaqSystem.ConnectSwitchChannels(String switchChannel1, String switchChannel2, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.ConnectTerminalsStringString">
            <summary>Sets the Shim of DaqSystem.ConnectTerminals(String sourceTerminal, String destinationTerminal)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.ConnectTerminalsStringStringSignalRoutingModifiers">
            <summary>Sets the Shim of DaqSystem.ConnectTerminals(String sourceTerminal, String destinationTerminal, SignalRoutingModifiers signalModifiers)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.Constructor">
            <summary>Sets the Shim of DaqSystem.DaqSystem()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.CreateSwitchScanTaskStringString">
            <summary>Sets the Shim of DaqSystem.CreateSwitchScanTask(String taskName, String scanList)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.CreateWatchdogTimerTaskStringStringDoubleStringArrayWatchdogDOExpirationStateArray">
            <summary>Sets the Shim of DaqSystem.CreateWatchdogTimerTask(String taskName, String device, Double timeout, String[] physicalChannels, WatchdogDOExpirationState[] expirationStates)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DaqWarningAddDaqWarningEventHandler">
            <summary>Sets the Shim of DaqSystem.add_DaqWarning(DaqWarningEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DaqWarningRemoveDaqWarningEventHandler">
            <summary>Sets the Shim of DaqSystem.remove_DaqWarning(DaqWarningEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DeleteGlobalChannelString">
            <summary>Sets the Shim of DaqSystem.DeleteGlobalChannel(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DeleteScaleString">
            <summary>Sets the Shim of DaqSystem.DeleteScale(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DeleteTaskString">
            <summary>Sets the Shim of DaqSystem.DeleteTask(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DevicesGet">
            <summary>Sets the Shim of DaqSystem.get_Devices()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DisconnectAllStringBoolean">
            <summary>Sets the Shim of DaqSystem.DisconnectAll(String switchDevice, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DisconnectSwitchChannelsStringBoolean">
            <summary>Sets the Shim of DaqSystem.DisconnectSwitchChannels(String disconnectionList, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DisconnectSwitchChannelsStringStringBoolean">
            <summary>Sets the Shim of DaqSystem.DisconnectSwitchChannels(String switchChannel1, String switchChannel2, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DisconnectTerminalsStringString">
            <summary>Sets the Shim of DaqSystem.DisconnectTerminals(String sourceTerminal, String destinationTerminal)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DriverMajorVersionGet">
            <summary>Sets the Shim of DaqSystem.get_DriverMajorVersion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DriverMinorVersionGet">
            <summary>Sets the Shim of DaqSystem.get_DriverMinorVersion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.DriverUpdateVersionGet">
            <summary>Sets the Shim of DaqSystem.get_DriverUpdateVersion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetAnalogPowerUpStatesWithOutputTypeStringDoubleArrayOutAOPowerUpOutputBehaviorArrayOut">
            <summary>Sets the Shim of DaqSystem.GetAnalogPowerUpStatesWithOutputType(String channels, Double[]&amp; states, AOPowerUpOutputBehavior[]&amp; modes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetDevicePowerUpStateStringStringArrayOutDigitalPowerUpStateArrayOut">
            <summary>Sets the Shim of DaqSystem.GetDevicePowerUpState(String deviceName, String[]&amp; channels, DigitalPowerUpState[]&amp; states)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetDevicePowerUpStateStringStringArrayOutDigitalPullUpPullDownResistorStateArrayOut">
            <summary>Sets the Shim of DaqSystem.GetDevicePowerUpState(String deviceName, String[]&amp; channels, DigitalPullUpPullDownResistorState[]&amp; states)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetDisconnectedCDaqSynchronizationPortsStringDoubleBooleanOut">
            <summary>Sets the Shim of DaqSystem.GetDisconnectedCDaqSynchronizationPorts(String deviceRequested, Double timeout, Boolean&amp; disconnectedPortsFound)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetLogicFamilyPowerUpStateString">
            <summary>Sets the Shim of DaqSystem.GetLogicFamilyPowerUpState(String deviceName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetPhysicalChannelsPhysicalChannelTypesPhysicalChannelAccess">
            <summary>Sets the Shim of DaqSystem.GetPhysicalChannels(PhysicalChannelTypes physicalChannelTypes, PhysicalChannelAccess physicalChannelAccess)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetSavedChannelInfoString">
            <summary>Sets the Shim of DaqSystem.GetSavedChannelInfo(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetSavedScaleInfoString">
            <summary>Sets the Shim of DaqSystem.GetSavedScaleInfo(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetSavedTaskInfoString">
            <summary>Sets the Shim of DaqSystem.GetSavedTaskInfo(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetSwitchRelayCountString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayCount(String relay)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetSwitchRelayCountsString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayCounts(String relays)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetSwitchRelayPositionString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayPosition(String relay)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetSwitchRelayPositionsString">
            <summary>Sets the Shim of DaqSystem.GetSwitchRelayPositions(String relays)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GetTerminalsTerminalTypes">
            <summary>Sets the Shim of DaqSystem.GetTerminals(TerminalTypes terminalTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.GlobalChannelsGet">
            <summary>Sets the Shim of DaqSystem.get_GlobalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.IsReadOrWriteLateGet">
            <summary>Sets the Shim of DaqSystem.get_IsReadOrWriteLate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.LastDaqWarningGet">
            <summary>Sets the Shim of DaqSystem.get_LastDaqWarning()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.LoadDeviceString">
            <summary>Sets the Shim of DaqSystem.LoadDevice(String deviceName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.LoadPhysicalChannelString">
            <summary>Sets the Shim of DaqSystem.LoadPhysicalChannel(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.LoadScaleString">
            <summary>Sets the Shim of DaqSystem.LoadScale(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.LoadSwitchChannelString">
            <summary>Sets the Shim of DaqSystem.LoadSwitchChannel(String switchChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.LoadTaskString">
            <summary>Sets the Shim of DaqSystem.LoadTask(String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.LocalGet">
            <summary>Sets the Shim of DaqSystem.get_Local()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.OnDaqWarningDaqWarningEventArgs">
            <summary>Sets the Shim of DaqSystem.OnDaqWarning(DaqWarningEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.OpenSwitchRelaysStringBoolean">
            <summary>Sets the Shim of DaqSystem.OpenSwitchRelays(String relays, Boolean waitForSettling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.RemoveCDaqSynchronizationConnectionString">
            <summary>Sets the Shim of DaqSystem.RemoveCDaqSynchronizationConnection(String portList)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveGlobalChannelAsChannelString">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannelAs(Channel channel, String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveGlobalChannelAsChannelStringStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannelAs(Channel channel, String persistedName, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveGlobalChannelChannel">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannel(Channel channel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveGlobalChannelChannelStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveGlobalChannel(Channel channel, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveScaleAsScaleString">
            <summary>Sets the Shim of DaqSystem.SaveScaleAs(Scale scale, String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveScaleAsScaleStringStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveScaleAs(Scale scale, String persistedName, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveScaleScale">
            <summary>Sets the Shim of DaqSystem.SaveScale(Scale scale)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveScaleScaleStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveScale(Scale scale, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveTaskAsTaskString">
            <summary>Sets the Shim of DaqSystem.SaveTaskAs(Task task, String persistedName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveTaskAsTaskStringStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveTaskAs(Task task, String persistedName, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveTaskTask">
            <summary>Sets the Shim of DaqSystem.SaveTask(Task task)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SaveTaskTaskStringSaveOptions">
            <summary>Sets the Shim of DaqSystem.SaveTask(Task task, String author, SaveOptions options)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.ScalesGet">
            <summary>Sets the Shim of DaqSystem.get_Scales()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SetAnalogPowerUpStatesWithOutputTypeStringDoubleArrayAOPowerUpOutputBehaviorArray">
            <summary>Sets the Shim of DaqSystem.SetAnalogPowerUpStatesWithOutputType(String channels, Double[] states, AOPowerUpOutputBehavior[] modes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SetDevicePowerUpStateStringStringArrayDigitalPowerUpStateArray">
            <summary>Sets the Shim of DaqSystem.SetDevicePowerUpState(String deviceName, String[] virtualChannels, DigitalPowerUpState[] powerUpStates)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SetDevicePowerUpStateStringStringArrayDigitalPullUpPullDownResistorStateArray">
            <summary>Sets the Shim of DaqSystem.SetDevicePowerUpState(String deviceName, String[] channels, DigitalPullUpPullDownResistorState[] states)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SetDevicePowerUpStateStringStringArrayDoubleArrayStringArrayDoubleArray">
            <summary>Sets the Shim of DaqSystem.SetDevicePowerUpState(String deviceName, String[] voltageChannels, Double[] voltageValues, String[] currentChannels, Double[] currentValues)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SetLogicFamilyPowerUpStateStringLogicFamily">
            <summary>Sets the Shim of DaqSystem.SetLogicFamilyPowerUpState(String deviceName, LogicFamily logicFamily)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.StaticConstructor">
            <summary>Sets the Shim of DaqSystem.DaqSystem()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SwitchChannelsGet">
            <summary>Sets the Shim of DaqSystem.get_SwitchChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SwitchFindPathStringString">
            <summary>Sets the Shim of DaqSystem.SwitchFindPath(String switchChannel1, String switchChannel2)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SwitchFindPathStringStringEnum">
            <summary>Sets the Shim of DaqSystem.SwitchFindPath(String switchChannel1, String switchChannel2, Enum switchPathStatus)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SwitchRelaysGet">
            <summary>Sets the Shim of DaqSystem.get_SwitchRelays()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SwitchTopologiesGet">
            <summary>Sets the Shim of DaqSystem.get_SwitchTopologies()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DaqSystem.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DaqSystem.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SynchronizingObjectGet">
            <summary>Sets the Shim of DaqSystem.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DaqSystem.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.TasksGet">
            <summary>Sets the Shim of DaqSystem.get_Tasks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqSystem.TristateOutputTerminalString">
            <summary>Sets the Shim of DaqSystem.TristateOutputTerminal(String outputTerminal)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.DaqWarningEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.#ctor(NationalInstruments.DAQmx.DaqWarningEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.AllInstances.ErrorGet">
            <summary>Sets the Shim of DaqWarningEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqWarningEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqWarningEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.AllInstances.MessageGet">
            <summary>Sets the Shim of DaqWarningEventArgs.get_Message()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.AllInstances.ToString01">
            <summary>Sets the Shim of DaqWarningEventArgs.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqWarningEventArgs.DaqWarningEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.ConstructorStringInt32">
            <summary>Sets the Shim of DaqWarningEventArgs.DaqWarningEventArgs(String msg, Int32 code)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.ErrorGet">
            <summary>Sets the Shim of DaqWarningEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqWarningEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of DaqWarningEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.MessageGet">
            <summary>Sets the Shim of DaqWarningEventArgs.get_Message()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDaqWarningEventArgs.ToString">
            <summary>Sets the Shim of DaqWarningEventArgs.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDevice">
            <summary>Shim type of NationalInstruments.DAQmx.Device</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDevice.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDevice.#ctor(NationalInstruments.DAQmx.Device)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIBridgeRangesGet">
            <summary>Sets the Shim of Device.get_AIBridgeRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIChargeRangesGet">
            <summary>Sets the Shim of Device.get_AIChargeRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AICouplingsGet">
            <summary>Sets the Shim of Device.get_AICouplings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AICurrentInternalExcitationDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_AICurrentInternalExcitationDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AICurrentRangesGet">
            <summary>Sets the Shim of Device.get_AICurrentRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIFrequencyRangesGet">
            <summary>Sets the Shim of Device.get_AIFrequencyRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIGainsGet">
            <summary>Sets the Shim of Device.get_AIGains()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIMaximumMultiChannelRateGet">
            <summary>Sets the Shim of Device.get_AIMaximumMultiChannelRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIMaximumSingleChannelRateGet">
            <summary>Sets the Shim of Device.get_AIMaximumSingleChannelRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIMinimumRateGet">
            <summary>Sets the Shim of Device.get_AIMinimumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AINumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_AINumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AINumberOfSynchronizationPulseSourcesGet">
            <summary>Sets the Shim of Device.get_AINumberOfSynchronizationPulseSources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_AIPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AISampleModesGet">
            <summary>Sets the Shim of Device.get_AISampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AISimultaneousSamplingSupportedGet">
            <summary>Sets the Shim of Device.get_AISimultaneousSamplingSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AISupportedMeasurementTypesGet">
            <summary>Sets the Shim of Device.get_AISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AITriggerUsageGet">
            <summary>Sets the Shim of Device.get_AITriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIVoltageInternalExcitationDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_AIVoltageInternalExcitationDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIVoltageInternalExcitationRangeValuesGet">
            <summary>Sets the Shim of Device.get_AIVoltageInternalExcitationRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AIVoltageRangesGet">
            <summary>Sets the Shim of Device.get_AIVoltageRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOCurrentRangesGet">
            <summary>Sets the Shim of Device.get_AOCurrentRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOGainsGet">
            <summary>Sets the Shim of Device.get_AOGains()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOMaximumRateGet">
            <summary>Sets the Shim of Device.get_AOMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOMinimumRateGet">
            <summary>Sets the Shim of Device.get_AOMinimumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AONumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_AONumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AONumberOfSynchronizationPulseSourcesGet">
            <summary>Sets the Shim of Device.get_AONumberOfSynchronizationPulseSources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_AOPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOSampleClockSupportedGet">
            <summary>Sets the Shim of Device.get_AOSampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOSampleModesGet">
            <summary>Sets the Shim of Device.get_AOSampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOSupportedOutputTypesGet">
            <summary>Sets the Shim of Device.get_AOSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOTriggerUsageGet">
            <summary>Sets the Shim of Device.get_AOTriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AOVoltageRangesGet">
            <summary>Sets the Shim of Device.get_AOVoltageRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AccessoryConnectionCountGet">
            <summary>Sets the Shim of Device.get_AccessoryConnectionCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AccessoryConnectionCountSetInt64">
            <summary>Sets the Shim of Device.set_AccessoryConnectionCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AccessoryProductNumbersGet">
            <summary>Sets the Shim of Device.get_AccessoryProductNumbers()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AccessoryProductTypesGet">
            <summary>Sets the Shim of Device.get_AccessoryProductTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AccessorySerialNumbersGet">
            <summary>Sets the Shim of Device.get_AccessorySerialNumbers()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIBridgeRangesGet">
            <summary>Sets the Shim of Device.get_AIBridgeRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIChargeRangesGet">
            <summary>Sets the Shim of Device.get_AIChargeRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AICouplingsGet">
            <summary>Sets the Shim of Device.get_AICouplings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AICurrentInternalExcitationDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_AICurrentInternalExcitationDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AICurrentRangesGet">
            <summary>Sets the Shim of Device.get_AICurrentRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIFrequencyRangesGet">
            <summary>Sets the Shim of Device.get_AIFrequencyRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIGainsGet">
            <summary>Sets the Shim of Device.get_AIGains()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIMaximumMultiChannelRateGet">
            <summary>Sets the Shim of Device.get_AIMaximumMultiChannelRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIMaximumSingleChannelRateGet">
            <summary>Sets the Shim of Device.get_AIMaximumSingleChannelRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIMinimumRateGet">
            <summary>Sets the Shim of Device.get_AIMinimumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AINumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_AINumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AINumberOfSynchronizationPulseSourcesGet">
            <summary>Sets the Shim of Device.get_AINumberOfSynchronizationPulseSources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_AIPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AISampleModesGet">
            <summary>Sets the Shim of Device.get_AISampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AISimultaneousSamplingSupportedGet">
            <summary>Sets the Shim of Device.get_AISimultaneousSamplingSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AISupportedMeasurementTypesGet">
            <summary>Sets the Shim of Device.get_AISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AITriggerUsageGet">
            <summary>Sets the Shim of Device.get_AITriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIVoltageInternalExcitationDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_AIVoltageInternalExcitationDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIVoltageInternalExcitationRangeValuesGet">
            <summary>Sets the Shim of Device.get_AIVoltageInternalExcitationRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AIVoltageRangesGet">
            <summary>Sets the Shim of Device.get_AIVoltageRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOCurrentRangesGet">
            <summary>Sets the Shim of Device.get_AOCurrentRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOGainsGet">
            <summary>Sets the Shim of Device.get_AOGains()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOMaximumRateGet">
            <summary>Sets the Shim of Device.get_AOMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOMinimumRateGet">
            <summary>Sets the Shim of Device.get_AOMinimumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AONumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_AONumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AONumberOfSynchronizationPulseSourcesGet">
            <summary>Sets the Shim of Device.get_AONumberOfSynchronizationPulseSources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_AOPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOSampleClockSupportedGet">
            <summary>Sets the Shim of Device.get_AOSampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOSampleModesGet">
            <summary>Sets the Shim of Device.get_AOSampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOSupportedOutputTypesGet">
            <summary>Sets the Shim of Device.get_AOSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOTriggerUsageGet">
            <summary>Sets the Shim of Device.get_AOTriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AOVoltageRangesGet">
            <summary>Sets the Shim of Device.get_AOVoltageRanges()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AccessoryConnectionCountGet">
            <summary>Sets the Shim of Device.get_AccessoryConnectionCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AccessoryConnectionCountSetInt64">
            <summary>Sets the Shim of Device.set_AccessoryConnectionCount(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AccessoryProductNumbersGet">
            <summary>Sets the Shim of Device.get_AccessoryProductNumbers()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AccessoryProductTypesGet">
            <summary>Sets the Shim of Device.get_AccessoryProductTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AccessorySerialNumbersGet">
            <summary>Sets the Shim of Device.get_AccessorySerialNumbers()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.AnalogTriggerSupportedGet">
            <summary>Sets the Shim of Device.get_AnalogTriggerSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.BusTypeGet">
            <summary>Sets the Shim of Device.get_BusType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CIMaxSizeGet">
            <summary>Sets the Shim of Device.get_CIMaxSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CIMaximumTimebaseGet">
            <summary>Sets the Shim of Device.get_CIMaximumTimebase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CIPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_CIPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CISampleClockSupportedGet">
            <summary>Sets the Shim of Device.get_CISampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CISampleModesGet">
            <summary>Sets the Shim of Device.get_CISampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CISupportedMeasurementTypesGet">
            <summary>Sets the Shim of Device.get_CISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CITriggerUsageGet">
            <summary>Sets the Shim of Device.get_CITriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.COMaxSizeGet">
            <summary>Sets the Shim of Device.get_COMaxSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.COMaximumTimebaseGet">
            <summary>Sets the Shim of Device.get_COMaximumTimebase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.COPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_COPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.COSampleClockSupportedGet">
            <summary>Sets the Shim of Device.get_COSampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.COSampleModesGet">
            <summary>Sets the Shim of Device.get_COSampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.COSupportedOutputTypesGet">
            <summary>Sets the Shim of Device.get_COSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.COTriggerUsageGet">
            <summary>Sets the Shim of Device.get_COTriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CarrierSerialNumberGet">
            <summary>Sets the Shim of Device.get_CarrierSerialNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ChangeExternalCalibrationPasswordStringString">
            <summary>Sets the Shim of Device.ChangeExternalCalibrationPassword(String currentPassword, String newPassword)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ChassisModuleDeviceNamesGet">
            <summary>Sets the Shim of Device.get_ChassisModuleDeviceNames()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CompactDaqChassisDeviceNameGet">
            <summary>Sets the Shim of Device.get_CompactDaqChassisDeviceName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CompactDaqChassisSlotNumberGet">
            <summary>Sets the Shim of Device.get_CompactDaqChassisSlotNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CompactRioChassisDeviceNameGet">
            <summary>Sets the Shim of Device.get_CompactRioChassisDeviceName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.CompactRioSlotNumberGet">
            <summary>Sets the Shim of Device.get_CompactRioSlotNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DILinesGet">
            <summary>Sets the Shim of Device.get_DILines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DIMaximumRateGet">
            <summary>Sets the Shim of Device.get_DIMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DINumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_DINumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DIPortsGet">
            <summary>Sets the Shim of Device.get_DIPorts()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DITriggerUsageGet">
            <summary>Sets the Shim of Device.get_DITriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DOLinesGet">
            <summary>Sets the Shim of Device.get_DOLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DOMaximumRateGet">
            <summary>Sets the Shim of Device.get_DOMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DONumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_DONumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DOPortsGet">
            <summary>Sets the Shim of Device.get_DOPorts()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DOTriggerUsageGet">
            <summary>Sets the Shim of Device.get_DOTriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DeleteNetworkDevice">
            <summary>Sets the Shim of Device.DeleteNetworkDevice()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DeviceIDGet">
            <summary>Sets the Shim of Device.get_DeviceID()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DigitalFilterLowpassCutoffFrequencyDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_DigitalFilterLowpassCutoffFrequencyDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DigitalFilterLowpassCutoffFrequencyRangeValuesGet">
            <summary>Sets the Shim of Device.get_DigitalFilterLowpassCutoffFrequencyRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DigitalFilterTypesGet">
            <summary>Sets the Shim of Device.get_DigitalFilterTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DigitalTriggerSupportedGet">
            <summary>Sets the Shim of Device.get_DigitalTriggerSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.Dispose">
            <summary>Sets the Shim of Device.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of Device.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ExternalCalibrationDateGet">
            <summary>Sets the Shim of Device.get_ExternalCalibrationDate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ExternalCalibrationRecommendedIntervalGet">
            <summary>Sets the Shim of Device.get_ExternalCalibrationRecommendedInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ExternalCalibrationTemperatureGet">
            <summary>Sets the Shim of Device.get_ExternalCalibrationTemperature()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.FieldDaqBankDeviceNamesGet">
            <summary>Sets the Shim of Device.get_FieldDaqBankDeviceNames()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.FieldDaqDeviceNameGet">
            <summary>Sets the Shim of Device.get_FieldDaqDeviceName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.GetPhysicalChannelsPhysicalChannelTypesPhysicalChannelAccess">
            <summary>Sets the Shim of Device.GetPhysicalChannels(PhysicalChannelTypes physicalChannelTypes, PhysicalChannelAccess physicalChannelAccess)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.GetPossibleSCExpressCalibrationAccessoryConnectionsString">
            <summary>Sets the Shim of Device.GetPossibleSCExpressCalibrationAccessoryConnections(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.GetTerminalsTerminalTypes">
            <summary>Sets the Shim of Device.GetTerminals(TerminalTypes terminalTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.IsSelfCalibrationSupportedGet">
            <summary>Sets the Shim of Device.get_IsSelfCalibrationSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.IsSimulatedGet">
            <summary>Sets the Shim of Device.get_IsSimulated()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.LowpassCutoffFrequenciesDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_LowpassCutoffFrequenciesDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.LowpassCutoffFrequenciesRangeValuesGet">
            <summary>Sets the Shim of Device.get_LowpassCutoffFrequenciesRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.MSeriesLegacyCompatibilityGet">
            <summary>Sets the Shim of Device.get_MSeriesLegacyCompatibility()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.MSeriesLegacyCompatibilitySetBoolean">
            <summary>Sets the Shim of Device.set_MSeriesLegacyCompatibility(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.MaxUserDefinedCalibrationInfoSizeGet">
            <summary>Sets the Shim of Device.get_MaxUserDefinedCalibrationInfoSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.NumberOfDmaChannelsGet">
            <summary>Sets the Shim of Device.get_NumberOfDmaChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.PciBusNumberGet">
            <summary>Sets the Shim of Device.get_PciBusNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.PciDeviceNumberGet">
            <summary>Sets the Shim of Device.get_PciDeviceNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ProductCategoryGet">
            <summary>Sets the Shim of Device.get_ProductCategory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ProductNumberGet">
            <summary>Sets the Shim of Device.get_ProductNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ProductTypeGet">
            <summary>Sets the Shim of Device.get_ProductType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.PxiChassisNumberGet">
            <summary>Sets the Shim of Device.get_PxiChassisNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.PxiSlotNumberGet">
            <summary>Sets the Shim of Device.get_PxiSlotNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.RecommendedAccessoryConnectionCountLimitGet">
            <summary>Sets the Shim of Device.get_RecommendedAccessoryConnectionCountLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ReserveNetworkDevice">
            <summary>Sets the Shim of Device.ReserveNetworkDevice()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ReserveNetworkDeviceBoolean">
            <summary>Sets the Shim of Device.ReserveNetworkDevice(Boolean overrideReservation)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.Reset">
            <summary>Sets the Shim of Device.Reset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.RestoreLastExternalCalibration">
            <summary>Sets the Shim of Device.RestoreLastExternalCalibration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.SelfCalibrate">
            <summary>Sets the Shim of Device.SelfCalibrate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.SelfCalibrationDateTimeGet">
            <summary>Sets the Shim of Device.get_SelfCalibrationDateTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.SelfCalibrationTemperatureGet">
            <summary>Sets the Shim of Device.get_SelfCalibrationTemperature()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.SelfTest">
            <summary>Sets the Shim of Device.SelfTest()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.SerialNumberGet">
            <summary>Sets the Shim of Device.get_SerialNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.StartExternalCalibrationString">
            <summary>Sets the Shim of Device.StartExternalCalibration(String password)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.SwitchGet">
            <summary>Sets the Shim of Device.get_Switch()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TcpipEthernetIPGet">
            <summary>Sets the Shim of Device.get_TcpipEthernetIP()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TcpipHostnameGet">
            <summary>Sets the Shim of Device.get_TcpipHostname()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TcpipWirelessIPGet">
            <summary>Sets the Shim of Device.get_TcpipWirelessIP()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TedsHardwareTedsSupportedGet">
            <summary>Sets the Shim of Device.get_TedsHardwareTedsSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TemperatureGet">
            <summary>Sets the Shim of Device.get_Temperature()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of Device.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TimeTriggerCountGet">
            <summary>Sets the Shim of Device.get_TimeTriggerCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TimeTriggerSupportedGet">
            <summary>Sets the Shim of Device.get_TimeTriggerSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.TimestampEngineCountGet">
            <summary>Sets the Shim of Device.get_TimestampEngineCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.ToString01">
            <summary>Sets the Shim of Device.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.UnreserveNetworkDevice">
            <summary>Sets the Shim of Device.UnreserveNetworkDevice()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.UserDefinedCalibrationInfoGet">
            <summary>Sets the Shim of Device.get_UserDefinedCalibrationInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances.UserDefinedCalibrationInfoSetString">
            <summary>Sets the Shim of Device.set_UserDefinedCalibrationInfo(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances._Device">
            <summary>Sets the Shim of Device.!Device()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AllInstances._Device01">
            <summary>Sets the Shim of Device.~Device()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.AnalogTriggerSupportedGet">
            <summary>Sets the Shim of Device.get_AnalogTriggerSupported()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDevice.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDevice.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDevice.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.BusTypeGet">
            <summary>Sets the Shim of Device.get_BusType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CIMaxSizeGet">
            <summary>Sets the Shim of Device.get_CIMaxSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CIMaximumTimebaseGet">
            <summary>Sets the Shim of Device.get_CIMaximumTimebase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CIPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_CIPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CISampleClockSupportedGet">
            <summary>Sets the Shim of Device.get_CISampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CISampleModesGet">
            <summary>Sets the Shim of Device.get_CISampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CISupportedMeasurementTypesGet">
            <summary>Sets the Shim of Device.get_CISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CITriggerUsageGet">
            <summary>Sets the Shim of Device.get_CITriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.COMaxSizeGet">
            <summary>Sets the Shim of Device.get_COMaxSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.COMaximumTimebaseGet">
            <summary>Sets the Shim of Device.get_COMaximumTimebase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.COPhysicalChannelsGet">
            <summary>Sets the Shim of Device.get_COPhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.COSampleClockSupportedGet">
            <summary>Sets the Shim of Device.get_COSampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.COSampleModesGet">
            <summary>Sets the Shim of Device.get_COSampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.COSupportedOutputTypesGet">
            <summary>Sets the Shim of Device.get_COSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.COTriggerUsageGet">
            <summary>Sets the Shim of Device.get_COTriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CarrierSerialNumberGet">
            <summary>Sets the Shim of Device.get_CarrierSerialNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ChangeExternalCalibrationPasswordStringString">
            <summary>Sets the Shim of Device.ChangeExternalCalibrationPassword(String currentPassword, String newPassword)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ChassisModuleDeviceNamesGet">
            <summary>Sets the Shim of Device.get_ChassisModuleDeviceNames()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CompactDaqChassisDeviceNameGet">
            <summary>Sets the Shim of Device.get_CompactDaqChassisDeviceName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CompactDaqChassisSlotNumberGet">
            <summary>Sets the Shim of Device.get_CompactDaqChassisSlotNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CompactRioChassisDeviceNameGet">
            <summary>Sets the Shim of Device.get_CompactRioChassisDeviceName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.CompactRioSlotNumberGet">
            <summary>Sets the Shim of Device.get_CompactRioSlotNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DILinesGet">
            <summary>Sets the Shim of Device.get_DILines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DIMaximumRateGet">
            <summary>Sets the Shim of Device.get_DIMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DINumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_DINumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DIPortsGet">
            <summary>Sets the Shim of Device.get_DIPorts()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DITriggerUsageGet">
            <summary>Sets the Shim of Device.get_DITriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DOLinesGet">
            <summary>Sets the Shim of Device.get_DOLines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DOMaximumRateGet">
            <summary>Sets the Shim of Device.get_DOMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DONumberOfSampleTimingEnginesGet">
            <summary>Sets the Shim of Device.get_DONumberOfSampleTimingEngines()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DOPortsGet">
            <summary>Sets the Shim of Device.get_DOPorts()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DOTriggerUsageGet">
            <summary>Sets the Shim of Device.get_DOTriggerUsage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DeleteNetworkDevice">
            <summary>Sets the Shim of Device.DeleteNetworkDevice()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DeviceIDGet">
            <summary>Sets the Shim of Device.get_DeviceID()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DigitalFilterLowpassCutoffFrequencyDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_DigitalFilterLowpassCutoffFrequencyDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DigitalFilterLowpassCutoffFrequencyRangeValuesGet">
            <summary>Sets the Shim of Device.get_DigitalFilterLowpassCutoffFrequencyRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DigitalFilterTypesGet">
            <summary>Sets the Shim of Device.get_DigitalFilterTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DigitalTriggerSupportedGet">
            <summary>Sets the Shim of Device.get_DigitalTriggerSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.Dispose">
            <summary>Sets the Shim of Device.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.DisposeBoolean">
            <summary>Sets the Shim of Device.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ExternalCalibrationDateGet">
            <summary>Sets the Shim of Device.get_ExternalCalibrationDate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ExternalCalibrationRecommendedIntervalGet">
            <summary>Sets the Shim of Device.get_ExternalCalibrationRecommendedInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ExternalCalibrationTemperatureGet">
            <summary>Sets the Shim of Device.get_ExternalCalibrationTemperature()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.FieldDaqBankDeviceNamesGet">
            <summary>Sets the Shim of Device.get_FieldDaqBankDeviceNames()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.FieldDaqDeviceNameGet">
            <summary>Sets the Shim of Device.get_FieldDaqDeviceName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.GetPhysicalChannelsPhysicalChannelTypesPhysicalChannelAccess">
            <summary>Sets the Shim of Device.GetPhysicalChannels(PhysicalChannelTypes physicalChannelTypes, PhysicalChannelAccess physicalChannelAccess)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.GetPossibleSCExpressCalibrationAccessoryConnectionsString">
            <summary>Sets the Shim of Device.GetPossibleSCExpressCalibrationAccessoryConnections(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.GetTerminalsTerminalTypes">
            <summary>Sets the Shim of Device.GetTerminals(TerminalTypes terminalTypes)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.IsSelfCalibrationSupportedGet">
            <summary>Sets the Shim of Device.get_IsSelfCalibrationSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.IsSimulatedGet">
            <summary>Sets the Shim of Device.get_IsSimulated()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.LowpassCutoffFrequenciesDiscreteValuesGet">
            <summary>Sets the Shim of Device.get_LowpassCutoffFrequenciesDiscreteValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.LowpassCutoffFrequenciesRangeValuesGet">
            <summary>Sets the Shim of Device.get_LowpassCutoffFrequenciesRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.MSeriesLegacyCompatibilityGet">
            <summary>Sets the Shim of Device.get_MSeriesLegacyCompatibility()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.MSeriesLegacyCompatibilitySetBoolean">
            <summary>Sets the Shim of Device.set_MSeriesLegacyCompatibility(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.MaxUserDefinedCalibrationInfoSizeGet">
            <summary>Sets the Shim of Device.get_MaxUserDefinedCalibrationInfoSize()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.NumberOfDmaChannelsGet">
            <summary>Sets the Shim of Device.get_NumberOfDmaChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.PciBusNumberGet">
            <summary>Sets the Shim of Device.get_PciBusNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.PciDeviceNumberGet">
            <summary>Sets the Shim of Device.get_PciDeviceNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ProductCategoryGet">
            <summary>Sets the Shim of Device.get_ProductCategory()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ProductNumberGet">
            <summary>Sets the Shim of Device.get_ProductNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ProductTypeGet">
            <summary>Sets the Shim of Device.get_ProductType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.PxiChassisNumberGet">
            <summary>Sets the Shim of Device.get_PxiChassisNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.PxiSlotNumberGet">
            <summary>Sets the Shim of Device.get_PxiSlotNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.RecommendedAccessoryConnectionCountLimitGet">
            <summary>Sets the Shim of Device.get_RecommendedAccessoryConnectionCountLimit()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ReserveNetworkDevice">
            <summary>Sets the Shim of Device.ReserveNetworkDevice()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ReserveNetworkDeviceBoolean">
            <summary>Sets the Shim of Device.ReserveNetworkDevice(Boolean overrideReservation)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.Reset">
            <summary>Sets the Shim of Device.Reset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.RestoreLastExternalCalibration">
            <summary>Sets the Shim of Device.RestoreLastExternalCalibration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.SelfCalibrate">
            <summary>Sets the Shim of Device.SelfCalibrate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.SelfCalibrationDateTimeGet">
            <summary>Sets the Shim of Device.get_SelfCalibrationDateTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.SelfCalibrationTemperatureGet">
            <summary>Sets the Shim of Device.get_SelfCalibrationTemperature()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.SelfTest">
            <summary>Sets the Shim of Device.SelfTest()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.SerialNumberGet">
            <summary>Sets the Shim of Device.get_SerialNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.StartExternalCalibrationString">
            <summary>Sets the Shim of Device.StartExternalCalibration(String password)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.SwitchGet">
            <summary>Sets the Shim of Device.get_Switch()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TcpipEthernetIPGet">
            <summary>Sets the Shim of Device.get_TcpipEthernetIP()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TcpipHostnameGet">
            <summary>Sets the Shim of Device.get_TcpipHostname()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TcpipWirelessIPGet">
            <summary>Sets the Shim of Device.get_TcpipWirelessIP()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TedsHardwareTedsSupportedGet">
            <summary>Sets the Shim of Device.get_TedsHardwareTedsSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TemperatureGet">
            <summary>Sets the Shim of Device.get_Temperature()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ThrowIfDisposed">
            <summary>Sets the Shim of Device.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TimeTriggerCountGet">
            <summary>Sets the Shim of Device.get_TimeTriggerCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TimeTriggerSupportedGet">
            <summary>Sets the Shim of Device.get_TimeTriggerSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.TimestampEngineCountGet">
            <summary>Sets the Shim of Device.get_TimestampEngineCount()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.ToString">
            <summary>Sets the Shim of Device.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.UnreserveNetworkDevice">
            <summary>Sets the Shim of Device.UnreserveNetworkDevice()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.UserDefinedCalibrationInfoGet">
            <summary>Sets the Shim of Device.get_UserDefinedCalibrationInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice.UserDefinedCalibrationInfoSetString">
            <summary>Sets the Shim of Device.set_UserDefinedCalibrationInfo(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice._Device">
            <summary>Sets the Shim of Device.!Device()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDevice._Device01">
            <summary>Sets the Shim of Device.~Device()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalChangeDetectionEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.#ctor(NationalInstruments.DAQmx.DigitalChangeDetectionEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of DigitalChangeDetectionEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of DigitalChangeDetectionEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.Constructor">
            <summary>Sets the Shim of DigitalChangeDetectionEventArgs.DigitalChangeDetectionEventArgs()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of DigitalChangeDetectionEventArgs.DigitalChangeDetectionEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of DigitalChangeDetectionEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalChangeDetectionEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of DigitalChangeDetectionEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalEdgeAdvanceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.#ctor(NationalInstruments.DAQmx.DigitalEdgeAdvanceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.EdgeSetDigitalEdgeAdvanceTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.set_Edge(DigitalEdgeAdvanceTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.DigitalEdgeAdvanceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.EdgeSetDigitalEdgeAdvanceTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.set_Edge(DigitalEdgeAdvanceTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.SourceGet">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeAdvanceTrigger.ToString">
            <summary>Sets the Shim of DigitalEdgeAdvanceTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalEdgeArmStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.#ctor(NationalInstruments.DAQmx.DigitalEdgeArmStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.EdgeSetDigitalEdgeArmStartTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_Edge(DigitalEdgeArmStartTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.DigitalEdgeArmStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.EdgeSetDigitalEdgeArmStartTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_Edge(DigitalEdgeArmStartTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.SourceGet">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeArmStartTrigger.ToString">
            <summary>Sets the Shim of DigitalEdgeArmStartTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalEdgeReferenceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.#ctor(NationalInstruments.DAQmx.DigitalEdgeReferenceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.EdgeSetDigitalEdgeReferenceTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_Edge(DigitalEdgeReferenceTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.DigitalEdgeReferenceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.EdgeSetDigitalEdgeReferenceTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_Edge(DigitalEdgeReferenceTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.SourceGet">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeReferenceTrigger.ToString">
            <summary>Sets the Shim of DigitalEdgeReferenceTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalEdgeStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.#ctor(NationalInstruments.DAQmx.DigitalEdgeStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.EdgeSetDigitalEdgeStartTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_Edge(DigitalEdgeStartTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.DigitalEdgeStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.EdgeSetDigitalEdgeStartTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_Edge(DigitalEdgeStartTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.SourceGet">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeStartTrigger.ToString">
            <summary>Sets the Shim of DigitalEdgeStartTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalEdgeWatchdogExpirationTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.#ctor(NationalInstruments.DAQmx.DigitalEdgeWatchdogExpirationTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances.EdgeSetDigitalEdgeWatchdogExpirationTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.set_Edge(DigitalEdgeWatchdogExpirationTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.DigitalEdgeWatchdogExpirationTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.EdgeGet">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.get_Edge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.EdgeSetDigitalEdgeWatchdogExpirationTriggerEdge">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.set_Edge(DigitalEdgeWatchdogExpirationTriggerEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.SourceGet">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalEdgeWatchdogExpirationTrigger.ToString">
            <summary>Sets the Shim of DigitalEdgeWatchdogExpirationTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalLevelPauseTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.#ctor(NationalInstruments.DAQmx.DigitalLevelPauseTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.ConditionSetDigitalLevelPauseTriggerCondition">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_Condition(DigitalLevelPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.ConditionGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.ConditionSetDigitalLevelPauseTriggerCondition">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_Condition(DigitalLevelPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.DigitalLevelPauseTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterEnableGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.SourceGet">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalLevelPauseTrigger.ToString">
            <summary>Sets the Shim of DigitalLevelPauseTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.#ctor(NationalInstruments.DAQmx.DigitalMultiChannelReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state, Byte[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteMdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state, Byte[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16MdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt16[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginMemoryOptimizedReadSingleSampleMultiLineAsyncCallbackObjectBooleanMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadMultiSamplePortByteInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadMultiSamplePortInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadMultiSamplePortInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadSingleSampleMultiLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadSingleSamplePortByteAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadSingleSamplePortInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadSingleSamplePortInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadSingleSamplePortUInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadSingleSamplePortUInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadSingleSampleSingleLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortByteIAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortUInt16IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndMemoryOptimizedReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadMultiSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadMultiSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadMultiSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadMultiSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadMultiSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadSingleSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadSingleSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadSingleSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadSingleSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadSingleSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadSingleSampleSingleLineIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortByteInt32ByteMdArray2RefInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortByte(Int32 samplesPerChannel, Byte[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortByteInt32ByteMdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortByte(Int32 samplesPerChannel, Byte[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortInt32Int32Int32MdArray2RefInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortInt32(Int32 samplesPerChannel, Int32[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortInt32Int32Int32MdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortInt32(Int32 samplesPerChannel, Int32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt16Int32UInt16MdArray2RefInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortUInt16(Int32 samplesPerChannel, UInt16[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt16Int32UInt16MdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortUInt16(Int32 samplesPerChannel, UInt16[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt32Int32UInt32MdArray2RefInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt32Int32UInt32MdArray2RefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadMultiSamplePortUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.MemoryOptimizedReadSingleSampleMultiLineBooleanMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadSingleSampleMultiLine(Boolean[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadMultiSamplePortByteInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortByte(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadMultiSamplePortInt16Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadMultiSamplePortInt32Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadMultiSamplePortUInt16Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadMultiSamplePortUInt32Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadSingleSampleMultiLine">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadSingleSamplePortByte">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadSingleSamplePortInt16">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadSingleSamplePortInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadSingleSamplePortUInt16">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadSingleSamplePortUInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadSingleSampleSingleLine">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadWaveformInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadWaveform(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ReadWaveformTimeSpan">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalMultiChannelReader.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state, Byte[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteMdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state, Byte[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16MdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt16[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32MdArray2ReallocationPolicy">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginMemoryOptimizedReadSingleSampleMultiLineAsyncCallbackObjectBooleanMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginMemoryOptimizedReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadMultiSamplePortByteInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadMultiSamplePortInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadMultiSamplePortInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadSingleSampleMultiLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadSingleSamplePortByteAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadSingleSamplePortInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadSingleSamplePortInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadSingleSamplePortUInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadSingleSamplePortUInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadSingleSampleSingleLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ConstructorDaqStream">
            <summary>Sets the Shim of DigitalMultiChannelReader.DigitalMultiChannelReader(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortByteIAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt16IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndMemoryOptimizedReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndMemoryOptimizedReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadMultiSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadMultiSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadMultiSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadMultiSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadMultiSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadSingleSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadSingleSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadSingleSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadSingleSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadSingleSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadSingleSampleSingleLineIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.MemoryOptimizedReadSingleSampleMultiLineBooleanMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelReader.MemoryOptimizedReadSingleSampleMultiLine(Boolean[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadMultiSamplePortByteInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortByte(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadMultiSamplePortInt16Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadMultiSamplePortInt32Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadMultiSamplePortUInt16Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadMultiSamplePortUInt32Int32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadMultiSamplePortUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadSingleSampleMultiLine">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadSingleSamplePortByte">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadSingleSamplePortInt16">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadSingleSamplePortInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadSingleSamplePortUInt16">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadSingleSamplePortUInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadSingleSampleSingleLine">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadWaveformInt32">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadWaveform(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ReadWaveformTimeSpan">
            <summary>Sets the Shim of DigitalMultiChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelReader.ToString">
            <summary>Sets the Shim of DigitalMultiChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.#ctor(NationalInstruments.DAQmx.DigitalMultiChannelWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanByteMdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanUInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanUInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteSingleSampleMultiLineBooleanBooleanMdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanByteArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanUInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanUInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteSingleSampleSingleLineBooleanBooleanArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.BeginWriteWaveformBooleanDigitalWaveformArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalMultiChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteMultiSamplePortBooleanByteMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteMultiSamplePortBooleanInt16MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteMultiSamplePortBooleanInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteMultiSamplePortBooleanUInt16MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteMultiSamplePortBooleanUInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteSingleSampleMultiLineBooleanBooleanMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteSingleSamplePortBooleanByteArray">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteSingleSamplePortBooleanInt16Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteSingleSamplePortBooleanInt32Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteSingleSamplePortBooleanUInt16Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteSingleSamplePortBooleanUInt32Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteSingleSampleSingleLineBooleanBooleanArray">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.AllInstances.WriteWaveformBooleanDigitalWaveformArray">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanByteMdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanUInt16MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanUInt32MdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteSingleSampleMultiLineBooleanBooleanMdArray2AsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanByteArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanUInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanUInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteSingleSampleSingleLineBooleanBooleanArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BeginWriteWaveformBooleanDigitalWaveformArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalMultiChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.ConstructorDaqStream">
            <summary>Sets the Shim of DigitalMultiChannelWriter.DigitalMultiChannelWriter(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the Shim of DigitalMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.ToString">
            <summary>Sets the Shim of DigitalMultiChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteMultiSamplePortBooleanByteMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteMultiSamplePortBooleanInt16MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteMultiSamplePortBooleanInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteMultiSamplePortBooleanUInt16MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteMultiSamplePortBooleanUInt32MdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteSingleSampleMultiLineBooleanBooleanMdArray2">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteSingleSamplePortBooleanByteArray">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteSingleSamplePortBooleanInt16Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteSingleSamplePortBooleanInt32Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteSingleSamplePortBooleanUInt16Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteSingleSamplePortBooleanUInt32Array">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteSingleSampleSingleLineBooleanBooleanArray">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalMultiChannelWriter.WriteWaveformBooleanDigitalWaveformArray">
            <summary>Sets the Shim of DigitalMultiChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform[] data)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalPatternPauseTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.#ctor(NationalInstruments.DAQmx.DigitalPatternPauseTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.ConditionSetDigitalPatternPauseTriggerCondition">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.set_Condition(DigitalPatternPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.PatternGet">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.get_Pattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.PatternSetString">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.set_Pattern(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.ConditionGet">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.ConditionSetDigitalPatternPauseTriggerCondition">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.set_Condition(DigitalPatternPauseTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.DigitalPatternPauseTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.PatternGet">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.get_Pattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.PatternSetString">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.set_Pattern(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.SourceGet">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternPauseTrigger.ToString">
            <summary>Sets the Shim of DigitalPatternPauseTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalPatternReferenceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.#ctor(NationalInstruments.DAQmx.DigitalPatternReferenceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.ConditionSetDigitalPatternReferenceTriggerCondition">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.set_Condition(DigitalPatternReferenceTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.PatternGet">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.get_Pattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.PatternSetString">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.set_Pattern(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.ConditionGet">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.ConditionSetDigitalPatternReferenceTriggerCondition">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.set_Condition(DigitalPatternReferenceTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.DigitalPatternReferenceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.PatternGet">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.get_Pattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.PatternSetString">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.set_Pattern(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.SourceGet">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternReferenceTrigger.ToString">
            <summary>Sets the Shim of DigitalPatternReferenceTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalPatternStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.#ctor(NationalInstruments.DAQmx.DigitalPatternStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.ConditionGet">
            <summary>Sets the Shim of DigitalPatternStartTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.ConditionSetDigitalPatternStartTriggerCondition">
            <summary>Sets the Shim of DigitalPatternStartTrigger.set_Condition(DigitalPatternStartTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalPatternStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalPatternStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.PatternGet">
            <summary>Sets the Shim of DigitalPatternStartTrigger.get_Pattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.PatternSetString">
            <summary>Sets the Shim of DigitalPatternStartTrigger.set_Pattern(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of DigitalPatternStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of DigitalPatternStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalPatternStartTrigger.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.ConditionGet">
            <summary>Sets the Shim of DigitalPatternStartTrigger.get_Condition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.ConditionSetDigitalPatternStartTriggerCondition">
            <summary>Sets the Shim of DigitalPatternStartTrigger.set_Condition(DigitalPatternStartTriggerCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.ConstructorTask">
            <summary>Sets the Shim of DigitalPatternStartTrigger.DigitalPatternStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of DigitalPatternStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of DigitalPatternStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.PatternGet">
            <summary>Sets the Shim of DigitalPatternStartTrigger.get_Pattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.PatternSetString">
            <summary>Sets the Shim of DigitalPatternStartTrigger.set_Pattern(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.SourceGet">
            <summary>Sets the Shim of DigitalPatternStartTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.SourceSetString">
            <summary>Sets the Shim of DigitalPatternStartTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalPatternStartTrigger.ToString">
            <summary>Sets the Shim of DigitalPatternStartTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.#ctor(NationalInstruments.DAQmx.DigitalSingleChannelReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteArray">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state, Byte[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16Array">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16ArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt16[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginMemoryOptimizedReadSingleSampleMultiLineAsyncCallbackObjectBooleanArray">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadMultiSamplePortByteInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadMultiSamplePortInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadMultiSamplePortInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadSingleSampleMultiLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadSingleSamplePortByteAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadSingleSamplePortInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadSingleSamplePortInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadSingleSamplePortUInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadSingleSamplePortUInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadSingleSampleSingleLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortByteIAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortUInt16IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndMemoryOptimizedReadMultiSamplePortUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndMemoryOptimizedReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadMultiSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadMultiSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadMultiSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadMultiSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadMultiSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadSingleSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadSingleSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadSingleSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadSingleSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadSingleSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadSingleSampleSingleLineIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortByteInt32ByteArrayRefInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortByte(Int32 numberOfSamples, Byte[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortByteInt32ByteArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortByte(Int32 numberOfSamples, Byte[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortInt32Int32Int32ArrayRefInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortInt32(Int32 numberOfSamples, Int32[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortInt32Int32Int32ArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortInt32(Int32 numberOfSamples, Int32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt16Int32UInt16ArrayRefInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortUInt16(Int32 numberOfSamples, UInt16[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt16Int32UInt16ArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortUInt16(Int32 numberOfSamples, UInt16[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt32Int32UInt32ArrayRefInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortUInt32(Int32 numberOfSamples, UInt32[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadMultiSamplePortUInt32Int32UInt32ArrayRefReallocationPolicyInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadMultiSamplePortUInt32(Int32 numberOfSamples, UInt32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.MemoryOptimizedReadSingleSampleMultiLineBooleanArray">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadSingleSampleMultiLine(Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadMultiSamplePortByteInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortByte(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadMultiSamplePortInt16Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadMultiSamplePortInt32Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadMultiSamplePortUInt16Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortUInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadMultiSamplePortUInt32Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadSingleSampleMultiLine">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadSingleSamplePortByte">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadSingleSamplePortInt16">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadSingleSamplePortInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadSingleSamplePortUInt16">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadSingleSamplePortUInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadSingleSampleSingleLine">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadWaveformInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ReadWaveformTimeSpan">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalSingleChannelReader.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteArray">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortByteInt32AsyncCallbackObjectByteArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state, Byte[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16Array">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16ArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt16[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32ArrayReallocationPolicy">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginMemoryOptimizedReadSingleSampleMultiLineAsyncCallbackObjectBooleanArray">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginMemoryOptimizedReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadMultiSamplePortByteInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadMultiSamplePortInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadMultiSamplePortInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadSingleSampleMultiLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadSingleSamplePortByteAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadSingleSamplePortInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadSingleSamplePortInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadSingleSamplePortUInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadSingleSamplePortUInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadSingleSampleSingleLineAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ConstructorDaqStream">
            <summary>Sets the Shim of DigitalSingleChannelReader.DigitalSingleChannelReader(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortByteIAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt16IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt32IAsyncResultInt32Out">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndMemoryOptimizedReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndMemoryOptimizedReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadMultiSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadMultiSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadMultiSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadMultiSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadMultiSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadSingleSamplePortByteIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadSingleSamplePortInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadSingleSamplePortInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadSingleSamplePortUInt16IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadSingleSamplePortUInt32IAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadSingleSampleSingleLineIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.EndReadWaveformIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.MemoryOptimizedReadSingleSampleMultiLineBooleanArray">
            <summary>Sets the Shim of DigitalSingleChannelReader.MemoryOptimizedReadSingleSampleMultiLine(Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadMultiSamplePortByteInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortByte(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadMultiSamplePortInt16Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadMultiSamplePortInt32Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadMultiSamplePortUInt16Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortUInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadMultiSamplePortUInt32Int32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadMultiSamplePortUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadSingleSampleMultiLine">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadSingleSamplePortByte">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadSingleSamplePortInt16">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadSingleSamplePortInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadSingleSamplePortUInt16">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadSingleSamplePortUInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadSingleSampleSingleLine">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadWaveformInt32">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ReadWaveformTimeSpan">
            <summary>Sets the Shim of DigitalSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelReader.ToString">
            <summary>Sets the Shim of DigitalSingleChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter">
            <summary>Shim type of NationalInstruments.DAQmx.DigitalSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.#ctor(NationalInstruments.DAQmx.DigitalSingleChannelWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanByteArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanUInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteMultiSamplePortBooleanUInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteSingleSampleMultiLineBooleanBooleanArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanByteAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanUInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteSingleSamplePortBooleanUInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteSingleSampleSingleLineBooleanBooleanAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.BeginWriteWaveformBooleanDigitalWaveformAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.ToString01">
            <summary>Sets the Shim of DigitalSingleChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteMultiSamplePortBooleanByteArray">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteMultiSamplePortBooleanInt16Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteMultiSamplePortBooleanInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteMultiSamplePortBooleanUInt16Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteMultiSamplePortBooleanUInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteSingleSampleMultiLineBooleanBooleanArray">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteSingleSamplePortBooleanByte">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteSingleSamplePortBooleanInt16">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteSingleSamplePortBooleanInt32">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteSingleSamplePortBooleanUInt16">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteSingleSamplePortBooleanUInt32">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteSingleSampleSingleLineBooleanBoolean">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.AllInstances.WriteWaveformBooleanDigitalWaveform">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanByteArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanUInt16ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanUInt32ArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteSingleSampleMultiLineBooleanBooleanArrayAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanByteAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanUInt16AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanUInt32AsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteSingleSampleSingleLineBooleanBooleanAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BeginWriteWaveformBooleanDigitalWaveformAsyncCallbackObject">
            <summary>Sets the Shim of DigitalSingleChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.ConstructorDaqStream">
            <summary>Sets the Shim of DigitalSingleChannelWriter.DigitalSingleChannelWriter(DaqStream stream)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the Shim of DigitalSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the Shim of DigitalSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of DigitalSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.SynchronizingObjectGet">
            <summary>Sets the Shim of DigitalSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of DigitalSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.ToString">
            <summary>Sets the Shim of DigitalSingleChannelWriter.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteMultiSamplePortBooleanByteArray">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteMultiSamplePortBooleanInt16Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteMultiSamplePortBooleanInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteMultiSamplePortBooleanUInt16Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteMultiSamplePortBooleanUInt32Array">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteSingleSampleMultiLineBooleanBooleanArray">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteSingleSamplePortBooleanByte">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteSingleSamplePortBooleanInt16">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteSingleSamplePortBooleanInt32">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteSingleSamplePortBooleanUInt16">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteSingleSamplePortBooleanUInt32">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32 data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteSingleSampleSingleLineBooleanBoolean">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean data)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimDigitalSingleChannelWriter.WriteWaveformBooleanDigitalWaveform">
            <summary>Sets the Shim of DigitalSingleChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform data)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.EveryNSamplesReadEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.#ctor(NationalInstruments.DAQmx.EveryNSamplesReadEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.AllInstances.CheckForException">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.CheckForException()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.AllInstances.ErrorGet">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.CheckForException">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.CheckForException()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.ConstructorException">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.EveryNSamplesReadEventArgs(Exception exception)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.EveryNSamplesReadEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.ErrorGet">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesReadEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesReadEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.EveryNSamplesWrittenEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.#ctor(NationalInstruments.DAQmx.EveryNSamplesWrittenEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.AllInstances.CheckForException">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.CheckForException()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.AllInstances.ErrorGet">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.CheckForException">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.CheckForException()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.ConstructorException">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.EveryNSamplesWrittenEventArgs(Exception exception)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.EveryNSamplesWrittenEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.ErrorGet">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimEveryNSamplesWrittenEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of EveryNSamplesWrittenEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimExportSignals">
            <summary>Shim type of NationalInstruments.DAQmx.ExportSignals</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExportSignals.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExportSignals.#ctor(NationalInstruments.DAQmx.ExportSignals)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AIConvertClockOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AIConvertClockOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AIConvertClockOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AIConvertClockOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AIConvertClockPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AIConvertClockPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AIHoldCompleteEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AIHoldCompleteEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AIHoldCompleteEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AIHoldCompleteEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AIHoldCompleteEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AIHoldCompleteEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AIHoldCompleteEventPulsePolaritySetAIHoldCompleteEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_AIHoldCompleteEventPulsePolarity(AIHoldCompleteEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventDelayGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventDelaySetDouble">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventPulsePolaritySetAdvanceCompleteEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventPulsePolarity(AdvanceCompleteEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventPulseWidthGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceCompleteEventPulseWidthSetDouble">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AdvanceTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceTriggerPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceTriggerPulseWidthGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceTriggerPulseWidthSetDouble">
            <summary>Sets the Shim of ExportSignals.set_AdvanceTriggerPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceTriggerPulseWidthUnitsGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerPulseWidthUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AdvanceTriggerPulseWidthUnitsSetAdvanceTriggerPulseWidthUnits">
            <summary>Sets the Shim of ExportSignals.set_AdvanceTriggerPulseWidthUnits(AdvanceTriggerPulseWidthUnits value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AIConvertClockOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AIConvertClockOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AIConvertClockOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AIConvertClockOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AIConvertClockPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AIConvertClockPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AIHoldCompleteEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AIHoldCompleteEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AIHoldCompleteEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AIHoldCompleteEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AIHoldCompleteEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AIHoldCompleteEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AIHoldCompleteEventPulsePolaritySetAIHoldCompleteEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_AIHoldCompleteEventPulsePolarity(AIHoldCompleteEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventDelayGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventDelaySetDouble">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventPulsePolaritySetAdvanceCompleteEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventPulsePolarity(AdvanceCompleteEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventPulseWidthGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceCompleteEventPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceCompleteEventPulseWidthSetDouble">
            <summary>Sets the Shim of ExportSignals.set_AdvanceCompleteEventPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_AdvanceTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceTriggerPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceTriggerPulseWidthGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceTriggerPulseWidthSetDouble">
            <summary>Sets the Shim of ExportSignals.set_AdvanceTriggerPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceTriggerPulseWidthUnitsGet">
            <summary>Sets the Shim of ExportSignals.get_AdvanceTriggerPulseWidthUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.AdvanceTriggerPulseWidthUnitsSetAdvanceTriggerPulseWidthUnits">
            <summary>Sets the Shim of ExportSignals.set_AdvanceTriggerPulseWidthUnits(AdvanceTriggerPulseWidthUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ChangeDetectionEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ChangeDetectionEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ChangeDetectionEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ChangeDetectionEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ChangeDetectionEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_ChangeDetectionEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ChangeDetectionEventPulsePolaritySetChangeDetectionEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_ChangeDetectionEventPulsePolarity(ChangeDetectionEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventIdleStateGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventIdleState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventIdleStateSetCounterOutputEventIdleState">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventIdleState(CounterOutputEventIdleState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventOutputBehaviorGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventOutputBehaviorSetCounterOutputEventOutputBehavior">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventOutputBehavior(CounterOutputEventOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.CounterOutputEventPulsePolaritySetCounterOutputEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventPulsePolarity(CounterOutputEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.DataActiveEventLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_DataActiveEventLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.DataActiveEventLevelActiveLevelSetDataActiveEventLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_DataActiveEventLevelActiveLevel(DataActiveEventLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.DataActiveEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_DataActiveEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.DataActiveEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_DataActiveEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.DividedSampleClockTimebaseOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_DividedSampleClockTimebaseOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.DividedSampleClockTimebaseOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_DividedSampleClockTimebaseOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ExportHardwareSignalExportSignalString">
            <summary>Sets the Shim of ExportSignals.ExportHardwareSignal(ExportSignal signal, String outputTerminal)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of ExportSignals.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of ExportSignals.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventDelayGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventDelaySetDouble">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventInterlockedAssertOnStartGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventInterlockedAssertOnStart()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventInterlockedAssertOnStartSetBoolean">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventInterlockedAssertOnStart(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventInterlockedAssertedLevelGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventInterlockedAssertedLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventInterlockedAssertedLevelSetHandshakeEventInterlockedAssertedLevel">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventInterlockedAssertedLevel(HandshakeEventInterlockedAssertedLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventInterlockedDeassertDelayGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventInterlockedDeassertDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventInterlockedDeassertDelaySetDouble">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventInterlockedDeassertDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventOutputBehaviorGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventOutputBehaviorSetHandshakeEventOutputBehavior">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventOutputBehavior(HandshakeEventOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventPulsePolaritySetHandshakeEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventPulsePolarity(HandshakeEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventPulseWidthGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.HandshakeEventPulseWidthSetDouble">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.PauseTriggerLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_PauseTriggerLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.PauseTriggerLevelActiveLevelSetPauseTriggerLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_PauseTriggerLevelActiveLevel(PauseTriggerLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.PauseTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_PauseTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.PauseTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_PauseTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForStartEventLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForStartEventLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForStartEventLevelActiveLevelSetReadyForStartEventLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_ReadyForStartEventLevelActiveLevel(ReadyForStartEventLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForStartEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForStartEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForStartEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReadyForStartEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventDeassertConditionCustomThresholdGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventDeassertConditionCustomThreshold()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventDeassertConditionCustomThresholdSetInt64">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventDeassertConditionCustomThreshold(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventDeassertConditionGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventDeassertCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventDeassertConditionSetReadyForTransferEventDeassertCondition">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventDeassertCondition(ReadyForTransferEventDeassertCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventLevelActiveLevelSetReadyForTransferEventLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventLevelActiveLevel(ReadyForTransferEventLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReadyForTransferEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReferenceClock10MHzOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReferenceClock10MHzOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReferenceClock10MHzOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReferenceClock10MHzOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReferenceTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReferenceTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReferenceTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReferenceTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReferenceTriggerPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_ReferenceTriggerPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ReferenceTriggerPulsePolaritySetReferenceTriggerPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_ReferenceTriggerPulsePolarity(ReferenceTriggerPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockDelayOffsetGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockDelayOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockDelayOffsetSetDouble">
            <summary>Sets the Shim of ExportSignals.set_SampleClockDelayOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockOutputBehaviorGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockOutputBehaviorSetSampleClockOutputBehavior">
            <summary>Sets the Shim of ExportSignals.set_SampleClockOutputBehavior(SampleClockOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_SampleClockOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockPulsePolaritySetSampleClockPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_SampleClockPulsePolarity(SampleClockPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockTimebaseOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockTimebaseOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SampleClockTimebaseOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_SampleClockTimebaseOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.StartTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_StartTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.StartTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_StartTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.StartTriggerPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_StartTriggerPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.StartTriggerPulsePolaritySetStartTriggerPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_StartTriggerPulsePolarity(StartTriggerPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SynchronizationPulseEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_SynchronizationPulseEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.SynchronizationPulseEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_SynchronizationPulseEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.Timebase20MHzOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_Timebase20MHzOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.Timebase20MHzOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_Timebase20MHzOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.ToString01">
            <summary>Sets the Shim of ExportSignals.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.WatchdogExpiredEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_WatchdogExpiredEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.AllInstances.WatchdogExpiredEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_WatchdogExpiredEventOutputTerminal(String value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExportSignals.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExportSignals.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExportSignals.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ChangeDetectionEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ChangeDetectionEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ChangeDetectionEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ChangeDetectionEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ChangeDetectionEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_ChangeDetectionEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ChangeDetectionEventPulsePolaritySetChangeDetectionEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_ChangeDetectionEventPulsePolarity(ChangeDetectionEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ConstructorTask">
            <summary>Sets the Shim of ExportSignals.ExportSignals(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventIdleStateGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventIdleState()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventIdleStateSetCounterOutputEventIdleState">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventIdleState(CounterOutputEventIdleState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventOutputBehaviorGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventOutputBehaviorSetCounterOutputEventOutputBehavior">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventOutputBehavior(CounterOutputEventOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_CounterOutputEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.CounterOutputEventPulsePolaritySetCounterOutputEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_CounterOutputEventPulsePolarity(CounterOutputEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.DataActiveEventLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_DataActiveEventLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.DataActiveEventLevelActiveLevelSetDataActiveEventLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_DataActiveEventLevelActiveLevel(DataActiveEventLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.DataActiveEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_DataActiveEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.DataActiveEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_DataActiveEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.DividedSampleClockTimebaseOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_DividedSampleClockTimebaseOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.DividedSampleClockTimebaseOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_DividedSampleClockTimebaseOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ExportHardwareSignalExportSignalString">
            <summary>Sets the Shim of ExportSignals.ExportHardwareSignal(ExportSignal signal, String outputTerminal)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of ExportSignals.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of ExportSignals.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventDelayGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventDelaySetDouble">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventInterlockedAssertOnStartGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventInterlockedAssertOnStart()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventInterlockedAssertOnStartSetBoolean">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventInterlockedAssertOnStart(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventInterlockedAssertedLevelGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventInterlockedAssertedLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventInterlockedAssertedLevelSetHandshakeEventInterlockedAssertedLevel">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventInterlockedAssertedLevel(HandshakeEventInterlockedAssertedLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventInterlockedDeassertDelayGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventInterlockedDeassertDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventInterlockedDeassertDelaySetDouble">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventInterlockedDeassertDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventOutputBehaviorGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventOutputBehaviorSetHandshakeEventOutputBehavior">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventOutputBehavior(HandshakeEventOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventPulsePolaritySetHandshakeEventPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventPulsePolarity(HandshakeEventPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventPulseWidthGet">
            <summary>Sets the Shim of ExportSignals.get_HandshakeEventPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.HandshakeEventPulseWidthSetDouble">
            <summary>Sets the Shim of ExportSignals.set_HandshakeEventPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.PauseTriggerLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_PauseTriggerLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.PauseTriggerLevelActiveLevelSetPauseTriggerLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_PauseTriggerLevelActiveLevel(PauseTriggerLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.PauseTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_PauseTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.PauseTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_PauseTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForStartEventLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForStartEventLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForStartEventLevelActiveLevelSetReadyForStartEventLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_ReadyForStartEventLevelActiveLevel(ReadyForStartEventLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForStartEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForStartEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForStartEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReadyForStartEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventDeassertConditionCustomThresholdGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventDeassertConditionCustomThreshold()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventDeassertConditionCustomThresholdSetInt64">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventDeassertConditionCustomThreshold(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventDeassertConditionGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventDeassertCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventDeassertConditionSetReadyForTransferEventDeassertCondition">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventDeassertCondition(ReadyForTransferEventDeassertCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventLevelActiveLevelGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventLevelActiveLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventLevelActiveLevelSetReadyForTransferEventLevelActiveLevel">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventLevelActiveLevel(ReadyForTransferEventLevelActiveLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReadyForTransferEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReadyForTransferEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReadyForTransferEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReferenceClock10MHzOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReferenceClock10MHzOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReferenceClock10MHzOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReferenceClock10MHzOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReferenceTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_ReferenceTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReferenceTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_ReferenceTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReferenceTriggerPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_ReferenceTriggerPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ReferenceTriggerPulsePolaritySetReferenceTriggerPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_ReferenceTriggerPulsePolarity(ReferenceTriggerPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockDelayOffsetGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockDelayOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockDelayOffsetSetDouble">
            <summary>Sets the Shim of ExportSignals.set_SampleClockDelayOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockOutputBehaviorGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockOutputBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockOutputBehaviorSetSampleClockOutputBehavior">
            <summary>Sets the Shim of ExportSignals.set_SampleClockOutputBehavior(SampleClockOutputBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_SampleClockOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockPulsePolaritySetSampleClockPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_SampleClockPulsePolarity(SampleClockPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockTimebaseOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_SampleClockTimebaseOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SampleClockTimebaseOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_SampleClockTimebaseOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.StartTriggerOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_StartTriggerOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.StartTriggerOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_StartTriggerOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.StartTriggerPulsePolarityGet">
            <summary>Sets the Shim of ExportSignals.get_StartTriggerPulsePolarity()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.StartTriggerPulsePolaritySetStartTriggerPulsePolarity">
            <summary>Sets the Shim of ExportSignals.set_StartTriggerPulsePolarity(StartTriggerPulsePolarity value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SynchronizationPulseEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_SynchronizationPulseEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.SynchronizationPulseEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_SynchronizationPulseEventOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.Timebase20MHzOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_Timebase20MHzOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.Timebase20MHzOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_Timebase20MHzOutputTerminal(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.ToString">
            <summary>Sets the Shim of ExportSignals.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.WatchdogExpiredEventOutputTerminalGet">
            <summary>Sets the Shim of ExportSignals.get_WatchdogExpiredEventOutputTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExportSignals.WatchdogExpiredEventOutputTerminalSetString">
            <summary>Sets the Shim of ExportSignals.set_WatchdogExpiredEventOutputTerminal(String value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession">
            <summary>Shim type of NationalInstruments.DAQmx.ExternalCalibrationSession</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.#ctor(NationalInstruments.DAQmx.ExternalCalibrationSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1102DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1102(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1104DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1104(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1112DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1112(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1122DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1122(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1124Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1124(Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1125DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1125(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1126DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1126(Double referenceFrequency, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1141DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1141(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1142DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1142(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1143DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1143(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust11601StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11601(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust11603StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11603(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust11605StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11605(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust11613StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11613(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust11614StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11614(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust11634StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11634(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1502DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1502(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1503CurrentStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1503Current(String physicalChannels, Double measuredCurrent)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1503DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1503(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust15100Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust15100(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust15110StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust15110(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust15200StringDoublePowerCalibrationType">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust15200(String physicalChannels, Double referenceValue, PowerCalibrationType calibrationType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1520DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1520(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1521DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1521(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust153xDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust153x(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust1540DoubleDoubleInputCalibrationSource">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1540(Double referenceVoltage, Double measuredOutput, InputCalibrationSource calibrationSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4204StringDoubleBooleanDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4204(String physicalChannels, Double lowpassFilterCutoffFrequency, Boolean sampleAndHoldEnabled, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4220StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4220(String physicalChannels, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4224StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4224(String physicalChannels, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4225StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4225(String physicalChannels, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4300Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4300(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4302Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4302(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4303Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4303(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4304Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4304(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4305Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4305(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4309Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4309(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4310Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4310(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4322StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4322(String physicalChannels, Double referenceValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4339Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4339(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust433xDoubleDoubleShuntElementLocation">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust433x(Double referenceVoltage, Double referenceExcitation, ShuntElementLocation shuntLocation)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4353StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4353(String physicalChannels, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust4357StringDoubleArray">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4357(String physicalChannels, Double[] referenceValues)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9201StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9201(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9202StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9202(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9203GainStringDoubleDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9203Gain(String physicalChannels, Double rangeMinimum, Double rangeMaximum, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9203OffsetStringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9203Offset(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9205Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9205(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9206Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9206(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9207GainStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9207Gain(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9207OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9207Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9208GainStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9208Gain(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9208OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9208Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9209GainStringCalibrationInputTerminalConfiguration9209Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9209Gain(String physicalChannels, CalibrationInputTerminalConfiguration9209 terminalConfiguration, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9209OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9209Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9210StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9210(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9211StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9211(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9212StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9212(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9213StringDoubleDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9213(String physicalChannels, Double rangeMinimum, Double rangeMaximum, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9214StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9214(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9215StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9215(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9216StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9216(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9217StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9217(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9218StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9218(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9219StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9219(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9220StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9220(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9221StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9221(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9222StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9222(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9223StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9223(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9224StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9224(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9225StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9225(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9226StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9226(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9227StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9227(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9228StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9228(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9229StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9229(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9230StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9230(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9231StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9231(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9232StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9232(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9234GainStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9234Gain(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9234OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9234Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9238StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9238(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9239StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9239(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9242StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9242(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9244StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9244(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9246StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9246(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9247StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9247(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9250StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9250(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9251StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9251(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9252StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9252(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9253StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9253(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9260StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9260(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9262StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9262(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9263StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9263(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9264StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9264(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9265StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9265(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9266StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9266(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9269StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9269(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Adjust9775StringDoubleCalibrationCoupling9775">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9775(String physicalChannels, Double value, CalibrationCoupling9775 coupling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustAOSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustAOSeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsa4463StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsa4463(String physicalChannels, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsa4610StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsa4610(String physicalChannels, Double gain, Double offset)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsaAIAICouplingDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAI(AICoupling coupling, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsaAIDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAI(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsaAIDoubleBoolean">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAI(Double referenceVoltage, Boolean inputsShorted)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsaAOInt64DoubleDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAO(Int64 channel, Double requestedLowVoltage, Double actualLowVoltage, Double requestedHighVoltage, Double actualHighVoltage, Double gainSetting)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsaAOTimebaseDoubleBooleanOut">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAOTimebase(Double measuredFrequency, Boolean&amp; calibrationComplete)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustDsaTimebaseDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaTimebase(Double referenceFrequency)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustESeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustESeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustMSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustMSeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustSCBaseboardDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustSCBaseboard(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustSSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustSSeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustTioTimebaseDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustTioTimebase(Double referenceFrequency)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AdjustXSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustXSeries(Double referenceVoltage)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1102DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1102(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1104DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1104(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1112DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1112(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1122DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1122(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1124Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1124(Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1125DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1125(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1126DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1126(Double referenceFrequency, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1141DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1141(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1142DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1142(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1143DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1143(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust11601StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11601(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust11603StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11603(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust11605StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11605(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust11613StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11613(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust11614StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11614(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust11634StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11634(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust11637DoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust11637(Double value, Double&amp; actualReading, Double&amp; asFoundGainError, Double&amp; asFoundOffsetError)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1502DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1502(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1503CurrentStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1503Current(String physicalChannels, Double measuredCurrent)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1503DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1503(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust15100Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust15100(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust15110StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust15110(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust15200StringDoublePowerCalibrationType">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust15200(String physicalChannels, Double referenceValue, PowerCalibrationType calibrationType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1520DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1520(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1521DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1521(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust153xDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust153x(Double referenceVoltage, Double measuredOutput)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust1540DoubleDoubleInputCalibrationSource">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust1540(Double referenceVoltage, Double measuredOutput, InputCalibrationSource calibrationSource)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4204StringDoubleBooleanDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4204(String physicalChannels, Double lowpassFilterCutoffFrequency, Boolean sampleAndHoldEnabled, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4220StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4220(String physicalChannels, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4224StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4224(String physicalChannels, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4225StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4225(String physicalChannels, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4300Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4300(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4302Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4302(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4303Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4303(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4304Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4304(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4305Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4305(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4309Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4309(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4310Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4310(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4322StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4322(String physicalChannels, Double referenceValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4339Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4339(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust433xDoubleDoubleShuntElementLocation">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust433x(Double referenceVoltage, Double referenceExcitation, ShuntElementLocation shuntLocation)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4353StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4353(String physicalChannels, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust4357StringDoubleArray">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust4357(String physicalChannels, Double[] referenceValues)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9201StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9201(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9202StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9202(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9203GainStringDoubleDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9203Gain(String physicalChannels, Double rangeMinimum, Double rangeMaximum, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9203OffsetStringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9203Offset(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9205Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9205(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9206Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9206(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9207GainStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9207Gain(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9207OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9207Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9208GainStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9208Gain(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9208OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9208Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9209GainStringCalibrationInputTerminalConfiguration9209Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9209Gain(String physicalChannels, CalibrationInputTerminalConfiguration9209 terminalConfiguration, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9209OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9209Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9210StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9210(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9211StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9211(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9212StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9212(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9213StringDoubleDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9213(String physicalChannels, Double rangeMinimum, Double rangeMaximum, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9214StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9214(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9215StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9215(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9216StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9216(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9217StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9217(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9218StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9218(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9219StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9219(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9220StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9220(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9221StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9221(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9222StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9222(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9223StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9223(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9224StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9224(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9225StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9225(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9226StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9226(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9227StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9227(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9228StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9228(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9229StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9229(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9230StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9230(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9231StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9231(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9232StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9232(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9234GainStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9234Gain(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9234OffsetString">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9234Offset(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9238StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9238(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9239StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9239(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9242StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9242(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9244StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9244(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9246StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9246(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9247StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9247(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9250StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9250(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9251StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9251(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9252StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9252(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9253StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9253(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9260StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9260(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9262StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9262(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9263StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9263(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9264StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9264(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9265StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9265(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9266StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9266(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9269StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9269(String physicalChannels, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Adjust9775StringDoubleCalibrationCoupling9775">
            <summary>Sets the Shim of ExternalCalibrationSession.Adjust9775(String physicalChannels, Double value, CalibrationCoupling9775 coupling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustAOSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustAOSeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsa4463StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsa4463(String physicalChannels, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsa4610StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsa4610(String physicalChannels, Double gain, Double offset)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsaAIAICouplingDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAI(AICoupling coupling, Double gain, Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsaAIDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAI(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsaAIDoubleBoolean">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAI(Double referenceVoltage, Boolean inputsShorted)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsaAOInt64DoubleDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAO(Int64 channel, Double requestedLowVoltage, Double actualLowVoltage, Double requestedHighVoltage, Double actualHighVoltage, Double gainSetting)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsaAOTimebaseDoubleBooleanOut">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaAOTimebase(Double measuredFrequency, Boolean&amp; calibrationComplete)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustDsaTimebaseDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustDsaTimebase(Double referenceFrequency)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustESeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustESeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustMSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustMSeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustSCBaseboardDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustSCBaseboard(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustSSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustSSeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustTioTimebaseDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustTioTimebase(Double referenceFrequency)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.AdjustXSeriesDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.AdjustXSeries(Double referenceVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.CSeriesSetCalibrationTemperatureDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.CSeriesSetCalibrationTemperature(Double temperature)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.ConnectSCExpressCalibrationAccessoryChannelsStringString">
            <summary>Sets the Shim of ExternalCalibrationSession.ConnectSCExpressCalibrationAccessoryChannels(String physicalChannels, String connection)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.DisconnectSCExpressCalibrationAccessoryChannels">
            <summary>Sets the Shim of ExternalCalibrationSession.DisconnectSCExpressCalibrationAccessoryChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Dispose">
            <summary>Sets the Shim of ExternalCalibrationSession.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of ExternalCalibrationSession.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.DsaSetCalibrationTemperatureDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.DsaSetCalibrationTemperature(Double temperature)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.FieldDAQSetCalibrationTemperatureDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.FieldDAQSetCalibrationTemperature(Double temperature)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get11601AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11601AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get11603AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11603AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get11605AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11605AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get11613AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11613AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get11614AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11614AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get11634AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11634AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get15110AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get15110AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get15200AdjustmentPointsPowerCalibrationType">
            <summary>Sets the Shim of ExternalCalibrationSession.Get15200AdjustmentPoints(PowerCalibrationType calibrationType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get4302AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4302AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get4303AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4303AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get4304AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4304AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get4305AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4305AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get4322AdjustmentPointsAOOutputType">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4322AdjustmentPoints(AOOutputType outputType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get4339AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4339AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9201AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9201AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9202AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9202AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9203AdjustmentPointsDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9203AdjustmentPoints(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9207AdjustmentPointsString">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9207AdjustmentPoints(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9208AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9208AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9209AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9209AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9212AdjustmentPointsString">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9212AdjustmentPoints(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9213AdjustmentPointsDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9213AdjustmentPoints(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9214AdjustmentPointsString">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9214AdjustmentPoints(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9215AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9215AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9216AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9216AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9217AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9217AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9218AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9218AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9219AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9219AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9220AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9220AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9221AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9221AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9222AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9222AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9223AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9223AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9224AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9224AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9225AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9225AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9226AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9226AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9227AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9227AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9228AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9228AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9229AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9229AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9230AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9230AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9231AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9231AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9232AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9232AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9234AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9234AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9238AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9238AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9239AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9239AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9242AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9242AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9244AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9244AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9246AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9246AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9247AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9247AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9250AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9250AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9251AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9251AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9252AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9252AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9253AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9253AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9260AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9260AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9262AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9262AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9263AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9263AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9264AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9264AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9265AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9265AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9266AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9266AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9269AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9269AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Get9775AdjustmentPointsCalibrationCoupling9775">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9775AdjustmentPoints(CalibrationCoupling9775 coupling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.GetDsa4463AdjustmentPointsCalibrationInputTerminalConfiguration4463Double">
            <summary>Sets the Shim of ExternalCalibrationSession.GetDsa4463AdjustmentPoints(CalibrationInputTerminalConfiguration4463 terminalConfiguration, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.SaveChangesAndDispose">
            <summary>Sets the Shim of ExternalCalibrationSession.SaveChangesAndDispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.SetSCExpressCalibrationAccessoryBridgeOutputDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.SetSCExpressCalibrationAccessoryBridgeOutput(Double voltsPerVolt)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1102StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1102(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1104String">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1104(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1112String">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1112(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1122StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1122(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1124StringScxi1124RangeInt64">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1124(String physicalChannels, Scxi1124Range range, Int64 dacValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1124StringScxi1124RangeUInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1124(String physicalChannels, Scxi1124Range range, UInt32 dacValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1125StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1125(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1126StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1126(String physicalChannels, Double upperFrequencyLimit)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1141StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1141(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1142StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1142(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1143StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1143(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup11605DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup11605(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup11634DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup11634(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup11637StringAIBridgeConfiguration11637Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup11637(String physicalChannels, AIBridgeConfiguration11637 bridgeConfiguration, Double excitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1502StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1502(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1503StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1503(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup15110StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup15110(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup15200StringDoublePowerCalibrationType">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup15200(String physicalChannels, Double adjustmentPoint, PowerCalibrationType calibrationType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1520StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1520(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1521String">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1521(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup153xStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup153x(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup1540StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1540(String physicalChannels, Double excitationRmsValue, Double excitationFrequency)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup4302StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4302(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup4303StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4303(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup4304StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4304(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup4305StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4305(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup4322StringAOOutputTypeDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4322(String physicalChannels, AOOutputType outputType, Double outputValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup4339StringDoubleDoubleDoubleCalibrationMode4339">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4339(String physicalChannels, Double rangeMinimum, Double rangeMaximum, Double excitationVoltage, CalibrationMode4339 calibrationMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup433xStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup433x(String physicalChannels, Double excitationVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9218StringDoubleDoubleAIMeasurementType">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9218(String physicalChannels, Double rangeMinimum, Double rangeMaximum, AIMeasurementType measurementType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9219StringDoubleDoubleAIMeasurementTypeAIBridgeConfiguration">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9219(String physicalChannels, Double rangeMinimum, Double rangeMaximum, AIMeasurementType measurementType, AIBridgeConfiguration bridgeConfiguration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9242StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9242(String physicalChannels, Double adjustmentPoint)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9244StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9244(String physicalChannels, Double adjustmentPoint)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9260StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9260(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9262StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9262(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9263StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9263(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9264StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9264(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9265StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9265(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9266StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9266(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.Setup9269StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9269(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.SetupDsa4463StringCalibrationInputTerminalConfiguration4463DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.SetupDsa4463(String physicalChannels, CalibrationInputTerminalConfiguration4463 terminalConfiguration, Double gain, Double outputVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.SetupDsa4480StringCalibrationMode4480">
            <summary>Sets the Shim of ExternalCalibrationSession.SetupDsa4480(String physicalChannels, CalibrationMode4480 calibrationMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.SetupDsaAOTimebase">
            <summary>Sets the Shim of ExternalCalibrationSession.SetupDsaAOTimebase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of ExternalCalibrationSession.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances.ToString01">
            <summary>Sets the Shim of ExternalCalibrationSession.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances._ExternalCalibrationSession">
            <summary>Sets the Shim of ExternalCalibrationSession.!ExternalCalibrationSession()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.AllInstances._ExternalCalibrationSession01">
            <summary>Sets the Shim of ExternalCalibrationSession.~ExternalCalibrationSession()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.CSeriesSetCalibrationTemperatureDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.CSeriesSetCalibrationTemperature(Double temperature)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.ConnectSCExpressCalibrationAccessoryChannelsStringString">
            <summary>Sets the Shim of ExternalCalibrationSession.ConnectSCExpressCalibrationAccessoryChannels(String physicalChannels, String connection)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.ConstructorUInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.ExternalCalibrationSession(UInt32 h)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.DisconnectSCExpressCalibrationAccessoryChannels">
            <summary>Sets the Shim of ExternalCalibrationSession.DisconnectSCExpressCalibrationAccessoryChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Dispose">
            <summary>Sets the Shim of ExternalCalibrationSession.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.DisposeBoolean">
            <summary>Sets the Shim of ExternalCalibrationSession.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.DsaSetCalibrationTemperatureDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.DsaSetCalibrationTemperature(Double temperature)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.FieldDAQSetCalibrationTemperatureDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.FieldDAQSetCalibrationTemperature(Double temperature)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get11601AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11601AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get11603AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11603AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get11605AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11605AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get11613AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11613AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get11614AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11614AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get11634AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get11634AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get15110AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get15110AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get15200AdjustmentPointsPowerCalibrationType">
            <summary>Sets the Shim of ExternalCalibrationSession.Get15200AdjustmentPoints(PowerCalibrationType calibrationType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get4302AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4302AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get4303AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4303AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get4304AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4304AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get4305AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4305AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get4322AdjustmentPointsAOOutputType">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4322AdjustmentPoints(AOOutputType outputType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get4339AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get4339AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9201AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9201AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9202AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9202AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9203AdjustmentPointsDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9203AdjustmentPoints(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9207AdjustmentPointsString">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9207AdjustmentPoints(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9208AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9208AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9209AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9209AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9212AdjustmentPointsString">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9212AdjustmentPoints(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9213AdjustmentPointsDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9213AdjustmentPoints(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9214AdjustmentPointsString">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9214AdjustmentPoints(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9215AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9215AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9216AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9216AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9217AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9217AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9218AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9218AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9219AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9219AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9220AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9220AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9221AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9221AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9222AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9222AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9223AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9223AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9224AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9224AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9225AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9225AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9226AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9226AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9227AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9227AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9228AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9228AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9229AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9229AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9230AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9230AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9231AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9231AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9232AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9232AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9234AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9234AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9238AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9238AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9239AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9239AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9242AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9242AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9244AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9244AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9246AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9246AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9247AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9247AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9250AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9250AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9251AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9251AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9252AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9252AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9253AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9253AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9260AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9260AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9262AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9262AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9263AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9263AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9264AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9264AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9265AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9265AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9266AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9266AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9269AdjustmentPoints">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9269AdjustmentPoints()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Get9775AdjustmentPointsCalibrationCoupling9775">
            <summary>Sets the Shim of ExternalCalibrationSession.Get9775AdjustmentPoints(CalibrationCoupling9775 coupling)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.GetDsa4463AdjustmentPointsCalibrationInputTerminalConfiguration4463Double">
            <summary>Sets the Shim of ExternalCalibrationSession.GetDsa4463AdjustmentPoints(CalibrationInputTerminalConfiguration4463 terminalConfiguration, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.SaveChangesAndDispose">
            <summary>Sets the Shim of ExternalCalibrationSession.SaveChangesAndDispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.SetSCExpressCalibrationAccessoryBridgeOutputDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.SetSCExpressCalibrationAccessoryBridgeOutput(Double voltsPerVolt)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1102StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1102(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1104String">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1104(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1112String">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1112(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1122StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1122(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1124StringScxi1124RangeInt64">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1124(String physicalChannels, Scxi1124Range range, Int64 dacValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1124StringScxi1124RangeUInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1124(String physicalChannels, Scxi1124Range range, UInt32 dacValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1125StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1125(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1126StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1126(String physicalChannels, Double upperFrequencyLimit)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1141StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1141(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1142StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1142(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1143StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1143(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup11605DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup11605(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup11634DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup11634(Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup11637StringAIBridgeConfiguration11637Double">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup11637(String physicalChannels, AIBridgeConfiguration11637 bridgeConfiguration, Double excitationValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1502StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1502(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1503StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1503(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup15110StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup15110(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup15200StringDoublePowerCalibrationType">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup15200(String physicalChannels, Double adjustmentPoint, PowerCalibrationType calibrationType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1520StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1520(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1521String">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1521(String physicalChannels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup153xStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup153x(String physicalChannels, Double gain)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup1540StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup1540(String physicalChannels, Double excitationRmsValue, Double excitationFrequency)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup4302StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4302(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup4303StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4303(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup4304StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4304(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup4305StringDoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4305(String physicalChannels, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup4322StringAOOutputTypeDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4322(String physicalChannels, AOOutputType outputType, Double outputValue)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup4339StringDoubleDoubleDoubleCalibrationMode4339">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup4339(String physicalChannels, Double rangeMinimum, Double rangeMaximum, Double excitationVoltage, CalibrationMode4339 calibrationMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup433xStringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup433x(String physicalChannels, Double excitationVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9218StringDoubleDoubleAIMeasurementType">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9218(String physicalChannels, Double rangeMinimum, Double rangeMaximum, AIMeasurementType measurementType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9219StringDoubleDoubleAIMeasurementTypeAIBridgeConfiguration">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9219(String physicalChannels, Double rangeMinimum, Double rangeMaximum, AIMeasurementType measurementType, AIBridgeConfiguration bridgeConfiguration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9242StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9242(String physicalChannels, Double adjustmentPoint)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9244StringDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9244(String physicalChannels, Double adjustmentPoint)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9260StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9260(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9262StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9262(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9263StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9263(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9264StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9264(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9265StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9265(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9266StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9266(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.Setup9269StringInt32">
            <summary>Sets the Shim of ExternalCalibrationSession.Setup9269(String physicalChannels, Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.SetupDsa4463StringCalibrationInputTerminalConfiguration4463DoubleDouble">
            <summary>Sets the Shim of ExternalCalibrationSession.SetupDsa4463(String physicalChannels, CalibrationInputTerminalConfiguration4463 terminalConfiguration, Double gain, Double outputVoltage)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.SetupDsa4480StringCalibrationMode4480">
            <summary>Sets the Shim of ExternalCalibrationSession.SetupDsa4480(String physicalChannels, CalibrationMode4480 calibrationMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.SetupDsaAOTimebase">
            <summary>Sets the Shim of ExternalCalibrationSession.SetupDsaAOTimebase()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.ThrowIfDisposed">
            <summary>Sets the Shim of ExternalCalibrationSession.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession.ToString">
            <summary>Sets the Shim of ExternalCalibrationSession.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession._ExternalCalibrationSession">
            <summary>Sets the Shim of ExternalCalibrationSession.!ExternalCalibrationSession()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimExternalCalibrationSession._ExternalCalibrationSession01">
            <summary>Sets the Shim of ExternalCalibrationSession.~ExternalCalibrationSession()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.HandshakeTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.#ctor(NationalInstruments.DAQmx.HandshakeTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.ConfigureInterlockedTriggerStringInterlockedHandshakeTriggerAssertedLevel">
            <summary>Sets the Shim of HandshakeTrigger.ConfigureInterlockedTrigger(String source, InterlockedHandshakeTriggerAssertedLevel assertedLevel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.ConfigureNone">
            <summary>Sets the Shim of HandshakeTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of HandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of HandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of HandshakeTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.InterlockedGet">
            <summary>Sets the Shim of HandshakeTrigger.get_Interlocked()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of HandshakeTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.TypeGet">
            <summary>Sets the Shim of HandshakeTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.AllInstances.TypeSetHandshakeTriggerType">
            <summary>Sets the Shim of HandshakeTrigger.set_Type(HandshakeTriggerType value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.ConfigureInterlockedTriggerStringInterlockedHandshakeTriggerAssertedLevel">
            <summary>Sets the Shim of HandshakeTrigger.ConfigureInterlockedTrigger(String source, InterlockedHandshakeTriggerAssertedLevel assertedLevel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.ConfigureNone">
            <summary>Sets the Shim of HandshakeTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.ConstructorTask">
            <summary>Sets the Shim of HandshakeTrigger.HandshakeTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of HandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of HandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.InitializeSubobjects">
            <summary>Sets the Shim of HandshakeTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.InterlockedGet">
            <summary>Sets the Shim of HandshakeTrigger.get_Interlocked()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.ToString">
            <summary>Sets the Shim of HandshakeTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.TypeGet">
            <summary>Sets the Shim of HandshakeTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimHandshakeTrigger.TypeSetHandshakeTriggerType">
            <summary>Sets the Shim of HandshakeTrigger.set_Type(HandshakeTriggerType value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.InterlockedHandshakeTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.#ctor(NationalInstruments.DAQmx.InterlockedHandshakeTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances.AssertedLevelGet">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.get_AssertedLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances.AssertedLevelSetInterlockedHandshakeTriggerAssertedLevel">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.set_AssertedLevel(InterlockedHandshakeTriggerAssertedLevel value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances.SourceGet">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances.SourceSetString">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AssertedLevelGet">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.get_AssertedLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.AssertedLevelSetInterlockedHandshakeTriggerAssertedLevel">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.set_AssertedLevel(InterlockedHandshakeTriggerAssertedLevel value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.ConstructorTask">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.InterlockedHandshakeTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.SourceGet">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.get_Source()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.SourceSetString">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimInterlockedHandshakeTrigger.ToString">
            <summary>Sets the Shim of InterlockedHandshakeTrigger.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimLinearScale">
            <summary>Shim type of NationalInstruments.DAQmx.LinearScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimLinearScale.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimLinearScale.#ctor(NationalInstruments.DAQmx.LinearScale)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimLinearScale.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.AllInstances.SlopeGet">
            <summary>Sets the Shim of LinearScale.get_Slope()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.AllInstances.SlopeSetDouble">
            <summary>Sets the Shim of LinearScale.set_Slope(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.AllInstances.YInterceptGet">
            <summary>Sets the Shim of LinearScale.get_YIntercept()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.AllInstances.YInterceptSetDouble">
            <summary>Sets the Shim of LinearScale.set_YIntercept(Double value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimLinearScale.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimLinearScale.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimLinearScale.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.ConstructorStringDoubleDouble">
            <summary>Sets the Shim of LinearScale.LinearScale(String name, Double slope, Double yIntercept)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.SlopeGet">
            <summary>Sets the Shim of LinearScale.get_Slope()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.SlopeSetDouble">
            <summary>Sets the Shim of LinearScale.set_Slope(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.YInterceptGet">
            <summary>Sets the Shim of LinearScale.get_YIntercept()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimLinearScale.YInterceptSetDouble">
            <summary>Sets the Shim of LinearScale.set_YIntercept(Double value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.PauseTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.#ctor(NationalInstruments.DAQmx.PauseTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.AnalogLevelGet">
            <summary>Sets the Shim of PauseTrigger.get_AnalogLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.AnalogWindowGet">
            <summary>Sets the Shim of PauseTrigger.get_AnalogWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.ConfigureAnalogLevelTriggerStringAnalogLevelPauseTriggerConditionDouble">
            <summary>Sets the Shim of PauseTrigger.ConfigureAnalogLevelTrigger(String source, AnalogLevelPauseTriggerCondition condition, Double level)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.ConfigureAnalogWindowTriggerStringAnalogWindowPauseTriggerConditionDoubleDouble">
            <summary>Sets the Shim of PauseTrigger.ConfigureAnalogWindowTrigger(String source, AnalogWindowPauseTriggerCondition condition, Double top, Double bottom)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.ConfigureDigitalLevelTriggerStringDigitalLevelPauseTriggerCondition">
            <summary>Sets the Shim of PauseTrigger.ConfigureDigitalLevelTrigger(String source, DigitalLevelPauseTriggerCondition condition)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.ConfigureDigitalPatternTriggerStringStringDigitalPatternPauseTriggerCondition">
            <summary>Sets the Shim of PauseTrigger.ConfigureDigitalPatternTrigger(String source, String pattern, DigitalPatternPauseTriggerCondition condition)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.ConfigureNone">
            <summary>Sets the Shim of PauseTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.DigitalLevelGet">
            <summary>Sets the Shim of PauseTrigger.get_DigitalLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.DigitalPatternGet">
            <summary>Sets the Shim of PauseTrigger.get_DigitalPattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of PauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of PauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of PauseTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.TerminalGet">
            <summary>Sets the Shim of PauseTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of PauseTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.TypeGet">
            <summary>Sets the Shim of PauseTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AllInstances.TypeSetPauseTriggerType">
            <summary>Sets the Shim of PauseTrigger.set_Type(PauseTriggerType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AnalogLevelGet">
            <summary>Sets the Shim of PauseTrigger.get_AnalogLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.AnalogWindowGet">
            <summary>Sets the Shim of PauseTrigger.get_AnalogWindow()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.ConfigureAnalogLevelTriggerStringAnalogLevelPauseTriggerConditionDouble">
            <summary>Sets the Shim of PauseTrigger.ConfigureAnalogLevelTrigger(String source, AnalogLevelPauseTriggerCondition condition, Double level)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.ConfigureAnalogWindowTriggerStringAnalogWindowPauseTriggerConditionDoubleDouble">
            <summary>Sets the Shim of PauseTrigger.ConfigureAnalogWindowTrigger(String source, AnalogWindowPauseTriggerCondition condition, Double top, Double bottom)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.ConfigureDigitalLevelTriggerStringDigitalLevelPauseTriggerCondition">
            <summary>Sets the Shim of PauseTrigger.ConfigureDigitalLevelTrigger(String source, DigitalLevelPauseTriggerCondition condition)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.ConfigureDigitalPatternTriggerStringStringDigitalPatternPauseTriggerCondition">
            <summary>Sets the Shim of PauseTrigger.ConfigureDigitalPatternTrigger(String source, String pattern, DigitalPatternPauseTriggerCondition condition)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.ConfigureNone">
            <summary>Sets the Shim of PauseTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.ConstructorTask">
            <summary>Sets the Shim of PauseTrigger.PauseTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.DigitalLevelGet">
            <summary>Sets the Shim of PauseTrigger.get_DigitalLevel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.DigitalPatternGet">
            <summary>Sets the Shim of PauseTrigger.get_DigitalPattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of PauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of PauseTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.InitializeSubobjects">
            <summary>Sets the Shim of PauseTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.TerminalGet">
            <summary>Sets the Shim of PauseTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.ToString">
            <summary>Sets the Shim of PauseTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.TypeGet">
            <summary>Sets the Shim of PauseTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPauseTrigger.TypeSetPauseTriggerType">
            <summary>Sets the Shim of PauseTrigger.set_Type(PauseTriggerType value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel">
            <summary>Shim type of NationalInstruments.DAQmx.PhysicalChannel</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.#ctor(NationalInstruments.DAQmx.PhysicalChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AIInputSourcesGet">
            <summary>Sets the Shim of PhysicalChannel.get_AIInputSources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AISupportedMeasurementTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_AISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AITerminalConfigurationsGet">
            <summary>Sets the Shim of PhysicalChannel.get_AITerminalConfigurations()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOManualControlAmplitudeGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlAmplitude()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOManualControlEnableGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOManualControlEnableSetBoolean">
            <summary>Sets the Shim of PhysicalChannel.set_AOManualControlEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOManualControlFrequencyGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOManualControlShortDetectedGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlShortDetected()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOPowerAmplifierChannelEnableGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierChannelEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOPowerAmplifierChannelEnableSetBoolean">
            <summary>Sets the Shim of PhysicalChannel.set_AOPowerAmplifierChannelEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOPowerAmplifierGainGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierGain()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOPowerAmplifierOffsetGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOPowerAmplifierOvercurrentGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierOvercurrent()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOPowerAmplifierScalingCoefficientsGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOSupportedOutputTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AOTerminalConfigurationsGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOTerminalConfigurations()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AIInputSourcesGet">
            <summary>Sets the Shim of PhysicalChannel.get_AIInputSources()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AISupportedMeasurementTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_AISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AITerminalConfigurationsGet">
            <summary>Sets the Shim of PhysicalChannel.get_AITerminalConfigurations()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOManualControlAmplitudeGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlAmplitude()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOManualControlEnableGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOManualControlEnableSetBoolean">
            <summary>Sets the Shim of PhysicalChannel.set_AOManualControlEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOManualControlFrequencyGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlFrequency()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOManualControlShortDetectedGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOManualControlShortDetected()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOPowerAmplifierChannelEnableGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierChannelEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOPowerAmplifierChannelEnableSetBoolean">
            <summary>Sets the Shim of PhysicalChannel.set_AOPowerAmplifierChannelEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOPowerAmplifierGainGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierGain()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOPowerAmplifierOffsetGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOPowerAmplifierOvercurrentGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierOvercurrent()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOPowerAmplifierScalingCoefficientsGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOPowerAmplifierScalingCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOSupportedOutputTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.AOTerminalConfigurationsGet">
            <summary>Sets the Shim of PhysicalChannel.get_AOTerminalConfigurations()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.CISupportedMeasurementTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_CISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.COSupportedOutputTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_COSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.ClearTeds">
            <summary>Sets the Shim of PhysicalChannel.ClearTeds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.ConfigureTeds">
            <summary>Sets the Shim of PhysicalChannel.ConfigureTeds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.ConfigureTedsString">
            <summary>Sets the Shim of PhysicalChannel.ConfigureTeds(String virtualTedsFile)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DIChangeDetectionSupportedGet">
            <summary>Sets the Shim of PhysicalChannel.get_DIChangeDetectionSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DIPortWidthGet">
            <summary>Sets the Shim of PhysicalChannel.get_DIPortWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DISampleClockSupportedGet">
            <summary>Sets the Shim of PhysicalChannel.get_DISampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DISampleModesGet">
            <summary>Sets the Shim of PhysicalChannel.get_DISampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DOPortWidthGet">
            <summary>Sets the Shim of PhysicalChannel.get_DOPortWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DOSampleClockSupportedGet">
            <summary>Sets the Shim of PhysicalChannel.get_DOSampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DOSampleModesGet">
            <summary>Sets the Shim of PhysicalChannel.get_DOSampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.Dispose">
            <summary>Sets the Shim of PhysicalChannel.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of PhysicalChannel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.PhysicalChannelNameGet">
            <summary>Sets the Shim of PhysicalChannel.get_PhysicalChannelName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.PowerControlEnableGet">
            <summary>Sets the Shim of PhysicalChannel.get_PowerControlEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.PowerControlEnableSetBoolean">
            <summary>Sets the Shim of PhysicalChannel.set_PowerControlEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.PowerControlTypeGet">
            <summary>Sets the Shim of PhysicalChannel.get_PowerControlType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.PowerControlTypeSetPhysicalChannelAIPowerControlType">
            <summary>Sets the Shim of PhysicalChannel.set_PowerControlType(PhysicalChannelAIPowerControlType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.PowerControlVoltageGet">
            <summary>Sets the Shim of PhysicalChannel.get_PowerControlVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.PowerControlVoltageSetDouble">
            <summary>Sets the Shim of PhysicalChannel.set_PowerControlVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.SensorPowerOpenChannelGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerOpenChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.SensorPowerOvercurrentGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerOvercurrent()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.SensorPowerTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.SensorPowerVoltageRangeValuesGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerVoltageRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.TedsBitStreamGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsBitStream()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.TedsManufacturerIDGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsManufacturerID()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.TedsModelNumberGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsModelNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.TedsSerialNumberGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsSerialNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.TedsTemplateIDsGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsTemplateIDs()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.TedsVersionLetterGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsVersionLetter()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.TedsVersionNumberGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsVersionNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of PhysicalChannel.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.ToString01">
            <summary>Sets the Shim of PhysicalChannel.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.WriteTedsDataByteArrayBasicTedsDataOption">
            <summary>Sets the Shim of PhysicalChannel.WriteTedsData(Byte[] bitStream, BasicTedsDataOption basicTedsDataOption)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances.WriteTedsDataStringBasicTedsDataOption">
            <summary>Sets the Shim of PhysicalChannel.WriteTedsData(String virtualTedsFile, BasicTedsDataOption basicTedsDataOption)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances._PhysicalChannel">
            <summary>Sets the Shim of PhysicalChannel.!PhysicalChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.AllInstances._PhysicalChannel01">
            <summary>Sets the Shim of PhysicalChannel.~PhysicalChannel()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.CISupportedMeasurementTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_CISupportedMeasurementTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.COSupportedOutputTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_COSupportedOutputTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.ClearTeds">
            <summary>Sets the Shim of PhysicalChannel.ClearTeds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.ConfigureTeds">
            <summary>Sets the Shim of PhysicalChannel.ConfigureTeds()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.ConfigureTedsString">
            <summary>Sets the Shim of PhysicalChannel.ConfigureTeds(String virtualTedsFile)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DIChangeDetectionSupportedGet">
            <summary>Sets the Shim of PhysicalChannel.get_DIChangeDetectionSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DIPortWidthGet">
            <summary>Sets the Shim of PhysicalChannel.get_DIPortWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DISampleClockSupportedGet">
            <summary>Sets the Shim of PhysicalChannel.get_DISampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DISampleModesGet">
            <summary>Sets the Shim of PhysicalChannel.get_DISampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DOPortWidthGet">
            <summary>Sets the Shim of PhysicalChannel.get_DOPortWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DOSampleClockSupportedGet">
            <summary>Sets the Shim of PhysicalChannel.get_DOSampleClockSupported()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DOSampleModesGet">
            <summary>Sets the Shim of PhysicalChannel.get_DOSampleModes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.Dispose">
            <summary>Sets the Shim of PhysicalChannel.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.DisposeBoolean">
            <summary>Sets the Shim of PhysicalChannel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.PhysicalChannelNameGet">
            <summary>Sets the Shim of PhysicalChannel.get_PhysicalChannelName()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.PowerControlEnableGet">
            <summary>Sets the Shim of PhysicalChannel.get_PowerControlEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.PowerControlEnableSetBoolean">
            <summary>Sets the Shim of PhysicalChannel.set_PowerControlEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.PowerControlTypeGet">
            <summary>Sets the Shim of PhysicalChannel.get_PowerControlType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.PowerControlTypeSetPhysicalChannelAIPowerControlType">
            <summary>Sets the Shim of PhysicalChannel.set_PowerControlType(PhysicalChannelAIPowerControlType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.PowerControlVoltageGet">
            <summary>Sets the Shim of PhysicalChannel.get_PowerControlVoltage()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.PowerControlVoltageSetDouble">
            <summary>Sets the Shim of PhysicalChannel.set_PowerControlVoltage(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.SensorPowerOpenChannelGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerOpenChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.SensorPowerOvercurrentGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerOvercurrent()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.SensorPowerTypesGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerTypes()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.SensorPowerVoltageRangeValuesGet">
            <summary>Sets the Shim of PhysicalChannel.get_SensorPowerVoltageRangeValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.TedsBitStreamGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsBitStream()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.TedsManufacturerIDGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsManufacturerID()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.TedsModelNumberGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsModelNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.TedsSerialNumberGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsSerialNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.TedsTemplateIDsGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsTemplateIDs()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.TedsVersionLetterGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsVersionLetter()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.TedsVersionNumberGet">
            <summary>Sets the Shim of PhysicalChannel.get_TedsVersionNumber()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.ThrowIfDisposed">
            <summary>Sets the Shim of PhysicalChannel.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.ToString">
            <summary>Sets the Shim of PhysicalChannel.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.WriteTedsDataByteArrayBasicTedsDataOption">
            <summary>Sets the Shim of PhysicalChannel.WriteTedsData(Byte[] bitStream, BasicTedsDataOption basicTedsDataOption)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel.WriteTedsDataStringBasicTedsDataOption">
            <summary>Sets the Shim of PhysicalChannel.WriteTedsData(String virtualTedsFile, BasicTedsDataOption basicTedsDataOption)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel._PhysicalChannel">
            <summary>Sets the Shim of PhysicalChannel.!PhysicalChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPhysicalChannel._PhysicalChannel01">
            <summary>Sets the Shim of PhysicalChannel.~PhysicalChannel()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale">
            <summary>Shim type of NationalInstruments.DAQmx.PolynomialScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.#ctor(NationalInstruments.DAQmx.PolynomialScale)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.AllInstances.FinishConstructFromOneCoefficientSetPolynomialDirectionDoubleArrayDoubleDoubleInt32Int32">
            <summary>Sets the Shim of PolynomialScale.FinishConstructFromOneCoefficientSet(PolynomialDirection direction, Double[] coefficients, Double rangeMinimum, Double rangeMaximum, Int32 numberOfPointsInFit, Int32 orderOfFit)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.AllInstances.ForwardCoefficientsGet">
            <summary>Sets the Shim of PolynomialScale.get_ForwardCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.AllInstances.ForwardCoefficientsSetDoubleArray">
            <summary>Sets the Shim of PolynomialScale.set_ForwardCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.AllInstances.ReverseCoefficientsGet">
            <summary>Sets the Shim of PolynomialScale.get_ReverseCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.AllInstances.ReverseCoefficientsSetDoubleArray">
            <summary>Sets the Shim of PolynomialScale.set_ReverseCoefficients(Double[] value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.ConstructorStringDoubleArrayDoubleArray">
            <summary>Sets the Shim of PolynomialScale.PolynomialScale(String name, Double[] forwardCoefficients, Double[] reverseCoefficients)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.ConstructorStringPolynomialDirectionDoubleArrayDoubleDouble">
            <summary>Sets the Shim of PolynomialScale.PolynomialScale(String name, PolynomialDirection direction, Double[] coefficients, Double rangeMinimum, Double rangeMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.ConstructorStringPolynomialDirectionDoubleArrayDoubleDoubleInt32Int32">
            <summary>Sets the Shim of PolynomialScale.PolynomialScale(String name, PolynomialDirection direction, Double[] coefficients, Double rangeMinimum, Double rangeMaximum, Int32 numberOfPointsInFit, Int32 orderOfFit)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.FinishConstructFromOneCoefficientSetPolynomialDirectionDoubleArrayDoubleDoubleInt32Int32">
            <summary>Sets the Shim of PolynomialScale.FinishConstructFromOneCoefficientSet(PolynomialDirection direction, Double[] coefficients, Double rangeMinimum, Double rangeMaximum, Int32 numberOfPointsInFit, Int32 orderOfFit)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.ForwardCoefficientsGet">
            <summary>Sets the Shim of PolynomialScale.get_ForwardCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.ForwardCoefficientsSetDoubleArray">
            <summary>Sets the Shim of PolynomialScale.set_ForwardCoefficients(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.ReverseCoefficientsGet">
            <summary>Sets the Shim of PolynomialScale.get_ReverseCoefficients()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimPolynomialScale.ReverseCoefficientsSetDoubleArray">
            <summary>Sets the Shim of PolynomialScale.set_ReverseCoefficients(Double[] value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale">
            <summary>Shim type of NationalInstruments.DAQmx.RangeMapScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.#ctor(NationalInstruments.DAQmx.RangeMapScale)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.PreScaledMaxGet">
            <summary>Sets the Shim of RangeMapScale.get_PreScaledMax()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.PreScaledMaxSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_PreScaledMax(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.PreScaledMinGet">
            <summary>Sets the Shim of RangeMapScale.get_PreScaledMin()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.PreScaledMinSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_PreScaledMin(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.ScaledMaxGet">
            <summary>Sets the Shim of RangeMapScale.get_ScaledMax()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.ScaledMaxSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_ScaledMax(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.ScaledMinGet">
            <summary>Sets the Shim of RangeMapScale.get_ScaledMin()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.AllInstances.ScaledMinSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_ScaledMin(Double value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.ConstructorStringDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of RangeMapScale.RangeMapScale(String name, Double prescaledMinimum, Double prescaledMaximum, Double scaledMinimum, Double scaledMaximum)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.PreScaledMaxGet">
            <summary>Sets the Shim of RangeMapScale.get_PreScaledMax()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.PreScaledMaxSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_PreScaledMax(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.PreScaledMinGet">
            <summary>Sets the Shim of RangeMapScale.get_PreScaledMin()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.PreScaledMinSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_PreScaledMin(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.ScaledMaxGet">
            <summary>Sets the Shim of RangeMapScale.get_ScaledMax()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.ScaledMaxSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_ScaledMax(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.ScaledMinGet">
            <summary>Sets the Shim of RangeMapScale.get_ScaledMin()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimRangeMapScale.ScaledMinSetDouble">
            <summary>Sets the Shim of RangeMapScale.set_ScaledMin(Double value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.ReferenceTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.#ctor(NationalInstruments.DAQmx.ReferenceTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.AnalogEdgeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AnalogEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.AnalogMultiEdgeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AnalogMultiEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.AnalogWindowGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AnalogWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.AutoTriggerEnableGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AutoTriggerEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.AutoTriggerEnableSetBoolean">
            <summary>Sets the Shim of ReferenceTrigger.set_AutoTriggerEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.AutoTriggeredGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AutoTriggered()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.ConfigureAnalogEdgeTriggerStringAnalogEdgeReferenceTriggerSlopeDoubleInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureAnalogEdgeTrigger(String source, AnalogEdgeReferenceTriggerSlope slope, Double level, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.ConfigureAnalogMultiEdgeTriggerStringAnalogMultiEdgeReferenceTriggerSlopeArrayDoubleArrayInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureAnalogMultiEdgeTrigger(String sources, AnalogMultiEdgeReferenceTriggerSlope[] slopes, Double[] levels, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.ConfigureAnalogWindowTriggerStringAnalogWindowReferenceTriggerConditionDoubleDoubleInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureAnalogWindowTrigger(String source, AnalogWindowReferenceTriggerCondition condition, Double top, Double bottom, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.ConfigureDigitalEdgeTriggerStringDigitalEdgeReferenceTriggerEdgeInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeReferenceTriggerEdge edge, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.ConfigureDigitalPatternTriggerStringStringDigitalPatternReferenceTriggerConditionInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureDigitalPatternTrigger(String source, String pattern, DigitalPatternReferenceTriggerCondition condition, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.ConfigureNone">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.DelayGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Delay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.DelaySetDouble">
            <summary>Sets the Shim of ReferenceTrigger.set_Delay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.DigitalEdgeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.DigitalPatternGet">
            <summary>Sets the Shim of ReferenceTrigger.get_DigitalPattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of ReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of ReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of ReferenceTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.MaximumNumberOfTriggersToDetectGet">
            <summary>Sets the Shim of ReferenceTrigger.get_MaximumNumberOfTriggersToDetect()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.MaximumNumberOfTriggersToDetectSetInt64">
            <summary>Sets the Shim of ReferenceTrigger.set_MaximumNumberOfTriggersToDetect(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.PretriggerSamplesGet">
            <summary>Sets the Shim of ReferenceTrigger.get_PretriggerSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.PretriggerSamplesSetInt64">
            <summary>Sets the Shim of ReferenceTrigger.set_PretriggerSamples(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.RetriggerWindowGet">
            <summary>Sets the Shim of ReferenceTrigger.get_RetriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.RetriggerWindowSetDouble">
            <summary>Sets the Shim of ReferenceTrigger.set_RetriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.RetriggerableGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Retriggerable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.RetriggerableSetBoolean">
            <summary>Sets the Shim of ReferenceTrigger.set_Retriggerable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TerminalGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TimestampEnableGet">
            <summary>Sets the Shim of ReferenceTrigger.get_TimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TimestampEnableSetBoolean">
            <summary>Sets the Shim of ReferenceTrigger.set_TimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TimestampGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Timestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TimestampTimescaleGet">
            <summary>Sets the Shim of ReferenceTrigger.get_TimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TimestampTimescaleSetReferenceTriggerTimestampTimescale">
            <summary>Sets the Shim of ReferenceTrigger.set_TimestampTimescale(ReferenceTriggerTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of ReferenceTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TriggerWindowGet">
            <summary>Sets the Shim of ReferenceTrigger.get_TriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TriggerWindowSetDouble">
            <summary>Sets the Shim of ReferenceTrigger.set_TriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TypeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AllInstances.TypeSetReferenceTriggerType">
            <summary>Sets the Shim of ReferenceTrigger.set_Type(ReferenceTriggerType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AnalogEdgeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AnalogEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AnalogMultiEdgeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AnalogMultiEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AnalogWindowGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AnalogWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AutoTriggerEnableGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AutoTriggerEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AutoTriggerEnableSetBoolean">
            <summary>Sets the Shim of ReferenceTrigger.set_AutoTriggerEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.AutoTriggeredGet">
            <summary>Sets the Shim of ReferenceTrigger.get_AutoTriggered()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ConfigureAnalogEdgeTriggerStringAnalogEdgeReferenceTriggerSlopeDoubleInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureAnalogEdgeTrigger(String source, AnalogEdgeReferenceTriggerSlope slope, Double level, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ConfigureAnalogMultiEdgeTriggerStringAnalogMultiEdgeReferenceTriggerSlopeArrayDoubleArrayInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureAnalogMultiEdgeTrigger(String sources, AnalogMultiEdgeReferenceTriggerSlope[] slopes, Double[] levels, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ConfigureAnalogWindowTriggerStringAnalogWindowReferenceTriggerConditionDoubleDoubleInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureAnalogWindowTrigger(String source, AnalogWindowReferenceTriggerCondition condition, Double top, Double bottom, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ConfigureDigitalEdgeTriggerStringDigitalEdgeReferenceTriggerEdgeInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeReferenceTriggerEdge edge, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ConfigureDigitalPatternTriggerStringStringDigitalPatternReferenceTriggerConditionInt64">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureDigitalPatternTrigger(String source, String pattern, DigitalPatternReferenceTriggerCondition condition, Int64 pretriggerSamples)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ConfigureNone">
            <summary>Sets the Shim of ReferenceTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ConstructorTask">
            <summary>Sets the Shim of ReferenceTrigger.ReferenceTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.DelayGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Delay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.DelaySetDouble">
            <summary>Sets the Shim of ReferenceTrigger.set_Delay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.DigitalEdgeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.DigitalPatternGet">
            <summary>Sets the Shim of ReferenceTrigger.get_DigitalPattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of ReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of ReferenceTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.InitializeSubobjects">
            <summary>Sets the Shim of ReferenceTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.MaximumNumberOfTriggersToDetectGet">
            <summary>Sets the Shim of ReferenceTrigger.get_MaximumNumberOfTriggersToDetect()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.MaximumNumberOfTriggersToDetectSetInt64">
            <summary>Sets the Shim of ReferenceTrigger.set_MaximumNumberOfTriggersToDetect(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.PretriggerSamplesGet">
            <summary>Sets the Shim of ReferenceTrigger.get_PretriggerSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.PretriggerSamplesSetInt64">
            <summary>Sets the Shim of ReferenceTrigger.set_PretriggerSamples(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.RetriggerWindowGet">
            <summary>Sets the Shim of ReferenceTrigger.get_RetriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.RetriggerWindowSetDouble">
            <summary>Sets the Shim of ReferenceTrigger.set_RetriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.RetriggerableGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Retriggerable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.RetriggerableSetBoolean">
            <summary>Sets the Shim of ReferenceTrigger.set_Retriggerable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TerminalGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TimestampEnableGet">
            <summary>Sets the Shim of ReferenceTrigger.get_TimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TimestampEnableSetBoolean">
            <summary>Sets the Shim of ReferenceTrigger.set_TimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TimestampGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Timestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TimestampTimescaleGet">
            <summary>Sets the Shim of ReferenceTrigger.get_TimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TimestampTimescaleSetReferenceTriggerTimestampTimescale">
            <summary>Sets the Shim of ReferenceTrigger.set_TimestampTimescale(ReferenceTriggerTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.ToString">
            <summary>Sets the Shim of ReferenceTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TriggerWindowGet">
            <summary>Sets the Shim of ReferenceTrigger.get_TriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TriggerWindowSetDouble">
            <summary>Sets the Shim of ReferenceTrigger.set_TriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TypeGet">
            <summary>Sets the Shim of ReferenceTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimReferenceTrigger.TypeSetReferenceTriggerType">
            <summary>Sets the Shim of ReferenceTrigger.set_Type(ReferenceTriggerType value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.SampleClockEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.#ctor(NationalInstruments.DAQmx.SampleClockEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleClockEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleClockEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.Constructor">
            <summary>Sets the Shim of SampleClockEventArgs.SampleClockEventArgs()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleClockEventArgs.SampleClockEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleClockEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleClockEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleClockEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.SampleCompleteEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.#ctor(NationalInstruments.DAQmx.SampleCompleteEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleCompleteEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleCompleteEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.Constructor">
            <summary>Sets the Shim of SampleCompleteEventArgs.SampleCompleteEventArgs()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleCompleteEventArgs.SampleCompleteEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleCompleteEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSampleCompleteEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of SampleCompleteEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo">
            <summary>Shim type of NationalInstruments.DAQmx.SavedChannelInfo</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.#ctor(NationalInstruments.DAQmx.SavedChannelInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.AllowInteractiveDeletionGet">
            <summary>Sets the Shim of SavedChannelInfo.get_AllowInteractiveDeletion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.AllowInteractiveEditingGet">
            <summary>Sets the Shim of SavedChannelInfo.get_AllowInteractiveEditing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.AuthorGet">
            <summary>Sets the Shim of SavedChannelInfo.get_Author()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.Dispose">
            <summary>Sets the Shim of SavedChannelInfo.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of SavedChannelInfo.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.NameGet">
            <summary>Sets the Shim of SavedChannelInfo.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of SavedChannelInfo.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances.ToString01">
            <summary>Sets the Shim of SavedChannelInfo.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances._SavedChannelInfo">
            <summary>Sets the Shim of SavedChannelInfo.!SavedChannelInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllInstances._SavedChannelInfo01">
            <summary>Sets the Shim of SavedChannelInfo.~SavedChannelInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllowInteractiveDeletionGet">
            <summary>Sets the Shim of SavedChannelInfo.get_AllowInteractiveDeletion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AllowInteractiveEditingGet">
            <summary>Sets the Shim of SavedChannelInfo.get_AllowInteractiveEditing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.AuthorGet">
            <summary>Sets the Shim of SavedChannelInfo.get_Author()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.Dispose">
            <summary>Sets the Shim of SavedChannelInfo.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.DisposeBoolean">
            <summary>Sets the Shim of SavedChannelInfo.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.NameGet">
            <summary>Sets the Shim of SavedChannelInfo.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.ThrowIfDisposed">
            <summary>Sets the Shim of SavedChannelInfo.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo.ToString">
            <summary>Sets the Shim of SavedChannelInfo.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo._SavedChannelInfo">
            <summary>Sets the Shim of SavedChannelInfo.!SavedChannelInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedChannelInfo._SavedChannelInfo01">
            <summary>Sets the Shim of SavedChannelInfo.~SavedChannelInfo()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo">
            <summary>Shim type of NationalInstruments.DAQmx.SavedScaleInfo</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.#ctor(NationalInstruments.DAQmx.SavedScaleInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.AllowInteractiveDeletionGet">
            <summary>Sets the Shim of SavedScaleInfo.get_AllowInteractiveDeletion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.AllowInteractiveEditingGet">
            <summary>Sets the Shim of SavedScaleInfo.get_AllowInteractiveEditing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.AuthorGet">
            <summary>Sets the Shim of SavedScaleInfo.get_Author()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.Dispose">
            <summary>Sets the Shim of SavedScaleInfo.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of SavedScaleInfo.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.NameGet">
            <summary>Sets the Shim of SavedScaleInfo.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of SavedScaleInfo.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances.ToString01">
            <summary>Sets the Shim of SavedScaleInfo.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances._SavedScaleInfo">
            <summary>Sets the Shim of SavedScaleInfo.!SavedScaleInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllInstances._SavedScaleInfo01">
            <summary>Sets the Shim of SavedScaleInfo.~SavedScaleInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllowInteractiveDeletionGet">
            <summary>Sets the Shim of SavedScaleInfo.get_AllowInteractiveDeletion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AllowInteractiveEditingGet">
            <summary>Sets the Shim of SavedScaleInfo.get_AllowInteractiveEditing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.AuthorGet">
            <summary>Sets the Shim of SavedScaleInfo.get_Author()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.Dispose">
            <summary>Sets the Shim of SavedScaleInfo.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.DisposeBoolean">
            <summary>Sets the Shim of SavedScaleInfo.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.NameGet">
            <summary>Sets the Shim of SavedScaleInfo.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.ThrowIfDisposed">
            <summary>Sets the Shim of SavedScaleInfo.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo.ToString">
            <summary>Sets the Shim of SavedScaleInfo.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo._SavedScaleInfo">
            <summary>Sets the Shim of SavedScaleInfo.!SavedScaleInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedScaleInfo._SavedScaleInfo01">
            <summary>Sets the Shim of SavedScaleInfo.~SavedScaleInfo()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo">
            <summary>Shim type of NationalInstruments.DAQmx.SavedTaskInfo</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.#ctor(NationalInstruments.DAQmx.SavedTaskInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.AllowInteractiveDeletionGet">
            <summary>Sets the Shim of SavedTaskInfo.get_AllowInteractiveDeletion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.AllowInteractiveEditingGet">
            <summary>Sets the Shim of SavedTaskInfo.get_AllowInteractiveEditing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.AuthorGet">
            <summary>Sets the Shim of SavedTaskInfo.get_Author()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.Dispose">
            <summary>Sets the Shim of SavedTaskInfo.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of SavedTaskInfo.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.NameGet">
            <summary>Sets the Shim of SavedTaskInfo.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of SavedTaskInfo.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances.ToString01">
            <summary>Sets the Shim of SavedTaskInfo.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances._SavedTaskInfo">
            <summary>Sets the Shim of SavedTaskInfo.!SavedTaskInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllInstances._SavedTaskInfo01">
            <summary>Sets the Shim of SavedTaskInfo.~SavedTaskInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllowInteractiveDeletionGet">
            <summary>Sets the Shim of SavedTaskInfo.get_AllowInteractiveDeletion()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AllowInteractiveEditingGet">
            <summary>Sets the Shim of SavedTaskInfo.get_AllowInteractiveEditing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.AuthorGet">
            <summary>Sets the Shim of SavedTaskInfo.get_Author()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.Dispose">
            <summary>Sets the Shim of SavedTaskInfo.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.DisposeBoolean">
            <summary>Sets the Shim of SavedTaskInfo.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.NameGet">
            <summary>Sets the Shim of SavedTaskInfo.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.ThrowIfDisposed">
            <summary>Sets the Shim of SavedTaskInfo.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo.ToString">
            <summary>Sets the Shim of SavedTaskInfo.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo._SavedTaskInfo">
            <summary>Sets the Shim of SavedTaskInfo.!SavedTaskInfo()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSavedTaskInfo._SavedTaskInfo01">
            <summary>Sets the Shim of SavedTaskInfo.~SavedTaskInfo()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimScale">
            <summary>Shim type of NationalInstruments.DAQmx.Scale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimScale.#ctor(NationalInstruments.DAQmx.Scale)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.DescriptionGet">
            <summary>Sets the Shim of Scale.get_Description()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.DescriptionSetString">
            <summary>Sets the Shim of Scale.set_Description(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.Dispose">
            <summary>Sets the Shim of Scale.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.NameGet">
            <summary>Sets the Shim of Scale.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.NameSetString">
            <summary>Sets the Shim of Scale.set_Name(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.PreScaledUnitsGet">
            <summary>Sets the Shim of Scale.get_PreScaledUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.PreScaledUnitsSetScalePreScaledUnits">
            <summary>Sets the Shim of Scale.set_PreScaledUnits(ScalePreScaledUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.ScaledUnitsGet">
            <summary>Sets the Shim of Scale.get_ScaledUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.ScaledUnitsSetString">
            <summary>Sets the Shim of Scale.set_ScaledUnits(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of Scale.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.ToString01">
            <summary>Sets the Shim of Scale.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances.TypeGet">
            <summary>Sets the Shim of Scale.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances._Scale">
            <summary>Sets the Shim of Scale.!Scale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.AllInstances._Scale01">
            <summary>Sets the Shim of Scale.~Scale()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimScale.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimScale.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimScale.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.ConstructorString">
            <summary>Sets the Shim of Scale.Scale(String name)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.DescriptionGet">
            <summary>Sets the Shim of Scale.get_Description()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.DescriptionSetString">
            <summary>Sets the Shim of Scale.set_Description(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.Dispose">
            <summary>Sets the Shim of Scale.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.DisposeBoolean">
            <summary>Sets the Shim of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.NameGet">
            <summary>Sets the Shim of Scale.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.NameSetString">
            <summary>Sets the Shim of Scale.set_Name(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.PreScaledUnitsGet">
            <summary>Sets the Shim of Scale.get_PreScaledUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.PreScaledUnitsSetScalePreScaledUnits">
            <summary>Sets the Shim of Scale.set_PreScaledUnits(ScalePreScaledUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.ScaledUnitsGet">
            <summary>Sets the Shim of Scale.get_ScaledUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.ScaledUnitsSetString">
            <summary>Sets the Shim of Scale.set_ScaledUnits(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.ThrowIfDisposed">
            <summary>Sets the Shim of Scale.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.ToString">
            <summary>Sets the Shim of Scale.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale.TypeGet">
            <summary>Sets the Shim of Scale.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale._Scale">
            <summary>Sets the Shim of Scale.!Scale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimScale._Scale01">
            <summary>Sets the Shim of Scale.~Scale()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSinglePoint">
            <summary>Shim type of NationalInstruments.DAQmx.SinglePoint</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.#ctor(NationalInstruments.DAQmx.SinglePoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.ConvertLateErrorsToWarningsGet">
            <summary>Sets the Shim of SinglePoint.get_ConvertLateErrorsToWarnings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.ConvertLateErrorsToWarningsSetBoolean">
            <summary>Sets the Shim of SinglePoint.set_ConvertLateErrorsToWarnings(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of SinglePoint.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of SinglePoint.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.NumberOfWarmupIterationsGet">
            <summary>Sets the Shim of SinglePoint.get_NumberOfWarmupIterations()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.NumberOfWarmupIterationsSetInt64">
            <summary>Sets the Shim of SinglePoint.set_NumberOfWarmupIterations(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.ReportMissedSamplesGet">
            <summary>Sets the Shim of SinglePoint.get_ReportMissedSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.ReportMissedSamplesSetBoolean">
            <summary>Sets the Shim of SinglePoint.set_ReportMissedSamples(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.ToString01">
            <summary>Sets the Shim of SinglePoint.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.WaitForNextSampleClock">
            <summary>Sets the Shim of SinglePoint.WaitForNextSampleClock()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.WaitForNextSampleClockDouble">
            <summary>Sets the Shim of SinglePoint.WaitForNextSampleClock(Double timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.WaitForNextSampleClockWaitModeGet">
            <summary>Sets the Shim of SinglePoint.get_WaitForNextSampleClockWaitMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.WaitForNextSampleClockWaitModeSetWaitForNextSampleClockWaitMode">
            <summary>Sets the Shim of SinglePoint.set_WaitForNextSampleClockWaitMode(WaitForNextSampleClockWaitMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.WriteRecoveryModeGet">
            <summary>Sets the Shim of SinglePoint.get_WriteRecoveryMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.AllInstances.WriteRecoveryModeSetWriteRecoveryMode">
            <summary>Sets the Shim of SinglePoint.set_WriteRecoveryMode(WriteRecoveryMode value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.ConstructorTask">
            <summary>Sets the Shim of SinglePoint.SinglePoint(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.ConvertLateErrorsToWarningsGet">
            <summary>Sets the Shim of SinglePoint.get_ConvertLateErrorsToWarnings()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.ConvertLateErrorsToWarningsSetBoolean">
            <summary>Sets the Shim of SinglePoint.set_ConvertLateErrorsToWarnings(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of SinglePoint.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of SinglePoint.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.NumberOfWarmupIterationsGet">
            <summary>Sets the Shim of SinglePoint.get_NumberOfWarmupIterations()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.NumberOfWarmupIterationsSetInt64">
            <summary>Sets the Shim of SinglePoint.set_NumberOfWarmupIterations(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.ReportMissedSamplesGet">
            <summary>Sets the Shim of SinglePoint.get_ReportMissedSamples()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.ReportMissedSamplesSetBoolean">
            <summary>Sets the Shim of SinglePoint.set_ReportMissedSamples(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.ToString">
            <summary>Sets the Shim of SinglePoint.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.WaitForNextSampleClock">
            <summary>Sets the Shim of SinglePoint.WaitForNextSampleClock()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.WaitForNextSampleClockDouble">
            <summary>Sets the Shim of SinglePoint.WaitForNextSampleClock(Double timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.WaitForNextSampleClockWaitModeGet">
            <summary>Sets the Shim of SinglePoint.get_WaitForNextSampleClockWaitMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.WaitForNextSampleClockWaitModeSetWaitForNextSampleClockWaitMode">
            <summary>Sets the Shim of SinglePoint.set_WaitForNextSampleClockWaitMode(WaitForNextSampleClockWaitMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.WriteRecoveryModeGet">
            <summary>Sets the Shim of SinglePoint.get_WriteRecoveryMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimSinglePoint.WriteRecoveryModeSetWriteRecoveryMode">
            <summary>Sets the Shim of SinglePoint.set_WriteRecoveryMode(WriteRecoveryMode value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.StartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.#ctor(NationalInstruments.DAQmx.StartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.AnalogEdgeGet">
            <summary>Sets the Shim of StartTrigger.get_AnalogEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.AnalogMultiEdgeGet">
            <summary>Sets the Shim of StartTrigger.get_AnalogMultiEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.AnalogWindowGet">
            <summary>Sets the Shim of StartTrigger.get_AnalogWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ConfigureAnalogEdgeTriggerStringAnalogEdgeStartTriggerSlopeDouble">
            <summary>Sets the Shim of StartTrigger.ConfigureAnalogEdgeTrigger(String source, AnalogEdgeStartTriggerSlope slope, Double level)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ConfigureAnalogMultiEdgeTriggerStringAnalogMultiEdgeStartTriggerSlopeArrayDoubleArray">
            <summary>Sets the Shim of StartTrigger.ConfigureAnalogMultiEdgeTrigger(String sources, AnalogMultiEdgeStartTriggerSlope[] slopes, Double[] levels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ConfigureAnalogWindowTriggerStringAnalogWindowStartTriggerConditionDoubleDouble">
            <summary>Sets the Shim of StartTrigger.ConfigureAnalogWindowTrigger(String source, AnalogWindowStartTriggerCondition condition, Double top, Double bottom)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ConfigureDigitalEdgeTriggerStringDigitalEdgeStartTriggerEdge">
            <summary>Sets the Shim of StartTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeStartTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ConfigureDigitalPatternTriggerStringStringDigitalPatternStartTriggerCondition">
            <summary>Sets the Shim of StartTrigger.ConfigureDigitalPatternTrigger(String source, String pattern, DigitalPatternStartTriggerCondition condition)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ConfigureNone">
            <summary>Sets the Shim of StartTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ConfigureTimeTriggerPrecisionDateTimeTimeStartTriggerTimescale">
            <summary>Sets the Shim of StartTrigger.ConfigureTimeTrigger(PrecisionDateTime triggerTime, TimeStartTriggerTimescale timescale)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.DelayGet">
            <summary>Sets the Shim of StartTrigger.get_Delay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.DelaySetDouble">
            <summary>Sets the Shim of StartTrigger.set_Delay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.DelayUnitsGet">
            <summary>Sets the Shim of StartTrigger.get_DelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.DelayUnitsSetStartTriggerDelayUnits">
            <summary>Sets the Shim of StartTrigger.set_DelayUnits(StartTriggerDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.DigitalEdgeGet">
            <summary>Sets the Shim of StartTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.DigitalPatternGet">
            <summary>Sets the Shim of StartTrigger.get_DigitalPattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of StartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of StartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of StartTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.MaximumNumberOfTriggersToDetectGet">
            <summary>Sets the Shim of StartTrigger.get_MaximumNumberOfTriggersToDetect()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.MaximumNumberOfTriggersToDetectSetInt64">
            <summary>Sets the Shim of StartTrigger.set_MaximumNumberOfTriggersToDetect(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.RetriggerWindowGet">
            <summary>Sets the Shim of StartTrigger.get_RetriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.RetriggerWindowSetDouble">
            <summary>Sets the Shim of StartTrigger.set_RetriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.RetriggerableGet">
            <summary>Sets the Shim of StartTrigger.get_Retriggerable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.RetriggerableSetBoolean">
            <summary>Sets the Shim of StartTrigger.set_Retriggerable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TerminalGet">
            <summary>Sets the Shim of StartTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TimeGet">
            <summary>Sets the Shim of StartTrigger.get_Time()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TimestampEnableGet">
            <summary>Sets the Shim of StartTrigger.get_TimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TimestampEnableSetBoolean">
            <summary>Sets the Shim of StartTrigger.set_TimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TimestampGet">
            <summary>Sets the Shim of StartTrigger.get_Timestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TimestampTimescaleGet">
            <summary>Sets the Shim of StartTrigger.get_TimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TimestampTimescaleSetStartTriggerTimestampTimescale">
            <summary>Sets the Shim of StartTrigger.set_TimestampTimescale(StartTriggerTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of StartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TriggerWindowGet">
            <summary>Sets the Shim of StartTrigger.get_TriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TriggerWindowSetDouble">
            <summary>Sets the Shim of StartTrigger.set_TriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TypeGet">
            <summary>Sets the Shim of StartTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AllInstances.TypeSetStartTriggerType">
            <summary>Sets the Shim of StartTrigger.set_Type(StartTriggerType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AnalogEdgeGet">
            <summary>Sets the Shim of StartTrigger.get_AnalogEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AnalogMultiEdgeGet">
            <summary>Sets the Shim of StartTrigger.get_AnalogMultiEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.AnalogWindowGet">
            <summary>Sets the Shim of StartTrigger.get_AnalogWindow()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConfigureAnalogEdgeTriggerStringAnalogEdgeStartTriggerSlopeDouble">
            <summary>Sets the Shim of StartTrigger.ConfigureAnalogEdgeTrigger(String source, AnalogEdgeStartTriggerSlope slope, Double level)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConfigureAnalogMultiEdgeTriggerStringAnalogMultiEdgeStartTriggerSlopeArrayDoubleArray">
            <summary>Sets the Shim of StartTrigger.ConfigureAnalogMultiEdgeTrigger(String sources, AnalogMultiEdgeStartTriggerSlope[] slopes, Double[] levels)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConfigureAnalogWindowTriggerStringAnalogWindowStartTriggerConditionDoubleDouble">
            <summary>Sets the Shim of StartTrigger.ConfigureAnalogWindowTrigger(String source, AnalogWindowStartTriggerCondition condition, Double top, Double bottom)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConfigureDigitalEdgeTriggerStringDigitalEdgeStartTriggerEdge">
            <summary>Sets the Shim of StartTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeStartTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConfigureDigitalPatternTriggerStringStringDigitalPatternStartTriggerCondition">
            <summary>Sets the Shim of StartTrigger.ConfigureDigitalPatternTrigger(String source, String pattern, DigitalPatternStartTriggerCondition condition)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConfigureNone">
            <summary>Sets the Shim of StartTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConfigureTimeTriggerPrecisionDateTimeTimeStartTriggerTimescale">
            <summary>Sets the Shim of StartTrigger.ConfigureTimeTrigger(PrecisionDateTime triggerTime, TimeStartTriggerTimescale timescale)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ConstructorTask">
            <summary>Sets the Shim of StartTrigger.StartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.DelayGet">
            <summary>Sets the Shim of StartTrigger.get_Delay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.DelaySetDouble">
            <summary>Sets the Shim of StartTrigger.set_Delay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.DelayUnitsGet">
            <summary>Sets the Shim of StartTrigger.get_DelayUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.DelayUnitsSetStartTriggerDelayUnits">
            <summary>Sets the Shim of StartTrigger.set_DelayUnits(StartTriggerDelayUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.DigitalEdgeGet">
            <summary>Sets the Shim of StartTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.DigitalPatternGet">
            <summary>Sets the Shim of StartTrigger.get_DigitalPattern()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of StartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of StartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.InitializeSubobjects">
            <summary>Sets the Shim of StartTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.MaximumNumberOfTriggersToDetectGet">
            <summary>Sets the Shim of StartTrigger.get_MaximumNumberOfTriggersToDetect()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.MaximumNumberOfTriggersToDetectSetInt64">
            <summary>Sets the Shim of StartTrigger.set_MaximumNumberOfTriggersToDetect(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.RetriggerWindowGet">
            <summary>Sets the Shim of StartTrigger.get_RetriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.RetriggerWindowSetDouble">
            <summary>Sets the Shim of StartTrigger.set_RetriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.RetriggerableGet">
            <summary>Sets the Shim of StartTrigger.get_Retriggerable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.RetriggerableSetBoolean">
            <summary>Sets the Shim of StartTrigger.set_Retriggerable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TerminalGet">
            <summary>Sets the Shim of StartTrigger.get_Terminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TimeGet">
            <summary>Sets the Shim of StartTrigger.get_Time()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TimestampEnableGet">
            <summary>Sets the Shim of StartTrigger.get_TimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TimestampEnableSetBoolean">
            <summary>Sets the Shim of StartTrigger.set_TimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TimestampGet">
            <summary>Sets the Shim of StartTrigger.get_Timestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TimestampTimescaleGet">
            <summary>Sets the Shim of StartTrigger.get_TimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TimestampTimescaleSetStartTriggerTimestampTimescale">
            <summary>Sets the Shim of StartTrigger.set_TimestampTimescale(StartTriggerTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.ToString">
            <summary>Sets the Shim of StartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TriggerWindowGet">
            <summary>Sets the Shim of StartTrigger.get_TriggerWindow()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TriggerWindowSetDouble">
            <summary>Sets the Shim of StartTrigger.set_TriggerWindow(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TypeGet">
            <summary>Sets the Shim of StartTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimStartTrigger.TypeSetStartTriggerType">
            <summary>Sets the Shim of StartTrigger.set_Type(StartTriggerType value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTableScale">
            <summary>Shim type of NationalInstruments.DAQmx.TableScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTableScale.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTableScale.#ctor(NationalInstruments.DAQmx.TableScale)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTableScale.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.AllInstances.PreScaledValuesGet">
            <summary>Sets the Shim of TableScale.get_PreScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.AllInstances.PreScaledValuesSetDoubleArray">
            <summary>Sets the Shim of TableScale.set_PreScaledValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.AllInstances.ScaledValuesGet">
            <summary>Sets the Shim of TableScale.get_ScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.AllInstances.ScaledValuesSetDoubleArray">
            <summary>Sets the Shim of TableScale.set_ScaledValues(Double[] value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTableScale.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTableScale.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTableScale.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.ConstructorStringDoubleArrayDoubleArray">
            <summary>Sets the Shim of TableScale.TableScale(String name, Double[] preScaledValues, Double[] scaledValues)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.PreScaledValuesGet">
            <summary>Sets the Shim of TableScale.get_PreScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.PreScaledValuesSetDoubleArray">
            <summary>Sets the Shim of TableScale.set_PreScaledValues(Double[] value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.ScaledValuesGet">
            <summary>Sets the Shim of TableScale.get_ScaledValues()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTableScale.ScaledValuesSetDoubleArray">
            <summary>Sets the Shim of TableScale.set_ScaledValues(Double[] value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTask">
            <summary>Shim type of NationalInstruments.DAQmx.Task</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTask.#ctor(NationalInstruments.DAQmx.Task)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AIChannelsGet">
            <summary>Sets the Shim of Task.get_AIChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AOChannelsGet">
            <summary>Sets the Shim of Task.get_AOChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AccessoryInsertionOrRemovalDetectedGet">
            <summary>Sets the Shim of Task.get_AccessoryInsertionOrRemovalDetected()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AddGlobalChannelString">
            <summary>Sets the Shim of Task.AddGlobalChannel(String channelName)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.AIChannelsGet">
            <summary>Sets the Shim of Task.get_AIChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.AOChannelsGet">
            <summary>Sets the Shim of Task.get_AOChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.AccessoryInsertionOrRemovalDetectedGet">
            <summary>Sets the Shim of Task.get_AccessoryInsertionOrRemovalDetected()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.AddGlobalChannelString">
            <summary>Sets the Shim of Task.AddGlobalChannel(String channelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.CIChannelsGet">
            <summary>Sets the Shim of Task.get_CIChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.COChannelsGet">
            <summary>Sets the Shim of Task.get_COChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.CallbackManagerGet">
            <summary>Sets the Shim of Task.get_CallbackManager()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.ConfigureLoggingStringTdmsLoggingOperationLoggingMode">
            <summary>Sets the Shim of Task.ConfigureLogging(String filePath, TdmsLoggingOperation loggingOperation, LoggingMode loggingMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.ConfigureLoggingStringTdmsLoggingOperationLoggingModeString">
            <summary>Sets the Shim of Task.ConfigureLogging(String filePath, TdmsLoggingOperation loggingOperation, LoggingMode loggingMode, String groupName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.ControlTaskAction">
            <summary>Sets the Shim of Task.Control(TaskAction mode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.CounterOutputAddCounterOutputEventHandler">
            <summary>Sets the Shim of Task.add_CounterOutput(CounterOutputEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.CounterOutputEventKeyGet">
            <summary>Sets the Shim of Task.get_CounterOutputEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.CounterOutputRemoveCounterOutputEventHandler">
            <summary>Sets the Shim of Task.remove_CounterOutput(CounterOutputEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DIChannelsGet">
            <summary>Sets the Shim of Task.get_DIChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DOChannelsGet">
            <summary>Sets the Shim of Task.get_DOChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DevicesGet">
            <summary>Sets the Shim of Task.get_Devices()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DevicesWithInsertedOrRemovedAccessoriesGet">
            <summary>Sets the Shim of Task.get_DevicesWithInsertedOrRemovedAccessories()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DigitalChangeDetectionAddDigitalChangeDetectionEventHandler">
            <summary>Sets the Shim of Task.add_DigitalChangeDetection(DigitalChangeDetectionEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DigitalChangeDetectionEventKeyGet">
            <summary>Sets the Shim of Task.get_DigitalChangeDetectionEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DigitalChangeDetectionRemoveDigitalChangeDetectionEventHandler">
            <summary>Sets the Shim of Task.remove_DigitalChangeDetection(DigitalChangeDetectionEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.Dispose">
            <summary>Sets the Shim of Task.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DoneAddTaskDoneEventHandler">
            <summary>Sets the Shim of Task.add_Done(TaskDoneEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DoneEventKeyGet">
            <summary>Sets the Shim of Task.get_DoneEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.DoneRemoveTaskDoneEventHandler">
            <summary>Sets the Shim of Task.remove_Done(TaskDoneEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesReadAddEveryNSamplesReadEventHandler">
            <summary>Sets the Shim of Task.add_EveryNSamplesRead(EveryNSamplesReadEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesReadEventIntervalGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesReadEventInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesReadEventIntervalSetInt32">
            <summary>Sets the Shim of Task.set_EveryNSamplesReadEventInterval(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesReadEventKeyGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesReadEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesReadRemoveEveryNSamplesReadEventHandler">
            <summary>Sets the Shim of Task.remove_EveryNSamplesRead(EveryNSamplesReadEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesWrittenAddEveryNSamplesWrittenEventHandler">
            <summary>Sets the Shim of Task.add_EveryNSamplesWritten(EveryNSamplesWrittenEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesWrittenEventIntervalGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesWrittenEventInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesWrittenEventIntervalSetInt32">
            <summary>Sets the Shim of Task.set_EveryNSamplesWrittenEventInterval(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesWrittenEventKeyGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesWrittenEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.EveryNSamplesWrittenRemoveEveryNSamplesWrittenEventHandler">
            <summary>Sets the Shim of Task.remove_EveryNSamplesWritten(EveryNSamplesWrittenEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.ExportSignalsGet">
            <summary>Sets the Shim of Task.get_ExportSignals()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.GetOrCreateTimingSubobjectString">
            <summary>Sets the Shim of Task.GetOrCreateTimingSubobject(String index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.GetSubobjectAtIndexTypeObject">
            <summary>Sets the Shim of Task.GetSubobjectAtIndex(Type subobjectType, Object index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.InitializeCallbackManagers">
            <summary>Sets the Shim of Task.InitializeCallbackManagers()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of Task.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.InvalidateEnumerators">
            <summary>Sets the Shim of Task.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.IsCachedChannelTypeValid">
            <summary>Sets the Shim of Task.IsCachedChannelTypeValid()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.IsDoneGet">
            <summary>Sets the Shim of Task.get_IsDone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.NameGet">
            <summary>Sets the Shim of Task.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.OnCounterOutputCounterOutputEventArgs">
            <summary>Sets the Shim of Task.OnCounterOutput(CounterOutputEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.OnDigitalChangeDetectionDigitalChangeDetectionEventArgs">
            <summary>Sets the Shim of Task.OnDigitalChangeDetection(DigitalChangeDetectionEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.OnDoneTaskDoneEventArgs">
            <summary>Sets the Shim of Task.OnDone(TaskDoneEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.OnEveryNSamplesReadEveryNSamplesReadEventArgs">
            <summary>Sets the Shim of Task.OnEveryNSamplesRead(EveryNSamplesReadEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.OnEveryNSamplesWrittenEveryNSamplesWrittenEventArgs">
            <summary>Sets the Shim of Task.OnEveryNSamplesWritten(EveryNSamplesWrittenEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.OnSampleClockSampleClockEventArgs">
            <summary>Sets the Shim of Task.OnSampleClock(SampleClockEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.OnSampleCompleteSampleCompleteEventArgs">
            <summary>Sets the Shim of Task.OnSampleComplete(SampleCompleteEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.RegisterAsyncWaitHandleWaitHandle">
            <summary>Sets the Shim of Task.RegisterAsyncWaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.ReleaseDelegateHandleIfNeeded">
            <summary>Sets the Shim of Task.ReleaseDelegateHandleIfNeeded()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SampleClockAddSampleClockEventHandler">
            <summary>Sets the Shim of Task.add_SampleClock(SampleClockEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SampleClockEventKeyGet">
            <summary>Sets the Shim of Task.get_SampleClockEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SampleClockRemoveSampleClockEventHandler">
            <summary>Sets the Shim of Task.remove_SampleClock(SampleClockEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SampleCompleteAddSampleCompleteEventHandler">
            <summary>Sets the Shim of Task.add_SampleComplete(SampleCompleteEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SampleCompleteEventKeyGet">
            <summary>Sets the Shim of Task.get_SampleCompleteEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SampleCompleteRemoveSampleCompleteEventHandler">
            <summary>Sets the Shim of Task.remove_SampleComplete(SampleCompleteEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SetSubobjectAtIndexObjectObject">
            <summary>Sets the Shim of Task.SetSubobjectAtIndex(Object object, Object index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SetSubobjectAtIndexTypeObjectObject">
            <summary>Sets the Shim of Task.SetSubobjectAtIndex(Type subobjectType, Object object, Object index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.Start">
            <summary>Sets the Shim of Task.Start()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.StartNewFileString">
            <summary>Sets the Shim of Task.StartNewFile(String filePath)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.Stop">
            <summary>Sets the Shim of Task.Stop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.StreamGet">
            <summary>Sets the Shim of Task.get_Stream()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SuppressEventKeyGet">
            <summary>Sets the Shim of Task.get_SuppressEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SwitchScanGet">
            <summary>Sets the Shim of Task.get_SwitchScan()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SynchronizeCallbacksGet">
            <summary>Sets the Shim of Task.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of Task.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SynchronizingObjectGet">
            <summary>Sets the Shim of Task.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of Task.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of Task.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.TimingGet">
            <summary>Sets the Shim of Task.get_Timing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.ToString01">
            <summary>Sets the Shim of Task.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.TriggersGet">
            <summary>Sets the Shim of Task.get_Triggers()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.UnregisterAsyncWaitHandleWaitHandle">
            <summary>Sets the Shim of Task.UnregisterAsyncWaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.WaitForValidTimestampTimestampEvent">
            <summary>Sets the Shim of Task.WaitForValidTimestamp(TimestampEvent timestampEvent)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.WaitForValidTimestampTimestampEventTimeSpan">
            <summary>Sets the Shim of Task.WaitForValidTimestamp(TimestampEvent timestampEvent, TimeSpan timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.WaitUntilDone">
            <summary>Sets the Shim of Task.WaitUntilDone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.WaitUntilDoneInt32">
            <summary>Sets the Shim of Task.WaitUntilDone(Int32 millisecToWait)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.WaitUntilDoneTimeSpan">
            <summary>Sets the Shim of Task.WaitUntilDone(TimeSpan timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances.WatchdogGet">
            <summary>Sets the Shim of Task.get_Watchdog()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances._Task">
            <summary>Sets the Shim of Task.!Task()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.AllInstances._Task01">
            <summary>Sets the Shim of Task.~Task()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTask.Bind(NationalInstruments.ISupportSynchronizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTask.Bind(NationalInstruments.ISynchronizeCallbacks)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTask.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.CIChannelsGet">
            <summary>Sets the Shim of Task.get_CIChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.COChannelsGet">
            <summary>Sets the Shim of Task.get_COChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.CallbackManagerGet">
            <summary>Sets the Shim of Task.get_CallbackManager()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ConfigureLoggingStringTdmsLoggingOperationLoggingMode">
            <summary>Sets the Shim of Task.ConfigureLogging(String filePath, TdmsLoggingOperation loggingOperation, LoggingMode loggingMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ConfigureLoggingStringTdmsLoggingOperationLoggingModeString">
            <summary>Sets the Shim of Task.ConfigureLogging(String filePath, TdmsLoggingOperation loggingOperation, LoggingMode loggingMode, String groupName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.Constructor">
            <summary>Sets the Shim of Task.Task()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ConstructorString">
            <summary>Sets the Shim of Task.Task(String name)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ControlTaskAction">
            <summary>Sets the Shim of Task.Control(TaskAction mode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.CounterOutputAddCounterOutputEventHandler">
            <summary>Sets the Shim of Task.add_CounterOutput(CounterOutputEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.CounterOutputEventKeyGet">
            <summary>Sets the Shim of Task.get_CounterOutputEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.CounterOutputRemoveCounterOutputEventHandler">
            <summary>Sets the Shim of Task.remove_CounterOutput(CounterOutputEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DIChannelsGet">
            <summary>Sets the Shim of Task.get_DIChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DOChannelsGet">
            <summary>Sets the Shim of Task.get_DOChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DevicesGet">
            <summary>Sets the Shim of Task.get_Devices()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DevicesWithInsertedOrRemovedAccessoriesGet">
            <summary>Sets the Shim of Task.get_DevicesWithInsertedOrRemovedAccessories()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DigitalChangeDetectionAddDigitalChangeDetectionEventHandler">
            <summary>Sets the Shim of Task.add_DigitalChangeDetection(DigitalChangeDetectionEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DigitalChangeDetectionEventKeyGet">
            <summary>Sets the Shim of Task.get_DigitalChangeDetectionEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DigitalChangeDetectionRemoveDigitalChangeDetectionEventHandler">
            <summary>Sets the Shim of Task.remove_DigitalChangeDetection(DigitalChangeDetectionEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.Dispose">
            <summary>Sets the Shim of Task.Dispose()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DisposeBoolean">
            <summary>Sets the Shim of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DoneAddTaskDoneEventHandler">
            <summary>Sets the Shim of Task.add_Done(TaskDoneEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DoneEventKeyGet">
            <summary>Sets the Shim of Task.get_DoneEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.DoneRemoveTaskDoneEventHandler">
            <summary>Sets the Shim of Task.remove_Done(TaskDoneEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesReadAddEveryNSamplesReadEventHandler">
            <summary>Sets the Shim of Task.add_EveryNSamplesRead(EveryNSamplesReadEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesReadEventIntervalGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesReadEventInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesReadEventIntervalSetInt32">
            <summary>Sets the Shim of Task.set_EveryNSamplesReadEventInterval(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesReadEventKeyGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesReadEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesReadRemoveEveryNSamplesReadEventHandler">
            <summary>Sets the Shim of Task.remove_EveryNSamplesRead(EveryNSamplesReadEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesWrittenAddEveryNSamplesWrittenEventHandler">
            <summary>Sets the Shim of Task.add_EveryNSamplesWritten(EveryNSamplesWrittenEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesWrittenEventIntervalGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesWrittenEventInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesWrittenEventIntervalSetInt32">
            <summary>Sets the Shim of Task.set_EveryNSamplesWrittenEventInterval(Int32 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesWrittenEventKeyGet">
            <summary>Sets the Shim of Task.get_EveryNSamplesWrittenEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.EveryNSamplesWrittenRemoveEveryNSamplesWrittenEventHandler">
            <summary>Sets the Shim of Task.remove_EveryNSamplesWritten(EveryNSamplesWrittenEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ExportSignalsGet">
            <summary>Sets the Shim of Task.get_ExportSignals()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.GetOrCreateTimingSubobjectString">
            <summary>Sets the Shim of Task.GetOrCreateTimingSubobject(String index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.GetSubobjectAtIndexTypeObject">
            <summary>Sets the Shim of Task.GetSubobjectAtIndex(Type subobjectType, Object index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.InitializeCallbackManagers">
            <summary>Sets the Shim of Task.InitializeCallbackManagers()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.InitializeSubobjects">
            <summary>Sets the Shim of Task.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.InvalidateEnumerators">
            <summary>Sets the Shim of Task.InvalidateEnumerators()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.IsCachedChannelTypeValid">
            <summary>Sets the Shim of Task.IsCachedChannelTypeValid()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.IsDoneGet">
            <summary>Sets the Shim of Task.get_IsDone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.NameGet">
            <summary>Sets the Shim of Task.get_Name()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.OnCounterOutputCounterOutputEventArgs">
            <summary>Sets the Shim of Task.OnCounterOutput(CounterOutputEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.OnDigitalChangeDetectionDigitalChangeDetectionEventArgs">
            <summary>Sets the Shim of Task.OnDigitalChangeDetection(DigitalChangeDetectionEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.OnDoneTaskDoneEventArgs">
            <summary>Sets the Shim of Task.OnDone(TaskDoneEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.OnEveryNSamplesReadEveryNSamplesReadEventArgs">
            <summary>Sets the Shim of Task.OnEveryNSamplesRead(EveryNSamplesReadEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.OnEveryNSamplesWrittenEveryNSamplesWrittenEventArgs">
            <summary>Sets the Shim of Task.OnEveryNSamplesWritten(EveryNSamplesWrittenEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.OnSampleClockSampleClockEventArgs">
            <summary>Sets the Shim of Task.OnSampleClock(SampleClockEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.OnSampleCompleteSampleCompleteEventArgs">
            <summary>Sets the Shim of Task.OnSampleComplete(SampleCompleteEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.RegisterAsyncWaitHandleWaitHandle">
            <summary>Sets the Shim of Task.RegisterAsyncWaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ReleaseDelegateHandleIfNeeded">
            <summary>Sets the Shim of Task.ReleaseDelegateHandleIfNeeded()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SampleClockAddSampleClockEventHandler">
            <summary>Sets the Shim of Task.add_SampleClock(SampleClockEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SampleClockEventKeyGet">
            <summary>Sets the Shim of Task.get_SampleClockEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SampleClockRemoveSampleClockEventHandler">
            <summary>Sets the Shim of Task.remove_SampleClock(SampleClockEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SampleCompleteAddSampleCompleteEventHandler">
            <summary>Sets the Shim of Task.add_SampleComplete(SampleCompleteEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SampleCompleteEventKeyGet">
            <summary>Sets the Shim of Task.get_SampleCompleteEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SampleCompleteRemoveSampleCompleteEventHandler">
            <summary>Sets the Shim of Task.remove_SampleComplete(SampleCompleteEventHandler eh)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SetSubobjectAtIndexObjectObject">
            <summary>Sets the Shim of Task.SetSubobjectAtIndex(Object object, Object index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SetSubobjectAtIndexTypeObjectObject">
            <summary>Sets the Shim of Task.SetSubobjectAtIndex(Type subobjectType, Object object, Object index)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.Start">
            <summary>Sets the Shim of Task.Start()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.StartNewFileString">
            <summary>Sets the Shim of Task.StartNewFile(String filePath)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.StaticConstructor">
            <summary>Sets the Shim of Task.Task()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.Stop">
            <summary>Sets the Shim of Task.Stop()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.StreamGet">
            <summary>Sets the Shim of Task.get_Stream()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SuppressEventKeyGet">
            <summary>Sets the Shim of Task.get_SuppressEventKey()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SwitchScanGet">
            <summary>Sets the Shim of Task.get_SwitchScan()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SynchronizeCallbacksGet">
            <summary>Sets the Shim of Task.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SynchronizeCallbacksSetBoolean">
            <summary>Sets the Shim of Task.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SynchronizingObjectGet">
            <summary>Sets the Shim of Task.get_SynchronizingObject()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the Shim of Task.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ThrowIfDisposed">
            <summary>Sets the Shim of Task.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.TimingGet">
            <summary>Sets the Shim of Task.get_Timing()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.ToString">
            <summary>Sets the Shim of Task.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.TriggersGet">
            <summary>Sets the Shim of Task.get_Triggers()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.UnregisterAsyncWaitHandleWaitHandle">
            <summary>Sets the Shim of Task.UnregisterAsyncWaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.WaitForValidTimestampTimestampEvent">
            <summary>Sets the Shim of Task.WaitForValidTimestamp(TimestampEvent timestampEvent)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.WaitForValidTimestampTimestampEventTimeSpan">
            <summary>Sets the Shim of Task.WaitForValidTimestamp(TimestampEvent timestampEvent, TimeSpan timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.WaitUntilDone">
            <summary>Sets the Shim of Task.WaitUntilDone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.WaitUntilDoneInt32">
            <summary>Sets the Shim of Task.WaitUntilDone(Int32 millisecToWait)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.WaitUntilDoneTimeSpan">
            <summary>Sets the Shim of Task.WaitUntilDone(TimeSpan timeout)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask.WatchdogGet">
            <summary>Sets the Shim of Task.get_Watchdog()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask._Task">
            <summary>Sets the Shim of Task.!Task()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTask._Task01">
            <summary>Sets the Shim of Task.~Task()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs">
            <summary>Shim type of NationalInstruments.DAQmx.TaskDoneEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.#ctor(NationalInstruments.DAQmx.TaskDoneEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.AllInstances.CheckForException">
            <summary>Sets the Shim of TaskDoneEventArgs.CheckForException()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.AllInstances.ErrorGet">
            <summary>Sets the Shim of TaskDoneEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.AllInstances.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of TaskDoneEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of TaskDoneEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.CheckForException">
            <summary>Sets the Shim of TaskDoneEventArgs.CheckForException()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.ConstructorException">
            <summary>Sets the Shim of TaskDoneEventArgs.TaskDoneEventArgs(Exception exception)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the Shim of TaskDoneEventArgs.TaskDoneEventArgs(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.ErrorGet">
            <summary>Sets the Shim of TaskDoneEventArgs.get_Error()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.GetObjectDataExplicitSerializationInfoStreamingContext">
            <summary>Sets the Shim of TaskDoneEventArgs.GetObjectDataExplicit(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTaskDoneEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the Shim of TaskDoneEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.TimeArmStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.#ctor(NationalInstruments.DAQmx.TimeArmStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of TimeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of TimeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances.TimescaleGet">
            <summary>Sets the Shim of TimeArmStartTrigger.get_Timescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances.TimescaleSetTimeArmStartTriggerTimescale">
            <summary>Sets the Shim of TimeArmStartTrigger.set_Timescale(TimeArmStartTriggerTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of TimeArmStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances.TriggerTimeGet">
            <summary>Sets the Shim of TimeArmStartTrigger.get_TriggerTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.AllInstances.TriggerTimeSetPrecisionDateTime">
            <summary>Sets the Shim of TimeArmStartTrigger.set_TriggerTime(PrecisionDateTime value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.ConstructorTask">
            <summary>Sets the Shim of TimeArmStartTrigger.TimeArmStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of TimeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of TimeArmStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.TimescaleGet">
            <summary>Sets the Shim of TimeArmStartTrigger.get_Timescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.TimescaleSetTimeArmStartTriggerTimescale">
            <summary>Sets the Shim of TimeArmStartTrigger.set_Timescale(TimeArmStartTriggerTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.ToString">
            <summary>Sets the Shim of TimeArmStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.TriggerTimeGet">
            <summary>Sets the Shim of TimeArmStartTrigger.get_TriggerTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeArmStartTrigger.TriggerTimeSetPrecisionDateTime">
            <summary>Sets the Shim of TimeArmStartTrigger.set_TriggerTime(PrecisionDateTime value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.TimeStartTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.#ctor(NationalInstruments.DAQmx.TimeStartTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of TimeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of TimeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances.TimescaleGet">
            <summary>Sets the Shim of TimeStartTrigger.get_Timescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances.TimescaleSetTimeStartTriggerTimescale">
            <summary>Sets the Shim of TimeStartTrigger.set_Timescale(TimeStartTriggerTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of TimeStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances.TriggerTimeGet">
            <summary>Sets the Shim of TimeStartTrigger.get_TriggerTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.AllInstances.TriggerTimeSetPrecisionDateTime">
            <summary>Sets the Shim of TimeStartTrigger.set_TriggerTime(PrecisionDateTime value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.ConstructorTask">
            <summary>Sets the Shim of TimeStartTrigger.TimeStartTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of TimeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of TimeStartTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.TimescaleGet">
            <summary>Sets the Shim of TimeStartTrigger.get_Timescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.TimescaleSetTimeStartTriggerTimescale">
            <summary>Sets the Shim of TimeStartTrigger.set_Timescale(TimeStartTriggerTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.ToString">
            <summary>Sets the Shim of TimeStartTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.TriggerTimeGet">
            <summary>Sets the Shim of TimeStartTrigger.get_TriggerTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTimeStartTrigger.TriggerTimeSetPrecisionDateTime">
            <summary>Sets the Shim of TimeStartTrigger.set_TriggerTime(PrecisionDateTime value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTiming">
            <summary>Shim type of NationalInstruments.DAQmx.Timing</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTiming.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTiming.#ctor(NationalInstruments.DAQmx.Timing)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertActiveEdgeGet">
            <summary>Sets the Shim of Timing.get_AIConvertActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertActiveEdgeSetAIConvertActiveEdge">
            <summary>Sets the Shim of Timing.set_AIConvertActiveEdge(AIConvertActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertMaximumRateGet">
            <summary>Sets the Shim of Timing.get_AIConvertMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertRateGet">
            <summary>Sets the Shim of Timing.get_AIConvertRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertRateSetDouble">
            <summary>Sets the Shim of Timing.set_AIConvertRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertSourceGet">
            <summary>Sets the Shim of Timing.get_AIConvertSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertSourceSetString">
            <summary>Sets the Shim of Timing.set_AIConvertSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertTimebaseDivisorGet">
            <summary>Sets the Shim of Timing.get_AIConvertTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertTimebaseDivisorSetInt64">
            <summary>Sets the Shim of Timing.set_AIConvertTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_AIConvertTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AIConvertTimebaseSourceSetAIConvertTimebaseSource">
            <summary>Sets the Shim of Timing.set_AIConvertTimebaseSource(AIConvertTimebaseSource value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertActiveEdgeGet">
            <summary>Sets the Shim of Timing.get_AIConvertActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertActiveEdgeSetAIConvertActiveEdge">
            <summary>Sets the Shim of Timing.set_AIConvertActiveEdge(AIConvertActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertMaximumRateGet">
            <summary>Sets the Shim of Timing.get_AIConvertMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertRateGet">
            <summary>Sets the Shim of Timing.get_AIConvertRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertRateSetDouble">
            <summary>Sets the Shim of Timing.set_AIConvertRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertSourceGet">
            <summary>Sets the Shim of Timing.get_AIConvertSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertSourceSetString">
            <summary>Sets the Shim of Timing.set_AIConvertSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertTimebaseDivisorGet">
            <summary>Sets the Shim of Timing.get_AIConvertTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertTimebaseDivisorSetInt64">
            <summary>Sets the Shim of Timing.set_AIConvertTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_AIConvertTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.AIConvertTimebaseSourceSetAIConvertTimebaseSource">
            <summary>Sets the Shim of Timing.set_AIConvertTimebaseSource(AIConvertTimebaseSource value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ChangeDetectionDIFallingEdgePhysicalChannelsGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionDIFallingEdgePhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ChangeDetectionDIFallingEdgePhysicalChannelsSetString">
            <summary>Sets the Shim of Timing.set_ChangeDetectionDIFallingEdgePhysicalChannels(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ChangeDetectionDIRisingEdgePhysicalChannelsGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionDIRisingEdgePhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ChangeDetectionDIRisingEdgePhysicalChannelsSetString">
            <summary>Sets the Shim of Timing.set_ChangeDetectionDIRisingEdgePhysicalChannels(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ChangeDetectionDITristateGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionDITristate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ChangeDetectionDITristateSetBoolean">
            <summary>Sets the Shim of Timing.set_ChangeDetectionDITristate(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ChangeDetectionOverflowedGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionOverflowed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureChangeDetectionStringStringSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureChangeDetection(String diRisingEdgePhysicalChannels, String diFallingEdgePhysicalChannels, SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureChangeDetectionStringStringSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureChangeDetection(String diRisingEdgePhysicalChannels, String diFallingEdgePhysicalChannels, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureHandshakingBurstExportClockStringDoubleDigitalLevelPauseTriggerConditionReadyForTransferEventLevelActiveLevelSampleClockPulsePolaritySampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureHandshakingBurstExportClock(String sampleClockOutputTerminal, Double rate, DigitalLevelPauseTriggerCondition pauseCondition, ReadyForTransferEventLevelActiveLevel level, SampleClockPulsePolarity pulsePolarity, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureHandshakingBurstImportClockStringDoubleSampleClockActiveEdgeDigitalLevelPauseTriggerConditionReadyForTransferEventLevelActiveLevelSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureHandshakingBurstImportClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, DigitalLevelPauseTriggerCondition pauseCondition, ReadyForTransferEventLevelActiveLevel level, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureHandshakingSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureHandshaking(SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureHandshakingSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureHandshaking(SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureImplicitSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureImplicit(SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureImplicitSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureImplicit(SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigurePipelinedSampleClockStringDoubleSampleClockActiveEdgeSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigurePipelinedSampleClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureSampleClockStringDoubleSampleClockActiveEdgeSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureSampleClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ConfigureSampleClockStringDoubleSampleClockActiveEdgeSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureSampleClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DelayFromSampleClockGet">
            <summary>Sets the Shim of Timing.get_DelayFromSampleClock()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DelayFromSampleClockSetDouble">
            <summary>Sets the Shim of Timing.set_DelayFromSampleClock(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DelayFromSampleClockUnitsGet">
            <summary>Sets the Shim of Timing.get_DelayFromSampleClockUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DelayFromSampleClockUnitsSetDelayFromSampleClockUnits">
            <summary>Sets the Shim of Timing.set_DelayFromSampleClockUnits(DelayFromSampleClockUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterEnableGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of Timing.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of Timing.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of Timing.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleClockOffsetGet">
            <summary>Sets the Shim of Timing.get_FirstSampleClockOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleClockOffsetSetDouble">
            <summary>Sets the Shim of Timing.set_FirstSampleClockOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleClockTimeGet">
            <summary>Sets the Shim of Timing.get_FirstSampleClockTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleClockTimeSetPrecisionDateTime">
            <summary>Sets the Shim of Timing.set_FirstSampleClockTime(PrecisionDateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleClockTimescaleGet">
            <summary>Sets the Shim of Timing.get_FirstSampleClockTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleClockTimescaleSetFirstSampleClockTimescale">
            <summary>Sets the Shim of Timing.set_FirstSampleClockTimescale(FirstSampleClockTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleTimestampEnableGet">
            <summary>Sets the Shim of Timing.get_FirstSampleTimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleTimestampEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_FirstSampleTimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleTimestampGet">
            <summary>Sets the Shim of Timing.get_FirstSampleTimestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleTimestampTimescaleGet">
            <summary>Sets the Shim of Timing.get_FirstSampleTimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.FirstSampleTimestampTimescaleSetFirstSampleTimestampTimescale">
            <summary>Sets the Shim of Timing.set_FirstSampleTimestampTimescale(FirstSampleTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of Timing.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of Timing.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.GetServiceType">
            <summary>Sets the Shim of Timing.GetService(Type serviceType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.HandshakeDelayAfterTransferGet">
            <summary>Sets the Shim of Timing.get_HandshakeDelayAfterTransfer()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.HandshakeDelayAfterTransferSetDouble">
            <summary>Sets the Shim of Timing.set_HandshakeDelayAfterTransfer(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.HandshakeSampleInputDataConditionGet">
            <summary>Sets the Shim of Timing.get_HandshakeSampleInputDataCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.HandshakeSampleInputDataConditionSetHandshakeSampleInputDataCondition">
            <summary>Sets the Shim of Timing.set_HandshakeSampleInputDataCondition(HandshakeSampleInputDataCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.HandshakeStartConditionGet">
            <summary>Sets the Shim of Timing.get_HandshakeStartCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.HandshakeStartConditionSetHandshakeStartCondition">
            <summary>Sets the Shim of Timing.set_HandshakeStartCondition(HandshakeStartCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ImplicitUnderflowBehaviorGet">
            <summary>Sets the Shim of Timing.get_ImplicitUnderflowBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ImplicitUnderflowBehaviorSetImplicitUnderflowBehavior">
            <summary>Sets the Shim of Timing.set_ImplicitUnderflowBehavior(ImplicitUnderflowBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of Timing.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ItemGetString">
            <summary>Sets the Shim of Timing.get_Item(String deviceNames)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.MasterTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_MasterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.MasterTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_MasterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.MasterTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_MasterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.MasterTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_MasterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.OnDemandAOIsSimultaneousGet">
            <summary>Sets the Shim of Timing.get_OnDemandAOIsSimultaneous()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.OnDemandAOIsSimultaneousSetBoolean">
            <summary>Sets the Shim of Timing.set_OnDemandAOIsSimultaneous(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ReferenceClockRateGet">
            <summary>Sets the Shim of Timing.get_ReferenceClockRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ReferenceClockRateSetDouble">
            <summary>Sets the Shim of Timing.set_ReferenceClockRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ReferenceClockSourceGet">
            <summary>Sets the Shim of Timing.get_ReferenceClockSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ReferenceClockSourceSetString">
            <summary>Sets the Shim of Timing.set_ReferenceClockSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockActiveEdgeGet">
            <summary>Sets the Shim of Timing.get_SampleClockActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockActiveEdgeSetSampleClockActiveEdge">
            <summary>Sets the Shim of Timing.set_SampleClockActiveEdge(SampleClockActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterEnableGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockMaximumRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockOverrunBehaviorGet">
            <summary>Sets the Shim of Timing.get_SampleClockOverrunBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockOverrunBehaviorSetSampleClockOverrunBehavior">
            <summary>Sets the Shim of Timing.set_SampleClockOverrunBehavior(SampleClockOverrunBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockRateSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockSourceGet">
            <summary>Sets the Shim of Timing.get_SampleClockSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockSourceSetString">
            <summary>Sets the Shim of Timing.set_SampleClockSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTerminalGet">
            <summary>Sets the Shim of Timing.get_SampleClockTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseActiveEdgeGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseActiveEdgeSetSampleClockTimebaseActiveEdge">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseActiveEdge(SampleClockTimebaseActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseDivisorGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseDivisorSetInt64">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseMasterTimebaseDivisorGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseMasterTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseMasterTimebaseDivisorSetInt64">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseMasterTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimebaseTerminalGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimingResponseModeGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimingResponseMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockTimingResponseModeSetSampleClockTimingResponseMode">
            <summary>Sets the Shim of Timing.set_SampleClockTimingResponseMode(SampleClockTimingResponseMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockUnderflowBehaviorGet">
            <summary>Sets the Shim of Timing.get_SampleClockUnderflowBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleClockUnderflowBehaviorSetSampleClockUnderflowBehavior">
            <summary>Sets the Shim of Timing.set_SampleClockUnderflowBehavior(SampleClockUnderflowBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleQuantityModeGet">
            <summary>Sets the Shim of Timing.get_SampleQuantityMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleQuantityModeSetSampleQuantityMode">
            <summary>Sets the Shim of Timing.set_SampleQuantityMode(SampleQuantityMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleTimingEngineGet">
            <summary>Sets the Shim of Timing.get_SampleTimingEngine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleTimingEngineSetInt64">
            <summary>Sets the Shim of Timing.set_SampleTimingEngine(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleTimingTypeGet">
            <summary>Sets the Shim of Timing.get_SampleTimingType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SampleTimingTypeSetSampleTimingType">
            <summary>Sets the Shim of Timing.set_SampleTimingType(SampleTimingType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SamplesPerChannelGet">
            <summary>Sets the Shim of Timing.get_SamplesPerChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SamplesPerChannelSetInt64">
            <summary>Sets the Shim of Timing.set_SamplesPerChannel(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SinglePointGet">
            <summary>Sets the Shim of Timing.get_SinglePoint()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationClockIntervalGet">
            <summary>Sets the Shim of Timing.get_SynchronizationClockInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationClockIntervalSetInt64">
            <summary>Sets the Shim of Timing.set_SynchronizationClockInterval(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseMinimumDelayToStartGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseMinimumDelayToStart()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseMinimumDelayToStartSetDouble">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseMinimumDelayToStart(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseResetDelayGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseResetDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseResetDelaySetDouble">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseResetDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseResetTimeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseResetTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseSourceGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseSourceSetString">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTerminalGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTimeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTimescaleGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTimescaleSetSynchronizationPulseTimescale">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseTimescale(SynchronizationPulseTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTriggerTimeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTriggerTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTriggerTimeSetPrecisionDateTime">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseTriggerTime(PrecisionDateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTypeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.SynchronizationPulseTypeSetSynchronizationPulseType">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseType(SynchronizationPulseType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.TaskDisposed">
            <summary>Sets the Shim of Timing.TaskDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ThrowIfDisposed">
            <summary>Sets the Shim of Timing.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ThrowIfHasContext">
            <summary>Sets the Shim of Timing.ThrowIfHasContext()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances.ToString01">
            <summary>Sets the Shim of Timing.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.AllInstances._Timing">
            <summary>Sets the Shim of Timing.!Timing()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTiming.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTiming.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTiming.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTiming.Bind(System.IServiceProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ChangeDetectionDIFallingEdgePhysicalChannelsGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionDIFallingEdgePhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ChangeDetectionDIFallingEdgePhysicalChannelsSetString">
            <summary>Sets the Shim of Timing.set_ChangeDetectionDIFallingEdgePhysicalChannels(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ChangeDetectionDIRisingEdgePhysicalChannelsGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionDIRisingEdgePhysicalChannels()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ChangeDetectionDIRisingEdgePhysicalChannelsSetString">
            <summary>Sets the Shim of Timing.set_ChangeDetectionDIRisingEdgePhysicalChannels(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ChangeDetectionDITristateGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionDITristate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ChangeDetectionDITristateSetBoolean">
            <summary>Sets the Shim of Timing.set_ChangeDetectionDITristate(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ChangeDetectionOverflowedGet">
            <summary>Sets the Shim of Timing.get_ChangeDetectionOverflowed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureChangeDetectionStringStringSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureChangeDetection(String diRisingEdgePhysicalChannels, String diFallingEdgePhysicalChannels, SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureChangeDetectionStringStringSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureChangeDetection(String diRisingEdgePhysicalChannels, String diFallingEdgePhysicalChannels, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureHandshakingBurstExportClockStringDoubleDigitalLevelPauseTriggerConditionReadyForTransferEventLevelActiveLevelSampleClockPulsePolaritySampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureHandshakingBurstExportClock(String sampleClockOutputTerminal, Double rate, DigitalLevelPauseTriggerCondition pauseCondition, ReadyForTransferEventLevelActiveLevel level, SampleClockPulsePolarity pulsePolarity, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureHandshakingBurstImportClockStringDoubleSampleClockActiveEdgeDigitalLevelPauseTriggerConditionReadyForTransferEventLevelActiveLevelSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureHandshakingBurstImportClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, DigitalLevelPauseTriggerCondition pauseCondition, ReadyForTransferEventLevelActiveLevel level, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureHandshakingSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureHandshaking(SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureHandshakingSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureHandshaking(SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureImplicitSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureImplicit(SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureImplicitSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureImplicit(SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigurePipelinedSampleClockStringDoubleSampleClockActiveEdgeSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigurePipelinedSampleClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureSampleClockStringDoubleSampleClockActiveEdgeSampleQuantityMode">
            <summary>Sets the Shim of Timing.ConfigureSampleClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, SampleQuantityMode sampleMode)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConfigureSampleClockStringDoubleSampleClockActiveEdgeSampleQuantityModeInt32">
            <summary>Sets the Shim of Timing.ConfigureSampleClock(String signalSource, Double rate, SampleClockActiveEdge activeEdge, SampleQuantityMode sampleMode, Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConstructorTask">
            <summary>Sets the Shim of Timing.Timing(Task owner)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ConstructorTaskString">
            <summary>Sets the Shim of Timing.Timing(Task owner, String context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DelayFromSampleClockGet">
            <summary>Sets the Shim of Timing.get_DelayFromSampleClock()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DelayFromSampleClockSetDouble">
            <summary>Sets the Shim of Timing.set_DelayFromSampleClock(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DelayFromSampleClockUnitsGet">
            <summary>Sets the Shim of Timing.get_DelayFromSampleClockUnits()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DelayFromSampleClockUnitsSetDelayFromSampleClockUnits">
            <summary>Sets the Shim of Timing.set_DelayFromSampleClockUnits(DelayFromSampleClockUnits value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterEnableGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_DigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of Timing.set_DigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_DigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_DigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_DigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalSynchronizationEnableGet">
            <summary>Sets the Shim of Timing.get_DigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_DigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.DisposeBoolean">
            <summary>Sets the Shim of Timing.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleClockOffsetGet">
            <summary>Sets the Shim of Timing.get_FirstSampleClockOffset()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleClockOffsetSetDouble">
            <summary>Sets the Shim of Timing.set_FirstSampleClockOffset(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleClockTimeGet">
            <summary>Sets the Shim of Timing.get_FirstSampleClockTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleClockTimeSetPrecisionDateTime">
            <summary>Sets the Shim of Timing.set_FirstSampleClockTime(PrecisionDateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleClockTimescaleGet">
            <summary>Sets the Shim of Timing.get_FirstSampleClockTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleClockTimescaleSetFirstSampleClockTimescale">
            <summary>Sets the Shim of Timing.set_FirstSampleClockTimescale(FirstSampleClockTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleTimestampEnableGet">
            <summary>Sets the Shim of Timing.get_FirstSampleTimestampEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleTimestampEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_FirstSampleTimestampEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleTimestampGet">
            <summary>Sets the Shim of Timing.get_FirstSampleTimestamp()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleTimestampTimescaleGet">
            <summary>Sets the Shim of Timing.get_FirstSampleTimestampTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.FirstSampleTimestampTimescaleSetFirstSampleTimestampTimescale">
            <summary>Sets the Shim of Timing.set_FirstSampleTimestampTimescale(FirstSampleTimestampTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of Timing.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of Timing.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.GetServiceType">
            <summary>Sets the Shim of Timing.GetService(Type serviceType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.HandshakeDelayAfterTransferGet">
            <summary>Sets the Shim of Timing.get_HandshakeDelayAfterTransfer()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.HandshakeDelayAfterTransferSetDouble">
            <summary>Sets the Shim of Timing.set_HandshakeDelayAfterTransfer(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.HandshakeSampleInputDataConditionGet">
            <summary>Sets the Shim of Timing.get_HandshakeSampleInputDataCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.HandshakeSampleInputDataConditionSetHandshakeSampleInputDataCondition">
            <summary>Sets the Shim of Timing.set_HandshakeSampleInputDataCondition(HandshakeSampleInputDataCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.HandshakeStartConditionGet">
            <summary>Sets the Shim of Timing.get_HandshakeStartCondition()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.HandshakeStartConditionSetHandshakeStartCondition">
            <summary>Sets the Shim of Timing.set_HandshakeStartCondition(HandshakeStartCondition value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ImplicitUnderflowBehaviorGet">
            <summary>Sets the Shim of Timing.get_ImplicitUnderflowBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ImplicitUnderflowBehaviorSetImplicitUnderflowBehavior">
            <summary>Sets the Shim of Timing.set_ImplicitUnderflowBehavior(ImplicitUnderflowBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.InitializeSubobjects">
            <summary>Sets the Shim of Timing.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ItemGetString">
            <summary>Sets the Shim of Timing.get_Item(String deviceNames)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.MasterTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_MasterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.MasterTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_MasterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.MasterTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_MasterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.MasterTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_MasterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.OnDemandAOIsSimultaneousGet">
            <summary>Sets the Shim of Timing.get_OnDemandAOIsSimultaneous()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.OnDemandAOIsSimultaneousSetBoolean">
            <summary>Sets the Shim of Timing.set_OnDemandAOIsSimultaneous(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ReferenceClockRateGet">
            <summary>Sets the Shim of Timing.get_ReferenceClockRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ReferenceClockRateSetDouble">
            <summary>Sets the Shim of Timing.set_ReferenceClockRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ReferenceClockSourceGet">
            <summary>Sets the Shim of Timing.get_ReferenceClockSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ReferenceClockSourceSetString">
            <summary>Sets the Shim of Timing.set_ReferenceClockSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockActiveEdgeGet">
            <summary>Sets the Shim of Timing.get_SampleClockActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockActiveEdgeSetSampleClockActiveEdge">
            <summary>Sets the Shim of Timing.set_SampleClockActiveEdge(SampleClockActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterEnableGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterMinimumPulseWidthGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterMinimumPulseWidth()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterMinimumPulseWidthSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterMinimumPulseWidth(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalFilterTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalFilterTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalFilterTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalSynchronizationEnableGet">
            <summary>Sets the Shim of Timing.get_SampleClockDigitalSynchronizationEnable()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockDigitalSynchronizationEnableSetBoolean">
            <summary>Sets the Shim of Timing.set_SampleClockDigitalSynchronizationEnable(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockMaximumRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockMaximumRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockOverrunBehaviorGet">
            <summary>Sets the Shim of Timing.get_SampleClockOverrunBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockOverrunBehaviorSetSampleClockOverrunBehavior">
            <summary>Sets the Shim of Timing.set_SampleClockOverrunBehavior(SampleClockOverrunBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockRateSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockSourceGet">
            <summary>Sets the Shim of Timing.get_SampleClockSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockSourceSetString">
            <summary>Sets the Shim of Timing.set_SampleClockSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTerminalGet">
            <summary>Sets the Shim of Timing.get_SampleClockTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseActiveEdgeGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseActiveEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseActiveEdgeSetSampleClockTimebaseActiveEdge">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseActiveEdge(SampleClockTimebaseActiveEdge value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseDivisorGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseDivisorSetInt64">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseMasterTimebaseDivisorGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseMasterTimebaseDivisor()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseMasterTimebaseDivisorSetInt64">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseMasterTimebaseDivisor(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseRateGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseRate()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseRateSetDouble">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseRate(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseSourceGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseSourceSetString">
            <summary>Sets the Shim of Timing.set_SampleClockTimebaseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimebaseTerminalGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimebaseTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimingResponseModeGet">
            <summary>Sets the Shim of Timing.get_SampleClockTimingResponseMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockTimingResponseModeSetSampleClockTimingResponseMode">
            <summary>Sets the Shim of Timing.set_SampleClockTimingResponseMode(SampleClockTimingResponseMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockUnderflowBehaviorGet">
            <summary>Sets the Shim of Timing.get_SampleClockUnderflowBehavior()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleClockUnderflowBehaviorSetSampleClockUnderflowBehavior">
            <summary>Sets the Shim of Timing.set_SampleClockUnderflowBehavior(SampleClockUnderflowBehavior value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleQuantityModeGet">
            <summary>Sets the Shim of Timing.get_SampleQuantityMode()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleQuantityModeSetSampleQuantityMode">
            <summary>Sets the Shim of Timing.set_SampleQuantityMode(SampleQuantityMode value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleTimingEngineGet">
            <summary>Sets the Shim of Timing.get_SampleTimingEngine()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleTimingEngineSetInt64">
            <summary>Sets the Shim of Timing.set_SampleTimingEngine(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleTimingTypeGet">
            <summary>Sets the Shim of Timing.get_SampleTimingType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SampleTimingTypeSetSampleTimingType">
            <summary>Sets the Shim of Timing.set_SampleTimingType(SampleTimingType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SamplesPerChannelGet">
            <summary>Sets the Shim of Timing.get_SamplesPerChannel()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SamplesPerChannelSetInt64">
            <summary>Sets the Shim of Timing.set_SamplesPerChannel(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SinglePointGet">
            <summary>Sets the Shim of Timing.get_SinglePoint()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationClockIntervalGet">
            <summary>Sets the Shim of Timing.get_SynchronizationClockInterval()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationClockIntervalSetInt64">
            <summary>Sets the Shim of Timing.set_SynchronizationClockInterval(Int64 value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseMinimumDelayToStartGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseMinimumDelayToStart()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseMinimumDelayToStartSetDouble">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseMinimumDelayToStart(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseResetDelayGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseResetDelay()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseResetDelaySetDouble">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseResetDelay(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseResetTimeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseResetTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseSourceGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseSource()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseSourceSetString">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseSource(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTerminalGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTerminal()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTimeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTimescaleGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTimescale()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTimescaleSetSynchronizationPulseTimescale">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseTimescale(SynchronizationPulseTimescale value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTriggerTimeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseTriggerTime()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTriggerTimeSetPrecisionDateTime">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseTriggerTime(PrecisionDateTime value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTypeGet">
            <summary>Sets the Shim of Timing.get_SynchronizationPulseType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.SynchronizationPulseTypeSetSynchronizationPulseType">
            <summary>Sets the Shim of Timing.set_SynchronizationPulseType(SynchronizationPulseType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.TaskDisposed">
            <summary>Sets the Shim of Timing.TaskDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ThrowIfDisposed">
            <summary>Sets the Shim of Timing.ThrowIfDisposed()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ThrowIfHasContext">
            <summary>Sets the Shim of Timing.ThrowIfHasContext()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming.ToString">
            <summary>Sets the Shim of Timing.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTiming._Timing">
            <summary>Sets the Shim of Timing.!Timing()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTriggers">
            <summary>Shim type of NationalInstruments.DAQmx.Triggers</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTriggers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTriggers.#ctor(NationalInstruments.DAQmx.Triggers)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AdvanceTriggerGet">
            <summary>Sets the Shim of Triggers.get_AdvanceTrigger()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.AdvanceTriggerGet">
            <summary>Sets the Shim of Triggers.get_AdvanceTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.ArmStartTriggerGet">
            <summary>Sets the Shim of Triggers.get_ArmStartTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.HandshakeTriggerGet">
            <summary>Sets the Shim of Triggers.get_HandshakeTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of Triggers.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.PauseTriggerGet">
            <summary>Sets the Shim of Triggers.get_PauseTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.ReferenceTriggerGet">
            <summary>Sets the Shim of Triggers.get_ReferenceTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.StartTriggerGet">
            <summary>Sets the Shim of Triggers.get_StartTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.SynchronizationTypeGet">
            <summary>Sets the Shim of Triggers.get_SynchronizationType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.SynchronizationTypeSetTriggerSynchronizationType">
            <summary>Sets the Shim of Triggers.set_SynchronizationType(TriggerSynchronizationType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.ToString01">
            <summary>Sets the Shim of Triggers.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.AllInstances.WatchdogExpirationTriggerGet">
            <summary>Sets the Shim of Triggers.get_WatchdogExpirationTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.ArmStartTriggerGet">
            <summary>Sets the Shim of Triggers.get_ArmStartTrigger()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTriggers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimTriggers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.ConstructorTask">
            <summary>Sets the Shim of Triggers.Triggers(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.HandshakeTriggerGet">
            <summary>Sets the Shim of Triggers.get_HandshakeTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.InitializeSubobjects">
            <summary>Sets the Shim of Triggers.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.PauseTriggerGet">
            <summary>Sets the Shim of Triggers.get_PauseTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.ReferenceTriggerGet">
            <summary>Sets the Shim of Triggers.get_ReferenceTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.StartTriggerGet">
            <summary>Sets the Shim of Triggers.get_StartTrigger()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.SynchronizationTypeGet">
            <summary>Sets the Shim of Triggers.get_SynchronizationType()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.SynchronizationTypeSetTriggerSynchronizationType">
            <summary>Sets the Shim of Triggers.set_SynchronizationType(TriggerSynchronizationType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.ToString">
            <summary>Sets the Shim of Triggers.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimTriggers.WatchdogExpirationTriggerGet">
            <summary>Sets the Shim of Triggers.get_WatchdogExpirationTrigger()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimWatchdog">
            <summary>Shim type of NationalInstruments.DAQmx.Watchdog</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdog.#ctor(NationalInstruments.DAQmx.Watchdog)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.ClearExpiration">
            <summary>Sets the Shim of Watchdog.ClearExpiration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.GetAOExpirationStateString">
            <summary>Sets the Shim of Watchdog.GetAOExpirationState(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.GetAOExpirationStateTypeString">
            <summary>Sets the Shim of Watchdog.GetAOExpirationStateType(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.GetCOExpirationStateString">
            <summary>Sets the Shim of Watchdog.GetCOExpirationState(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.GetDOExpirationStateString">
            <summary>Sets the Shim of Watchdog.GetDOExpirationState(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of Watchdog.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of Watchdog.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.HasExpiredGet">
            <summary>Sets the Shim of Watchdog.get_HasExpired()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.ResetTimer">
            <summary>Sets the Shim of Watchdog.ResetTimer()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.SetAOExpirationStateStringDouble">
            <summary>Sets the Shim of Watchdog.SetAOExpirationState(String physicalChannelName, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.SetAOExpirationStateTypeStringWatchdogAOExpirationStateType">
            <summary>Sets the Shim of Watchdog.SetAOExpirationStateType(String physicalChannelName, WatchdogAOExpirationStateType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.SetCOExpirationStateStringWatchdogCOExpirationState">
            <summary>Sets the Shim of Watchdog.SetCOExpirationState(String physicalChannelName, WatchdogCOExpirationState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.SetDOExpirationStateStringWatchdogDOExpirationState">
            <summary>Sets the Shim of Watchdog.SetDOExpirationState(String physicalChannelName, WatchdogDOExpirationState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.TimeoutGet">
            <summary>Sets the Shim of Watchdog.get_Timeout()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.TimeoutSetDouble">
            <summary>Sets the Shim of Watchdog.set_Timeout(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.AllInstances.ToString01">
            <summary>Sets the Shim of Watchdog.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdog.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.ClearExpiration">
            <summary>Sets the Shim of Watchdog.ClearExpiration()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.ConstructorTask">
            <summary>Sets the Shim of Watchdog.Watchdog(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.GetAOExpirationStateString">
            <summary>Sets the Shim of Watchdog.GetAOExpirationState(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.GetAOExpirationStateTypeString">
            <summary>Sets the Shim of Watchdog.GetAOExpirationStateType(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.GetCOExpirationStateString">
            <summary>Sets the Shim of Watchdog.GetCOExpirationState(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.GetDOExpirationStateString">
            <summary>Sets the Shim of Watchdog.GetDOExpirationState(String physicalChannelName)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of Watchdog.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of Watchdog.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.HasExpiredGet">
            <summary>Sets the Shim of Watchdog.get_HasExpired()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.ResetTimer">
            <summary>Sets the Shim of Watchdog.ResetTimer()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.SetAOExpirationStateStringDouble">
            <summary>Sets the Shim of Watchdog.SetAOExpirationState(String physicalChannelName, Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.SetAOExpirationStateTypeStringWatchdogAOExpirationStateType">
            <summary>Sets the Shim of Watchdog.SetAOExpirationStateType(String physicalChannelName, WatchdogAOExpirationStateType value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.SetCOExpirationStateStringWatchdogCOExpirationState">
            <summary>Sets the Shim of Watchdog.SetCOExpirationState(String physicalChannelName, WatchdogCOExpirationState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.SetDOExpirationStateStringWatchdogDOExpirationState">
            <summary>Sets the Shim of Watchdog.SetDOExpirationState(String physicalChannelName, WatchdogDOExpirationState value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.TimeoutGet">
            <summary>Sets the Shim of Watchdog.get_Timeout()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.TimeoutSetDouble">
            <summary>Sets the Shim of Watchdog.set_Timeout(Double value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdog.ToString">
            <summary>Sets the Shim of Watchdog.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger">
            <summary>Shim type of NationalInstruments.DAQmx.WatchdogExpirationTrigger</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.#ctor(NationalInstruments.DAQmx.WatchdogExpirationTrigger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.ConfigureDigitalEdgeTriggerStringDigitalEdgeWatchdogExpirationTriggerEdge">
            <summary>Sets the Shim of WatchdogExpirationTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeWatchdogExpirationTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.ConfigureNone">
            <summary>Sets the Shim of WatchdogExpirationTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.DigitalEdgeGet">
            <summary>Sets the Shim of WatchdogExpirationTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of WatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of WatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.InitializeSubobjects">
            <summary>Sets the Shim of WatchdogExpirationTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.ToString01">
            <summary>Sets the Shim of WatchdogExpirationTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.TriggerOnNetworkConnectionLostGet">
            <summary>Sets the Shim of WatchdogExpirationTrigger.get_TriggerOnNetworkConnectionLost()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.TriggerOnNetworkConnectionLostSetBoolean">
            <summary>Sets the Shim of WatchdogExpirationTrigger.set_TriggerOnNetworkConnectionLost(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.TypeGet">
            <summary>Sets the Shim of WatchdogExpirationTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.AllInstances.TypeSetWatchdogExpirationTriggerType">
            <summary>Sets the Shim of WatchdogExpirationTrigger.set_Type(WatchdogExpirationTriggerType value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.Bind(NationalInstruments.DAQmx.IFilteredTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.ConfigureDigitalEdgeTriggerStringDigitalEdgeWatchdogExpirationTriggerEdge">
            <summary>Sets the Shim of WatchdogExpirationTrigger.ConfigureDigitalEdgeTrigger(String source, DigitalEdgeWatchdogExpirationTriggerEdge edge)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.ConfigureNone">
            <summary>Sets the Shim of WatchdogExpirationTrigger.ConfigureNone()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.ConstructorTask">
            <summary>Sets the Shim of WatchdogExpirationTrigger.WatchdogExpirationTrigger(Task par)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.DigitalEdgeGet">
            <summary>Sets the Shim of WatchdogExpirationTrigger.get_DigitalEdge()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the Shim of WatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the Shim of WatchdogExpirationTrigger.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.InitializeSubobjects">
            <summary>Sets the Shim of WatchdogExpirationTrigger.InitializeSubobjects()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.ToString">
            <summary>Sets the Shim of WatchdogExpirationTrigger.ToString()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.TriggerOnNetworkConnectionLostGet">
            <summary>Sets the Shim of WatchdogExpirationTrigger.get_TriggerOnNetworkConnectionLost()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.TriggerOnNetworkConnectionLostSetBoolean">
            <summary>Sets the Shim of WatchdogExpirationTrigger.set_TriggerOnNetworkConnectionLost(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.TypeGet">
            <summary>Sets the Shim of WatchdogExpirationTrigger.get_Type()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.ShimWatchdogExpirationTrigger.TypeSetWatchdogExpirationTriggerType">
            <summary>Sets the Shim of WatchdogExpirationTrigger.set_Type(WatchdogExpirationTriggerType value)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader">
            <summary>Stub type of NationalInstruments.DAQmx.AnalogMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubAnalogMultiChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubAnalogMultiChannelReader.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.InitializeStub">
            <summary>Initializes a new instance of type StubAnalogMultiChannelReader</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.SynchronizeCallbacks">
            <summary>Sets the stub of AnalogMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of AnalogMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of AnalogMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.SynchronizingObject">
            <summary>Sets the stub of AnalogMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.SynchronizingObjectGet">
            <summary>Sets the stub of AnalogMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of AnalogMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.ToString">
            <summary>Sets the Stub of AnalogMultiChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelReader.ToString01">
            <summary>Sets the stub of AnalogMultiChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter">
            <summary>Stub type of NationalInstruments.DAQmx.AnalogMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubAnalogMultiChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubAnalogMultiChannelWriter.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.InitializeStub">
            <summary>Initializes a new instance of type StubAnalogMultiChannelWriter</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.SynchronizeCallbacks">
            <summary>Sets the stub of AnalogMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of AnalogMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of AnalogMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.SynchronizingObject">
            <summary>Sets the stub of AnalogMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.SynchronizingObjectGet">
            <summary>Sets the stub of AnalogMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of AnalogMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.ToString">
            <summary>Sets the Stub of AnalogMultiChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogMultiChannelWriter.ToString01">
            <summary>Sets the stub of AnalogMultiChannelWriter.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader">
            <summary>Stub type of NationalInstruments.DAQmx.AnalogSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubAnalogSingleChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubAnalogSingleChannelReader.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(System.Int32,System.AsyncCallback,System.Object,System.Double[])">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(System.Int32,System.AsyncCallback,System.Object,System.Double[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleArray">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSampleInt32AsyncCallbackObjectDoubleArrayReallocationPolicy">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.DAQmx.AIPowerMeasurement[])">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.DAQmx.AIPowerMeasurement[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementArray">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementArrayReallocationPolicy">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double})">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(System.TimeSpan,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double})">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(System.TimeSpan,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDouble">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformInt32AsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDouble">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginMemoryOptimizedReadWaveformTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginMemoryOptimizedReadWaveform(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadMultiSample(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadMultiSampleInt32AsyncCallbackObject">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadMultiSamplePower(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadMultiSamplePowerInt32AsyncCallbackObject">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadSingleSample(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadSingleSampleAsyncCallbackObject">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadSingleSamplePower(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadSingleSamplePowerAsyncCallbackObject">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadWaveform(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadWaveform(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of AnalogSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of AnalogSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndMemoryOptimizedReadMultiSample(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndMemoryOptimizedReadMultiSampleIAsyncResultInt32Out">
            <summary>Sets the stub of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndMemoryOptimizedReadMultiSamplePower(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndMemoryOptimizedReadMultiSamplePowerIAsyncResultInt32Out">
            <summary>Sets the stub of AnalogSingleChannelReader.EndMemoryOptimizedReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndMemoryOptimizedReadWaveform(System.IAsyncResult)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndMemoryOptimizedReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndMemoryOptimizedReadWaveformIAsyncResult">
            <summary>Sets the stub of AnalogSingleChannelReader.EndMemoryOptimizedReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadMultiSample(System.IAsyncResult)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadMultiSampleIAsyncResult">
            <summary>Sets the stub of AnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadMultiSamplePower(System.IAsyncResult)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadMultiSamplePowerIAsyncResult">
            <summary>Sets the stub of AnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadSingleSample(System.IAsyncResult)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadSingleSampleIAsyncResult">
            <summary>Sets the stub of AnalogSingleChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadSingleSamplePower(System.IAsyncResult)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadSingleSamplePowerIAsyncResult">
            <summary>Sets the stub of AnalogSingleChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadWaveform(System.IAsyncResult)">
            <summary>Sets the Stub of AnalogSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.EndReadWaveformIAsyncResult">
            <summary>Sets the stub of AnalogSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.InitializeStub">
            <summary>Initializes a new instance of type StubAnalogSingleChannelReader</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSample(System.Int32,System.Double[]@,System.Int32@)">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSample(System.Int32,System.Double[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSampleInt32DoubleArrayRefInt32Out">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSampleInt32DoubleArrayRefReallocationPolicyInt32Out">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(System.Int32,NationalInstruments.DAQmx.AIPowerMeasurement[]@,System.Int32@)">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(System.Int32,NationalInstruments.DAQmx.AIPowerMeasurement[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePowerInt32AIPowerMeasurementArrayRefInt32Out">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePowerInt32AIPowerMeasurementArrayRefReallocationPolicyInt32Out">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveform(System.Int32,NationalInstruments.AnalogWaveform{System.Double})">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveform(System.TimeSpan,NationalInstruments.AnalogWaveform{System.Double})">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveform(System.Int32,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveform(System.TimeSpan,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDouble">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveformInt32AnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDouble">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.MemoryOptimizedReadWaveformTimeSpanAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of AnalogSingleChannelReader.MemoryOptimizedReadWaveform(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadMultiSample(System.Int32)">
            <summary>Sets the Stub of AnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadMultiSampleInt32">
            <summary>Sets the stub of AnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadMultiSamplePower(System.Int32)">
            <summary>Sets the Stub of AnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadMultiSamplePowerInt32">
            <summary>Sets the stub of AnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadSingleSample">
            <summary>Sets the Stub of AnalogSingleChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadSingleSample01">
            <summary>Sets the stub of AnalogSingleChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadSingleSamplePower">
            <summary>Sets the Stub of AnalogSingleChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadSingleSamplePower01">
            <summary>Sets the stub of AnalogSingleChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadWaveform(System.Int32)">
            <summary>Sets the Stub of AnalogSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadWaveform(System.TimeSpan)">
            <summary>Sets the Stub of AnalogSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadWaveformInt32">
            <summary>Sets the stub of AnalogSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ReadWaveformTimeSpan">
            <summary>Sets the stub of AnalogSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.SynchronizeCallbacks">
            <summary>Sets the stub of AnalogSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of AnalogSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of AnalogSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.SynchronizingObject">
            <summary>Sets the stub of AnalogSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.SynchronizingObjectGet">
            <summary>Sets the stub of AnalogSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of AnalogSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ToString">
            <summary>Sets the Stub of AnalogSingleChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelReader.ToString01">
            <summary>Sets the stub of AnalogSingleChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter">
            <summary>Stub type of NationalInstruments.DAQmx.AnalogSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubAnalogSingleChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubAnalogSingleChannelWriter.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.InitializeStub">
            <summary>Initializes a new instance of type StubAnalogSingleChannelWriter</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.SynchronizeCallbacks">
            <summary>Sets the stub of AnalogSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of AnalogSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of AnalogSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.SynchronizingObject">
            <summary>Sets the stub of AnalogSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.SynchronizingObjectGet">
            <summary>Sets the stub of AnalogSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of AnalogSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.ToString">
            <summary>Sets the Stub of AnalogSingleChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogSingleChannelWriter.ToString01">
            <summary>Sets the stub of AnalogSingleChannelWriter.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader">
            <summary>Stub type of NationalInstruments.DAQmx.AnalogUnscaledReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubAnalogUnscaledReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubAnalogUnscaledReader.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.InitializeStub">
            <summary>Initializes a new instance of type StubAnalogUnscaledReader</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.SynchronizeCallbacks">
            <summary>Sets the stub of AnalogUnscaledReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of AnalogUnscaledReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of AnalogUnscaledReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.SynchronizingObject">
            <summary>Sets the stub of AnalogUnscaledReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.SynchronizingObjectGet">
            <summary>Sets the stub of AnalogUnscaledReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of AnalogUnscaledReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.ToString">
            <summary>Sets the Stub of AnalogUnscaledReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledReader.ToString01">
            <summary>Sets the stub of AnalogUnscaledReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter">
            <summary>Stub type of NationalInstruments.DAQmx.AnalogUnscaledWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubAnalogUnscaledWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubAnalogUnscaledWriter.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.InitializeStub">
            <summary>Initializes a new instance of type StubAnalogUnscaledWriter</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.SynchronizeCallbacks">
            <summary>Sets the stub of AnalogUnscaledWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of AnalogUnscaledWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of AnalogUnscaledWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.SynchronizingObject">
            <summary>Sets the stub of AnalogUnscaledWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.SynchronizingObjectGet">
            <summary>Sets the stub of AnalogUnscaledWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of AnalogUnscaledWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.ToString">
            <summary>Sets the Stub of AnalogUnscaledWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubAnalogUnscaledWriter.ToString01">
            <summary>Sets the stub of AnalogUnscaledWriter.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter">
            <summary>Stub type of NationalInstruments.DAQmx.CounterMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubCounterMultiChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubCounterMultiChannelWriter.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.InitializeStub">
            <summary>Initializes a new instance of type StubCounterMultiChannelWriter</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.SynchronizeCallbacks">
            <summary>Sets the stub of CounterMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of CounterMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of CounterMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.SynchronizingObject">
            <summary>Sets the stub of CounterMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.SynchronizingObjectGet">
            <summary>Sets the stub of CounterMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of CounterMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.ToString">
            <summary>Sets the Stub of CounterMultiChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterMultiChannelWriter.ToString01">
            <summary>Sets the stub of CounterMultiChannelWriter.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.CounterOutputEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of CounterOutputEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of CounterOutputEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubCounterOutputEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterOutputEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter">
            <summary>Stub type of NationalInstruments.DAQmx.CounterSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubCounterSingleChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubCounterSingleChannelWriter.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.InitializeStub">
            <summary>Initializes a new instance of type StubCounterSingleChannelWriter</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.SynchronizeCallbacks">
            <summary>Sets the stub of CounterSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of CounterSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of CounterSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.SynchronizingObject">
            <summary>Sets the stub of CounterSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.SynchronizingObjectGet">
            <summary>Sets the stub of CounterSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of CounterSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.ToString">
            <summary>Sets the Stub of CounterSingleChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubCounterSingleChannelWriter.ToString01">
            <summary>Sets the stub of CounterSingleChannelWriter.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubDaqException">
            <summary>Stub type of NationalInstruments.DAQmx.DaqException</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDaqException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDaqException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.GetBaseException">
            <summary>Sets the Stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of DaqException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of DaqException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.InitializeStub">
            <summary>Initializes a new instance of type StubDaqException</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqException.ToString">
            <summary>Sets the Stub of Exception.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.DaqWarningEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of DaqWarningEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of DaqWarningEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDaqWarningEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.ToString">
            <summary>Sets the Stub of DaqWarningEventArgs.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDaqWarningEventArgs.ToString01">
            <summary>Sets the stub of DaqWarningEventArgs.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.DigitalChangeDetectionEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of DigitalChangeDetectionEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of DigitalChangeDetectionEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDigitalChangeDetectionEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalChangeDetectionEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader">
            <summary>Stub type of NationalInstruments.DAQmx.DigitalMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubDigitalMultiChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubDigitalMultiChannelReader.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.InitializeStub">
            <summary>Initializes a new instance of type StubDigitalMultiChannelReader</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.SynchronizeCallbacks">
            <summary>Sets the stub of DigitalMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of DigitalMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of DigitalMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.SynchronizingObject">
            <summary>Sets the stub of DigitalMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.SynchronizingObjectGet">
            <summary>Sets the stub of DigitalMultiChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of DigitalMultiChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.ToString">
            <summary>Sets the Stub of DigitalMultiChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelReader.ToString01">
            <summary>Sets the stub of DigitalMultiChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter">
            <summary>Stub type of NationalInstruments.DAQmx.DigitalMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubDigitalMultiChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubDigitalMultiChannelWriter.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.InitializeStub">
            <summary>Initializes a new instance of type StubDigitalMultiChannelWriter</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.SynchronizeCallbacks">
            <summary>Sets the stub of DigitalMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of DigitalMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of DigitalMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.SynchronizingObject">
            <summary>Sets the stub of DigitalMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.SynchronizingObjectGet">
            <summary>Sets the stub of DigitalMultiChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of DigitalMultiChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.ToString">
            <summary>Sets the Stub of DigitalMultiChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalMultiChannelWriter.ToString01">
            <summary>Sets the stub of DigitalMultiChannelWriter.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader">
            <summary>Stub type of NationalInstruments.DAQmx.DigitalSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubDigitalSingleChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubDigitalSingleChannelReader.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.InitializeStub">
            <summary>Initializes a new instance of type StubDigitalSingleChannelReader</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.SynchronizeCallbacks">
            <summary>Sets the stub of DigitalSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of DigitalSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of DigitalSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.SynchronizingObject">
            <summary>Sets the stub of DigitalSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.SynchronizingObjectGet">
            <summary>Sets the stub of DigitalSingleChannelReader.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of DigitalSingleChannelReader.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.ToString">
            <summary>Sets the Stub of DigitalSingleChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelReader.ToString01">
            <summary>Sets the stub of DigitalSingleChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter">
            <summary>Stub type of NationalInstruments.DAQmx.DigitalSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.#ctor(NationalInstruments.DAQmx.DaqStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubDigitalSingleChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubDigitalSingleChannelWriter.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.InitializeStub">
            <summary>Initializes a new instance of type StubDigitalSingleChannelWriter</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.SynchronizeCallbacks">
            <summary>Sets the stub of DigitalSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of DigitalSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of DigitalSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.SynchronizingObject">
            <summary>Sets the stub of DigitalSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.SynchronizingObjectGet">
            <summary>Sets the stub of DigitalSingleChannelWriter.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of DigitalSingleChannelWriter.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.ToString">
            <summary>Sets the Stub of DigitalSingleChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubDigitalSingleChannelWriter.ToString01">
            <summary>Sets the stub of DigitalSingleChannelWriter.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.EveryNSamplesReadEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of EveryNSamplesReadEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EveryNSamplesReadEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubEveryNSamplesReadEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesReadEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.EveryNSamplesWrittenEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of EveryNSamplesWrittenEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of EveryNSamplesWrittenEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubEveryNSamplesWrittenEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubEveryNSamplesWrittenEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubIFilteredTypeDescriptor">
            <summary>Stub type of NationalInstruments.DAQmx.IFilteredTypeDescriptor</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubIFilteredTypeDescriptor.#ctor">
            <summary>Initializes a new instance of type StubIFilteredTypeDescriptor</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubIFilteredTypeDescriptor.GetFilteredTypeDescriptorPropertyFilterType">
            <summary>Sets the stub of IFilteredTypeDescriptor.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubIFilteredTypeDescriptor.GetFilteredTypeDescriptorPropertyFilterTypePropertyFilterFlags">
            <summary>Sets the stub of IFilteredTypeDescriptor.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubIFilteredTypeDescriptor.NationalInstruments#DAQmx#IFilteredTypeDescriptor#GetFilteredTypeDescriptor(NationalInstruments.DAQmx.PropertyFilterType)">
            <summary>Sets the Stub of IFilteredTypeDescriptor.GetFilteredTypeDescriptor(PropertyFilterType filterType)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubIFilteredTypeDescriptor.NationalInstruments#DAQmx#IFilteredTypeDescriptor#GetFilteredTypeDescriptor(NationalInstruments.DAQmx.PropertyFilterType,NationalInstruments.DAQmx.PropertyFilterFlags)">
            <summary>Sets the Stub of IFilteredTypeDescriptor.GetFilteredTypeDescriptor(PropertyFilterType filterType, PropertyFilterFlags filterFlags)</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubLinearScale">
            <summary>Stub type of NationalInstruments.DAQmx.LinearScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubLinearScale.#ctor(System.String,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubLinearScale.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubLinearScale.Dispose(System.Boolean)">
            <summary>Sets the Stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubLinearScale.DisposeBoolean">
            <summary>Sets the stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubLinearScale.InitializeStub">
            <summary>Initializes a new instance of type StubLinearScale</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubLinearScale.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubLinearScale.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubLinearScale.ToString">
            <summary>Sets the Stub of Scale.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubLinearScale.ToString01">
            <summary>Sets the stub of Scale.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubPolynomialScale">
            <summary>Stub type of NationalInstruments.DAQmx.PolynomialScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.#ctor(System.String,System.Double[],System.Double[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.#ctor(System.String,NationalInstruments.DAQmx.PolynomialDirection,System.Double[],System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.#ctor(System.String,NationalInstruments.DAQmx.PolynomialDirection,System.Double[],System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.Dispose(System.Boolean)">
            <summary>Sets the Stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.DisposeBoolean">
            <summary>Sets the stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.InitializeStub">
            <summary>Initializes a new instance of type StubPolynomialScale</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.ToString">
            <summary>Sets the Stub of Scale.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubPolynomialScale.ToString01">
            <summary>Sets the stub of Scale.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubRangeMapScale">
            <summary>Stub type of NationalInstruments.DAQmx.RangeMapScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.#ctor(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.Dispose(System.Boolean)">
            <summary>Sets the Stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.DisposeBoolean">
            <summary>Sets the stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.InitializeStub">
            <summary>Initializes a new instance of type StubRangeMapScale</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.ToString">
            <summary>Sets the Stub of Scale.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubRangeMapScale.ToString01">
            <summary>Sets the stub of Scale.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.SampleClockEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of SampleClockEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SampleClockEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubSampleClockEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubSampleClockEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.SampleCompleteEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of SampleCompleteEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SampleCompleteEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubSampleCompleteEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubSampleCompleteEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubScale">
            <summary>Stub type of NationalInstruments.DAQmx.Scale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubScale.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubScale.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubScale.Dispose(System.Boolean)">
            <summary>Sets the Stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubScale.DisposeBoolean">
            <summary>Sets the stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubScale.InitializeStub">
            <summary>Initializes a new instance of type StubScale</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubScale.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubScale.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubScale.ToString">
            <summary>Sets the Stub of Scale.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubScale.ToString01">
            <summary>Sets the stub of Scale.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubTableScale">
            <summary>Stub type of NationalInstruments.DAQmx.TableScale</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTableScale.#ctor(System.String,System.Double[],System.Double[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTableScale.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTableScale.Dispose(System.Boolean)">
            <summary>Sets the Stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTableScale.DisposeBoolean">
            <summary>Sets the stub of Scale.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTableScale.InitializeStub">
            <summary>Initializes a new instance of type StubTableScale</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTableScale.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTableScale.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTableScale.ToString">
            <summary>Sets the Stub of Scale.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTableScale.ToString01">
            <summary>Sets the stub of Scale.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubTask">
            <summary>Stub type of NationalInstruments.DAQmx.Task</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubTask.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.AttachBackingFieldToSynchronizingObject">
            <summary>Attaches delegates to emulate StubTask.SynchronizingObject as a property with a backing field.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTask.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.Dispose(System.Boolean)">
            <summary>Sets the Stub of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.DisposeBoolean">
            <summary>Sets the stub of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.InitializeStub">
            <summary>Initializes a new instance of type StubTask</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTask.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTask.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.OnCounterOutput(NationalInstruments.DAQmx.CounterOutputEventArgs)">
            <summary>Sets the Stub of Task.OnCounterOutput(CounterOutputEventArgs e)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.OnCounterOutputCounterOutputEventArgs">
            <summary>Sets the stub of Task.OnCounterOutput(CounterOutputEventArgs e)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.OnDigitalChangeDetection(NationalInstruments.DAQmx.DigitalChangeDetectionEventArgs)">
            <summary>Sets the Stub of Task.OnDigitalChangeDetection(DigitalChangeDetectionEventArgs e)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.OnDigitalChangeDetectionDigitalChangeDetectionEventArgs">
            <summary>Sets the stub of Task.OnDigitalChangeDetection(DigitalChangeDetectionEventArgs e)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.OnDone(NationalInstruments.DAQmx.TaskDoneEventArgs)">
            <summary>Sets the Stub of Task.OnDone(TaskDoneEventArgs e)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.OnDoneTaskDoneEventArgs">
            <summary>Sets the stub of Task.OnDone(TaskDoneEventArgs e)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.OnEveryNSamplesRead(NationalInstruments.DAQmx.EveryNSamplesReadEventArgs)">
            <summary>Sets the Stub of Task.OnEveryNSamplesRead(EveryNSamplesReadEventArgs e)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.OnEveryNSamplesReadEveryNSamplesReadEventArgs">
            <summary>Sets the stub of Task.OnEveryNSamplesRead(EveryNSamplesReadEventArgs e)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.OnEveryNSamplesWritten(NationalInstruments.DAQmx.EveryNSamplesWrittenEventArgs)">
            <summary>Sets the Stub of Task.OnEveryNSamplesWritten(EveryNSamplesWrittenEventArgs e)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.OnEveryNSamplesWrittenEveryNSamplesWrittenEventArgs">
            <summary>Sets the stub of Task.OnEveryNSamplesWritten(EveryNSamplesWrittenEventArgs e)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.OnSampleClock(NationalInstruments.DAQmx.SampleClockEventArgs)">
            <summary>Sets the Stub of Task.OnSampleClock(SampleClockEventArgs e)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.OnSampleClockSampleClockEventArgs">
            <summary>Sets the stub of Task.OnSampleClock(SampleClockEventArgs e)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.OnSampleComplete(NationalInstruments.DAQmx.SampleCompleteEventArgs)">
            <summary>Sets the Stub of Task.OnSampleComplete(SampleCompleteEventArgs e)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.OnSampleCompleteSampleCompleteEventArgs">
            <summary>Sets the stub of Task.OnSampleComplete(SampleCompleteEventArgs e)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTask.SynchronizeCallbacks">
            <summary>Sets the stub of Task.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.SynchronizeCallbacksGet">
            <summary>Sets the stub of Task.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of Task.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTask.SynchronizingObject">
            <summary>Sets the stub of Task.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.SynchronizingObjectGet">
            <summary>Sets the stub of Task.get_SynchronizingObject()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Sets the stub of Task.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTask.ToString">
            <summary>Sets the Stub of Task.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTask.ToString01">
            <summary>Sets the stub of Task.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs">
            <summary>Stub type of NationalInstruments.DAQmx.TaskDoneEventArgs</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the Stub of TaskDoneEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of TaskDoneEventArgs.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTaskDoneEventArgs</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NationalInstruments.DAQmx.Fakes.StubTaskDoneEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader">
            <summary>Stub type of NationalInstruments.Restricted.IAnalogMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.#ctor">
            <summary>Initializes a new instance of type StubIAnalogMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIAnalogMultiChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadMultiSampleInt32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadMultiSampleInt32AsyncCallbackObjectDoubleMdArray2ReallocationPolicy">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadMultiSamplePowerInt32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementMdArray2ReallocationPolicy">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state, AIPowerMeasurement[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadSingleSampleAsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadSingleSamplePowerAsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadWaveformGenericInt32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadWaveformGenericInt32AsyncCallbackObjectAnalogWaveformOfDoubleArray">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadWaveformGenericInt32AsyncCallbackObjectAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadWaveformGenericTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.BeginReadWaveformGenericTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.EndReadMultiSampleIAsyncResult">
            <summary>Sets the stub of IAnalogMultiChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.EndReadMultiSampleIAsyncResultInt32Ref">
            <summary>Sets the stub of IAnalogMultiChannelReader.EndReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.EndReadMultiSamplePowerIAsyncResult">
            <summary>Sets the stub of IAnalogMultiChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.EndReadMultiSamplePowerIAsyncResultInt32Ref">
            <summary>Sets the stub of IAnalogMultiChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.EndReadSingleSampleIAsyncResult">
            <summary>Sets the stub of IAnalogMultiChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.EndReadSingleSamplePowerIAsyncResult">
            <summary>Sets the stub of IAnalogMultiChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.EndReadWaveformGenericIAsyncResult">
            <summary>Sets the stub of IAnalogMultiChannelReader.EndReadWaveformGeneric(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadMultiSample(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadMultiSample(System.Int32,System.AsyncCallback,System.Object,System.Double[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadMultiSample(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadMultiSamplePower(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadMultiSamplePower(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.DAQmx.AIPowerMeasurement[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadMultiSamplePower(Int32 samplesPerChannel, AsyncCallback callback, Object state, AIPowerMeasurement[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadSingleSample(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadSingleSamplePower(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadWaveformGeneric(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadWaveformGeneric(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadWaveformGeneric(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double}[])">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadWaveformGeneric(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double}[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(Int32 samplesPerChannel, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#BeginReadWaveformGeneric(System.TimeSpan,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double}[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#EndReadMultiSample(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#EndReadMultiSample(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.EndReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#EndReadMultiSamplePower(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#EndReadMultiSamplePower(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#EndReadSingleSample(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#EndReadSingleSamplePower(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#EndReadWaveformGeneric(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.EndReadWaveformGeneric(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadMultiSample(System.Int32)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadMultiSample(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadMultiSample(System.Int32,System.Double[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadMultiSample(Int32 samplesPerChannel, Double[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadMultiSamplePower(System.Int32)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadMultiSamplePower(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadMultiSamplePower(System.Int32,NationalInstruments.DAQmx.AIPowerMeasurement[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadMultiSamplePower(Int32 samplesPerChannel, AIPowerMeasurement[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadSingleSample">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadSingleSamplePower">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadWaveformGeneric(System.Int32)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadWaveformGeneric(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadWaveformGeneric(System.TimeSpan)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadWaveformGeneric(TimeSpan duration)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadWaveformGeneric(System.Int32,NationalInstruments.AnalogWaveform{System.Double}[])">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadWaveformGeneric(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadWaveformGeneric(System.Int32,NationalInstruments.AnalogWaveform{System.Double}[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadWaveformGeneric(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#ReadWaveformGeneric(System.TimeSpan,NationalInstruments.AnalogWaveform{System.Double}[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogMultiChannelReader.ReadWaveformGeneric(TimeSpan duration, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadMultiSampleInt32">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadMultiSample(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadMultiSampleInt32DoubleMdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadMultiSample(Int32 samplesPerChannel, Double[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadMultiSamplePowerInt32">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadMultiSamplePower(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadMultiSamplePowerInt32AIPowerMeasurementMdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadMultiSamplePower(Int32 samplesPerChannel, AIPowerMeasurement[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadSingleSample">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadSingleSamplePower">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadWaveformGenericInt32">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadWaveformGeneric(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadWaveformGenericInt32AnalogWaveformOfDoubleArray">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadWaveformGeneric(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadWaveformGenericInt32AnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadWaveformGeneric(Int32 samplesPerChannel, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadWaveformGenericTimeSpan">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadWaveformGeneric(TimeSpan duration)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.ReadWaveformGenericTimeSpanAnalogWaveformOfDoubleArrayReallocationPolicy">
            <summary>Sets the stub of IAnalogMultiChannelReader.ReadWaveformGeneric(TimeSpan duration, AnalogWaveform`1&lt;Double&gt;[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.NationalInstruments#Restricted#IAnalogMultiChannelReader#SynchronizeCallbacks">
            <summary>Sets the stub of IAnalogMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of IAnalogMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IAnalogMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter">
            <summary>Stub type of NationalInstruments.Restricted.IAnalogMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.#ctor">
            <summary>Initializes a new instance of type StubIAnalogMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIAnalogMultiChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.BeginWriteMultiSampleBooleanDoubleMdArray2AsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.BeginWriteSingleSampleBooleanDoubleArrayAsyncCallbackObject">
            <summary>Sets the stub of IAnalogMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.BeginWriteWaveformGenericOf1BooleanAnalogWaveformOfM0ArrayAsyncCallbackObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,NationalInstruments.AnalogWaveform{``0}[],System.AsyncCallback,System.Object,System.IAsyncResult})">
            <summary>Sets stubs of BeginWriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of IAnalogMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#BeginWriteMultiSample(System.Boolean,System.Double[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#BeginWriteSingleSample(System.Boolean,System.Double[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#BeginWriteWaveformGeneric``1(System.Boolean,NationalInstruments.AnalogWaveform{``0}[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.BeginWriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#EndWrite(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#ToString">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#WriteMultiSample(System.Boolean,System.Double[0:,0:])">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.WriteMultiSample(Boolean autoStart, Double[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#WriteSingleSample(System.Boolean,System.Double[])">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.WriteSingleSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#WriteWaveformGeneric``1(System.Boolean,NationalInstruments.AnalogWaveform{``0}[])">
            <summary>Sets the Stub of IAnalogMultiChannelWriter.WriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.NationalInstruments#Restricted#IAnalogMultiChannelWriter#SynchronizeCallbacks">
            <summary>Sets the stub of IAnalogMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of IAnalogMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IAnalogMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.ToString">
            <summary>Sets the stub of IAnalogMultiChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.WriteMultiSampleBooleanDoubleMdArray2">
            <summary>Sets the stub of IAnalogMultiChannelWriter.WriteMultiSample(Boolean autoStart, Double[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.WriteSingleSampleBooleanDoubleArray">
            <summary>Sets the stub of IAnalogMultiChannelWriter.WriteSingleSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogMultiChannelWriter.WriteWaveformGenericOf1BooleanAnalogWaveformOfM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Boolean,NationalInstruments.AnalogWaveform{``0}[]})">
            <summary>Sets stubs of WriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt;[] data)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader">
            <summary>Stub type of NationalInstruments.Restricted.IAnalogSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.#ctor">
            <summary>Initializes a new instance of type StubIAnalogSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIAnalogSingleChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadMultiSampleInt32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadMultiSampleInt32AsyncCallbackObjectDoubleArrayReallocationPolicy">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadMultiSamplePowerInt32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadMultiSamplePowerInt32AsyncCallbackObjectAIPowerMeasurementArrayReallocationPolicy">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadSingleSampleAsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadSingleSamplePowerAsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadWaveformGenericInt32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadWaveformGenericInt32AsyncCallbackObjectAnalogWaveformOfDouble">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadWaveformGenericInt32AsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadWaveformGenericTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.BeginReadWaveformGenericTimeSpanAsyncCallbackObjectAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.EndReadMultiSampleIAsyncResult">
            <summary>Sets the stub of IAnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.EndReadMultiSampleIAsyncResultInt32Ref">
            <summary>Sets the stub of IAnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.EndReadMultiSamplePowerIAsyncResult">
            <summary>Sets the stub of IAnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.EndReadMultiSamplePowerIAsyncResultInt32Ref">
            <summary>Sets the stub of IAnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.EndReadSingleSampleIAsyncResult">
            <summary>Sets the stub of IAnalogSingleChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.EndReadSingleSamplePowerIAsyncResult">
            <summary>Sets the stub of IAnalogSingleChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.EndReadWaveformGenericIAsyncResult">
            <summary>Sets the stub of IAnalogSingleChannelReader.EndReadWaveformGeneric(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadMultiSample(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadMultiSample(System.Int32,System.AsyncCallback,System.Object,System.Double[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadMultiSample(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadMultiSamplePower(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadMultiSamplePower(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.DAQmx.AIPowerMeasurement[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadMultiSamplePower(Int32 numberOfSamples, AsyncCallback callback, Object state, AIPowerMeasurement[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadSingleSample(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadSingleSample(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadSingleSamplePower(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadSingleSamplePower(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadWaveformGeneric(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadWaveformGeneric(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadWaveformGeneric(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double})">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadWaveformGeneric(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(Int32 numberOfSamples, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#BeginReadWaveformGeneric(System.TimeSpan,System.AsyncCallback,System.Object,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.BeginReadWaveformGeneric(TimeSpan duration, AsyncCallback callback, Object state, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#EndReadMultiSample(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#EndReadMultiSample(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.EndReadMultiSample(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#EndReadMultiSamplePower(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#EndReadMultiSamplePower(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.EndReadMultiSamplePower(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#EndReadSingleSample(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.EndReadSingleSample(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#EndReadSingleSamplePower(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.EndReadSingleSamplePower(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#EndReadWaveformGeneric(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.EndReadWaveformGeneric(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadMultiSample(System.Int32)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadMultiSample(System.Int32,System.Double[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadMultiSamplePower(System.Int32)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadMultiSamplePower(System.Int32,NationalInstruments.DAQmx.AIPowerMeasurement[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadSingleSample">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadSingleSamplePower">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadWaveformGeneric(System.Int32)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadWaveformGeneric(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadWaveformGeneric(System.TimeSpan)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadWaveformGeneric(TimeSpan duration)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadWaveformGeneric(System.Int32,NationalInstruments.AnalogWaveform{System.Double})">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadWaveformGeneric(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadWaveformGeneric(System.Int32,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadWaveformGeneric(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#ReadWaveformGeneric(System.TimeSpan,NationalInstruments.AnalogWaveform{System.Double},NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IAnalogSingleChannelReader.ReadWaveformGeneric(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadMultiSampleInt32">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadMultiSampleInt32DoubleArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadMultiSample(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadMultiSamplePowerInt32">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadMultiSamplePowerInt32AIPowerMeasurementArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadMultiSamplePower(Int32 numberOfSamples, AIPowerMeasurement[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadSingleSample">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadSingleSample()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadSingleSamplePower">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadSingleSamplePower()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadWaveformGenericInt32">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadWaveformGeneric(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadWaveformGenericInt32AnalogWaveformOfDouble">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadWaveformGeneric(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadWaveformGenericInt32AnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadWaveformGeneric(Int32 numberOfSamples, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadWaveformGenericTimeSpan">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadWaveformGeneric(TimeSpan duration)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.ReadWaveformGenericTimeSpanAnalogWaveformOfDoubleReallocationPolicy">
            <summary>Sets the stub of IAnalogSingleChannelReader.ReadWaveformGeneric(TimeSpan duration, AnalogWaveform`1&lt;Double&gt; data, ReallocationPolicy policy)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.NationalInstruments#Restricted#IAnalogSingleChannelReader#SynchronizeCallbacks">
            <summary>Sets the stub of IAnalogSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of IAnalogSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IAnalogSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter">
            <summary>Stub type of NationalInstruments.Restricted.IAnalogSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.#ctor">
            <summary>Initializes a new instance of type StubIAnalogSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIAnalogSingleChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.BeginWriteMultiSampleBooleanDoubleArrayAsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.BeginWriteSingleSampleBooleanDoubleAsyncCallbackObject">
            <summary>Sets the stub of IAnalogSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.BeginWriteWaveformGenericOf1BooleanAnalogWaveformOfM0AsyncCallbackObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,NationalInstruments.AnalogWaveform{``0},System.AsyncCallback,System.Object,System.IAsyncResult})">
            <summary>Sets stubs of BeginWriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of IAnalogSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#BeginWriteMultiSample(System.Boolean,System.Double[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, Double[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#BeginWriteSingleSample(System.Boolean,System.Double,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, Double data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#BeginWriteWaveformGeneric``1(System.Boolean,NationalInstruments.AnalogWaveform{``0},System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogSingleChannelWriter.BeginWriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#EndWrite(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#WriteMultiSample(System.Boolean,System.Double[])">
            <summary>Sets the Stub of IAnalogSingleChannelWriter.WriteMultiSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#WriteSingleSample(System.Boolean,System.Double)">
            <summary>Sets the Stub of IAnalogSingleChannelWriter.WriteSingleSample(Boolean autoStart, Double data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#WriteWaveformGeneric``1(System.Boolean,NationalInstruments.AnalogWaveform{``0})">
            <summary>Sets the Stub of IAnalogSingleChannelWriter.WriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.NationalInstruments#Restricted#IAnalogSingleChannelWriter#SynchronizeCallbacks">
            <summary>Sets the stub of IAnalogSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of IAnalogSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IAnalogSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.WriteMultiSampleBooleanDoubleArray">
            <summary>Sets the stub of IAnalogSingleChannelWriter.WriteMultiSample(Boolean autoStart, Double[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.WriteSingleSampleBooleanDouble">
            <summary>Sets the stub of IAnalogSingleChannelWriter.WriteSingleSample(Boolean autoStart, Double data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogSingleChannelWriter.WriteWaveformGenericOf1BooleanAnalogWaveformOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Boolean,NationalInstruments.AnalogWaveform{``0}})">
            <summary>Sets stubs of WriteWaveformGeneric(Boolean autoStart, AnalogWaveform`1&lt;!!0&gt; data)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader">
            <summary>Stub type of NationalInstruments.Restricted.IAnalogUnscaledReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.#ctor">
            <summary>Initializes a new instance of type StubIAnalogUnscaledReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIAnalogUnscaledReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.BeginReadInt16Int32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledReader.BeginReadInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.BeginReadInt16PowerInt32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledReader.BeginReadInt16Power(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.BeginReadInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledReader.BeginReadInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.BeginReadUInt16Int32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledReader.BeginReadUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.BeginReadUInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledReader.BeginReadUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.EndReadInt16IAsyncResult">
            <summary>Sets the stub of IAnalogUnscaledReader.EndReadInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.EndReadInt16PowerIAsyncResult">
            <summary>Sets the stub of IAnalogUnscaledReader.EndReadInt16Power(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.EndReadInt32IAsyncResult">
            <summary>Sets the stub of IAnalogUnscaledReader.EndReadInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.EndReadUInt16IAsyncResult">
            <summary>Sets the stub of IAnalogUnscaledReader.EndReadUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.EndReadUInt32IAsyncResult">
            <summary>Sets the stub of IAnalogUnscaledReader.EndReadUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#BeginReadInt16(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledReader.BeginReadInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#BeginReadInt16Power(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledReader.BeginReadInt16Power(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#BeginReadInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledReader.BeginReadInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#BeginReadUInt16(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledReader.BeginReadUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#BeginReadUInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledReader.BeginReadUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#EndReadInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogUnscaledReader.EndReadInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#EndReadInt16Power(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogUnscaledReader.EndReadInt16Power(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#EndReadInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogUnscaledReader.EndReadInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#EndReadUInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogUnscaledReader.EndReadUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#EndReadUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogUnscaledReader.EndReadUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#ReadInt16(System.Int32)">
            <summary>Sets the Stub of IAnalogUnscaledReader.ReadInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#ReadInt16Power(System.Int32)">
            <summary>Sets the Stub of IAnalogUnscaledReader.ReadInt16Power(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#ReadInt32(System.Int32)">
            <summary>Sets the Stub of IAnalogUnscaledReader.ReadInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#ReadUInt16(System.Int32)">
            <summary>Sets the Stub of IAnalogUnscaledReader.ReadUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#ReadUInt32(System.Int32)">
            <summary>Sets the Stub of IAnalogUnscaledReader.ReadUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.ReadInt16Int32">
            <summary>Sets the stub of IAnalogUnscaledReader.ReadInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.ReadInt16PowerInt32">
            <summary>Sets the stub of IAnalogUnscaledReader.ReadInt16Power(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.ReadInt32Int32">
            <summary>Sets the stub of IAnalogUnscaledReader.ReadInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.ReadUInt16Int32">
            <summary>Sets the stub of IAnalogUnscaledReader.ReadUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.ReadUInt32Int32">
            <summary>Sets the stub of IAnalogUnscaledReader.ReadUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.NationalInstruments#Restricted#IAnalogUnscaledReader#SynchronizeCallbacks">
            <summary>Sets the stub of IAnalogUnscaledReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of IAnalogUnscaledReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IAnalogUnscaledReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter">
            <summary>Stub type of NationalInstruments.Restricted.IAnalogUnscaledWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.#ctor">
            <summary>Initializes a new instance of type StubIAnalogUnscaledWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIAnalogUnscaledWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.BeginWriteBooleanInt16MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.BeginWriteBooleanInt32MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.BeginWriteBooleanUInt16MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.BeginWriteBooleanUInt32MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of IAnalogUnscaledWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#BeginWrite(System.Boolean,System.Int16[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#BeginWrite(System.Boolean,System.Int32[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#BeginWrite(System.Boolean,System.UInt16[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#BeginWrite(System.Boolean,System.UInt32[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IAnalogUnscaledWriter.BeginWrite(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#EndWrite(System.IAsyncResult)">
            <summary>Sets the Stub of IAnalogUnscaledWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#ToString">
            <summary>Sets the Stub of IAnalogUnscaledWriter.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#Write(System.Boolean,System.Int16[0:,0:])">
            <summary>Sets the Stub of IAnalogUnscaledWriter.Write(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#Write(System.Boolean,System.Int32[0:,0:])">
            <summary>Sets the Stub of IAnalogUnscaledWriter.Write(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#Write(System.Boolean,System.UInt16[0:,0:])">
            <summary>Sets the Stub of IAnalogUnscaledWriter.Write(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#Write(System.Boolean,System.UInt32[0:,0:])">
            <summary>Sets the Stub of IAnalogUnscaledWriter.Write(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.NationalInstruments#Restricted#IAnalogUnscaledWriter#SynchronizeCallbacks">
            <summary>Sets the stub of IAnalogUnscaledWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of IAnalogUnscaledWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IAnalogUnscaledWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.ToString">
            <summary>Sets the stub of IAnalogUnscaledWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.WriteBooleanInt16MdArray2">
            <summary>Sets the stub of IAnalogUnscaledWriter.Write(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.WriteBooleanInt32MdArray2">
            <summary>Sets the stub of IAnalogUnscaledWriter.Write(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.WriteBooleanUInt16MdArray2">
            <summary>Sets the stub of IAnalogUnscaledWriter.Write(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIAnalogUnscaledWriter.WriteBooleanUInt32MdArray2">
            <summary>Sets the stub of IAnalogUnscaledWriter.Write(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader">
            <summary>Stub type of NationalInstruments.Restricted.ICounterMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.#ctor">
            <summary>Initializes a new instance of type StubICounterMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubICounterMultiChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadMultiSampleDoubleInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleMdArray2ReallocationPolicy">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadMultiSampleInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadMultiSampleInt32Int32AsyncCallbackObjectInt32MdArray2ReallocationPolicy">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadMultiSampleUInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32MdArray2ReallocationPolicy">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadSingleSampleDoubleAsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadSingleSampleInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.BeginReadSingleSampleUInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadMultiSampleDoubleIAsyncResult">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadMultiSampleDoubleIAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadMultiSampleInt32IAsyncResult">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadMultiSampleInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadMultiSampleUInt32IAsyncResult">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadMultiSampleUInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadSingleSampleDoubleIAsyncResult">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadSingleSampleInt32IAsyncResult">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.EndReadSingleSampleUInt32IAsyncResult">
            <summary>Sets the stub of ICounterMultiChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadMultiSampleDouble(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadMultiSampleDouble(System.Int32,System.AsyncCallback,System.Object,System.Double[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadMultiSampleDouble(Int32 samplesPerChannel, AsyncCallback callback, Object state, Double[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadMultiSampleInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadMultiSampleInt32(System.Int32,System.AsyncCallback,System.Object,System.Int32[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadMultiSampleInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadMultiSampleUInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadMultiSampleUInt32(System.Int32,System.AsyncCallback,System.Object,System.UInt32[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadMultiSampleUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadSingleSampleDouble(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadSingleSampleInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#BeginReadSingleSampleUInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadMultiSampleDouble(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadMultiSampleDouble(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadMultiSampleInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadMultiSampleInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadMultiSampleUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadMultiSampleUInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadSingleSampleDouble(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadSingleSampleInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#EndReadSingleSampleUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterMultiChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadMultiSampleDouble(System.Int32)">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadMultiSampleDouble(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadMultiSampleDouble(System.Int32,System.Double[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadMultiSampleDouble(Int32 samplesPerChannel, Double[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadMultiSampleInt32(System.Int32)">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadMultiSampleInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadMultiSampleInt32(System.Int32,System.Int32[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadMultiSampleInt32(Int32 samplesPerChannel, Int32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadMultiSampleUInt32(System.Int32)">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadMultiSampleUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadMultiSampleUInt32(System.Int32,System.UInt32[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadMultiSampleUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadSingleSampleDouble">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadSingleSampleInt32">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ReadSingleSampleUInt32">
            <summary>Sets the Stub of ICounterMultiChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#ToString">
            <summary>Sets the Stub of ICounterMultiChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadMultiSampleDoubleInt32">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadMultiSampleDouble(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadMultiSampleDoubleInt32DoubleMdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadMultiSampleDouble(Int32 samplesPerChannel, Double[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadMultiSampleInt32Int32">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadMultiSampleInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadMultiSampleInt32Int32Int32MdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadMultiSampleInt32(Int32 samplesPerChannel, Int32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadMultiSampleUInt32Int32">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadMultiSampleUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadMultiSampleUInt32Int32UInt32MdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadMultiSampleUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadSingleSampleDouble">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadSingleSampleInt32">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ReadSingleSampleUInt32">
            <summary>Sets the stub of ICounterMultiChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.NationalInstruments#Restricted#ICounterMultiChannelReader#SynchronizeCallbacks">
            <summary>Sets the stub of ICounterMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of ICounterMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of ICounterMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelReader.ToString">
            <summary>Sets the stub of ICounterMultiChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter">
            <summary>Stub type of NationalInstruments.Restricted.ICounterMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.#ctor">
            <summary>Initializes a new instance of type StubICounterMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubICounterMultiChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.BeginWriteSingleSampleBooleanCODataFrequencyArrayAsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.BeginWriteSingleSampleBooleanCODataTicksArrayAsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.BeginWriteSingleSampleBooleanCODataTimeArrayAsyncCallbackObject">
            <summary>Sets the stub of ICounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of ICounterMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#BeginWriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataFrequency[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#BeginWriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTicks[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#BeginWriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTime[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterMultiChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#EndWrite(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#ToString">
            <summary>Sets the Stub of ICounterMultiChannelWriter.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#WriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataFrequency[])">
            <summary>Sets the Stub of ICounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#WriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTicks[])">
            <summary>Sets the Stub of ICounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#WriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTime[])">
            <summary>Sets the Stub of ICounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.NationalInstruments#Restricted#ICounterMultiChannelWriter#SynchronizeCallbacks">
            <summary>Sets the stub of ICounterMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of ICounterMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of ICounterMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.ToString">
            <summary>Sets the stub of ICounterMultiChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.WriteSingleSampleBooleanCODataFrequencyArray">
            <summary>Sets the stub of ICounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.WriteSingleSampleBooleanCODataTicksArray">
            <summary>Sets the stub of ICounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterMultiChannelWriter.WriteSingleSampleBooleanCODataTimeArray">
            <summary>Sets the stub of ICounterMultiChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader">
            <summary>Stub type of NationalInstruments.Restricted.ICounterSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.#ctor">
            <summary>Initializes a new instance of type StubICounterSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubICounterSingleChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSampleDoubleInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSampleDoubleInt32AsyncCallbackObjectDoubleArrayReallocationPolicy">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSampleInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSampleInt32Int32AsyncCallbackObjectInt32ArrayReallocationPolicy">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSamplePulseFrequencyInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSamplePulseFrequencyInt32AsyncCallbackObjectCIDataFrequencyArrayReallocationPolicy">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataFrequency[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSamplePulseTicksInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSamplePulseTicksInt32AsyncCallbackObjectCIDataTicksArrayReallocationPolicy">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTicks[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSamplePulseTimeInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSamplePulseTimeInt32AsyncCallbackObjectCIDataTimeArrayReallocationPolicy">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTime[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSampleUInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadMultiSampleUInt32Int32AsyncCallbackObjectUInt32ArrayReallocationPolicy">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadSingleSampleDoubleAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadSingleSampleInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadSingleSamplePulseFrequencyAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadSingleSamplePulseFrequency(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadSingleSamplePulseTicksAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadSingleSamplePulseTicks(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadSingleSamplePulseTimeAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadSingleSamplePulseTime(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.BeginReadSingleSampleUInt32AsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSampleDoubleIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSampleDoubleIAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSampleInt32IAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSampleInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSamplePulseFrequencyIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSamplePulseFrequencyIAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSamplePulseFrequency(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSamplePulseTicksIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSamplePulseTicksIAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTicks(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSamplePulseTimeIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSamplePulseTimeIAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTime(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSampleUInt32IAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadMultiSampleUInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadSingleSampleDoubleIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadSingleSampleInt32IAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadSingleSamplePulseFrequencyIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadSingleSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadSingleSamplePulseTicksIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadSingleSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadSingleSamplePulseTimeIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadSingleSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.EndReadSingleSampleUInt32IAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSampleDouble(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSampleDouble(System.Int32,System.AsyncCallback,System.Object,System.Double[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSampleDouble(Int32 numberOfSamples, AsyncCallback callback, Object state, Double[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSampleInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSampleInt32(System.Int32,System.AsyncCallback,System.Object,System.Int32[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSampleInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSamplePulseFrequency(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSamplePulseFrequency(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.DAQmx.CIDataFrequency[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseFrequency(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataFrequency[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSamplePulseTicks(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSamplePulseTicks(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.DAQmx.CIDataTicks[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTicks(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTicks[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSamplePulseTime(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSamplePulseTime(System.Int32,System.AsyncCallback,System.Object,NationalInstruments.DAQmx.CIDataTime[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSamplePulseTime(Int32 numberOfSamples, AsyncCallback callback, Object state, CIDataTime[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSampleUInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadMultiSampleUInt32(System.Int32,System.AsyncCallback,System.Object,System.UInt32[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadMultiSampleUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadSingleSampleDouble(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadSingleSampleDouble(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadSingleSampleInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadSingleSampleInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadSingleSamplePulseFrequency(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadSingleSamplePulseFrequency(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadSingleSamplePulseTicks(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadSingleSamplePulseTicks(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadSingleSamplePulseTime(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadSingleSamplePulseTime(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#BeginReadSingleSampleUInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelReader.BeginReadSingleSampleUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSampleDouble(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSampleDouble(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSampleDouble(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSampleInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSampleInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSampleInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSamplePulseFrequency(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSamplePulseFrequency(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSamplePulseFrequency(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSamplePulseTicks(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSamplePulseTicks(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTicks(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSamplePulseTime(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSamplePulseTime(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSamplePulseTime(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSampleUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadMultiSampleUInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadMultiSampleUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadSingleSampleDouble(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadSingleSampleDouble(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadSingleSampleInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadSingleSampleInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadSingleSamplePulseFrequency(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadSingleSamplePulseFrequency(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadSingleSamplePulseTicks(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadSingleSamplePulseTicks(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadSingleSamplePulseTime(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadSingleSamplePulseTime(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#EndReadSingleSampleUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelReader.EndReadSingleSampleUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSampleDouble(System.Int32)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSampleDouble(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSampleDouble(System.Int32,System.Double[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSampleDouble(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSampleInt32(System.Int32)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSampleInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSampleInt32(System.Int32,System.Int32[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSampleInt32(Int32 numberOfSamples, Int32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSamplePulseFrequency(System.Int32)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSamplePulseFrequency(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSamplePulseFrequency(System.Int32,NationalInstruments.DAQmx.CIDataFrequency[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSamplePulseFrequency(Int32 numberOfSamples, CIDataFrequency[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSamplePulseTicks(System.Int32)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSamplePulseTicks(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSamplePulseTicks(System.Int32,NationalInstruments.DAQmx.CIDataTicks[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSamplePulseTicks(Int32 numberOfSamples, CIDataTicks[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSamplePulseTime(System.Int32)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSamplePulseTime(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSamplePulseTime(System.Int32,NationalInstruments.DAQmx.CIDataTime[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSamplePulseTime(Int32 numberOfSamples, CIDataTime[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSampleUInt32(System.Int32)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSampleUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadMultiSampleUInt32(System.Int32,System.UInt32[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadMultiSampleUInt32(Int32 numberOfSamples, UInt32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadSingleSampleDouble">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadSingleSampleInt32">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadSingleSamplePulseFrequency">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadSingleSamplePulseFrequency()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadSingleSamplePulseTicks">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadSingleSamplePulseTicks()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadSingleSamplePulseTime">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadSingleSamplePulseTime()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ReadSingleSampleUInt32">
            <summary>Sets the Stub of ICounterSingleChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#ToString">
            <summary>Sets the Stub of ICounterSingleChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSampleDoubleInt32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSampleDouble(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSampleDoubleInt32DoubleArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSampleDouble(Int32 numberOfSamples, Double[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSampleInt32Int32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSampleInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSampleInt32Int32Int32ArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSampleInt32(Int32 numberOfSamples, Int32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSamplePulseFrequencyInt32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSamplePulseFrequency(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSamplePulseFrequencyInt32CIDataFrequencyArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSamplePulseFrequency(Int32 numberOfSamples, CIDataFrequency[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSamplePulseTicksInt32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSamplePulseTicks(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSamplePulseTicksInt32CIDataTicksArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSamplePulseTicks(Int32 numberOfSamples, CIDataTicks[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSamplePulseTimeInt32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSamplePulseTime(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSamplePulseTimeInt32CIDataTimeArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSamplePulseTime(Int32 numberOfSamples, CIDataTime[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSampleUInt32Int32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSampleUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadMultiSampleUInt32Int32UInt32ArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadMultiSampleUInt32(Int32 numberOfSamples, UInt32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadSingleSampleDouble">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadSingleSampleDouble()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadSingleSampleInt32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadSingleSampleInt32()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadSingleSamplePulseFrequency">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadSingleSamplePulseFrequency()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadSingleSamplePulseTicks">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadSingleSamplePulseTicks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadSingleSamplePulseTime">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadSingleSamplePulseTime()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ReadSingleSampleUInt32">
            <summary>Sets the stub of ICounterSingleChannelReader.ReadSingleSampleUInt32()</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.NationalInstruments#Restricted#ICounterSingleChannelReader#SynchronizeCallbacks">
            <summary>Sets the stub of ICounterSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of ICounterSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of ICounterSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelReader.ToString">
            <summary>Sets the stub of ICounterSingleChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter">
            <summary>Stub type of NationalInstruments.Restricted.ICounterSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.#ctor">
            <summary>Initializes a new instance of type StubICounterSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubICounterSingleChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.BeginWriteMultiSampleBooleanCODataFrequencyArrayAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.BeginWriteMultiSampleBooleanCODataTicksArrayAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.BeginWriteMultiSampleBooleanCODataTimeArrayAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.BeginWriteSingleSampleBooleanCODataFrequencyAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.BeginWriteSingleSampleBooleanCODataTicksAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.BeginWriteSingleSampleBooleanCODataTimeAsyncCallbackObject">
            <summary>Sets the stub of ICounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of ICounterSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#BeginWriteMultiSample(System.Boolean,NationalInstruments.DAQmx.CODataFrequency[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataFrequency[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#BeginWriteMultiSample(System.Boolean,NationalInstruments.DAQmx.CODataTicks[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTicks[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#BeginWriteMultiSample(System.Boolean,NationalInstruments.DAQmx.CODataTime[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.BeginWriteMultiSample(Boolean autoStart, CODataTime[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#BeginWriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataFrequency,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataFrequency data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#BeginWriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTicks,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTicks data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#BeginWriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTime,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.BeginWriteSingleSample(Boolean autoStart, CODataTime data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#EndWrite(System.IAsyncResult)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#ToString">
            <summary>Sets the Stub of ICounterSingleChannelWriter.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#WriteMultiSample(System.Boolean,NationalInstruments.DAQmx.CODataFrequency[])">
            <summary>Sets the Stub of ICounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#WriteMultiSample(System.Boolean,NationalInstruments.DAQmx.CODataTicks[])">
            <summary>Sets the Stub of ICounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#WriteMultiSample(System.Boolean,NationalInstruments.DAQmx.CODataTime[])">
            <summary>Sets the Stub of ICounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#WriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataFrequency)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#WriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTicks)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#WriteSingleSample(System.Boolean,NationalInstruments.DAQmx.CODataTime)">
            <summary>Sets the Stub of ICounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime data)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.NationalInstruments#Restricted#ICounterSingleChannelWriter#SynchronizeCallbacks">
            <summary>Sets the stub of ICounterSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of ICounterSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of ICounterSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.ToString">
            <summary>Sets the stub of ICounterSingleChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.WriteMultiSampleBooleanCODataFrequencyArray">
            <summary>Sets the stub of ICounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataFrequency[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.WriteMultiSampleBooleanCODataTicksArray">
            <summary>Sets the stub of ICounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTicks[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.WriteMultiSampleBooleanCODataTimeArray">
            <summary>Sets the stub of ICounterSingleChannelWriter.WriteMultiSample(Boolean autoStart, CODataTime[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.WriteSingleSampleBooleanCODataFrequency">
            <summary>Sets the stub of ICounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataFrequency data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.WriteSingleSampleBooleanCODataTicks">
            <summary>Sets the stub of ICounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTicks data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubICounterSingleChannelWriter.WriteSingleSampleBooleanCODataTime">
            <summary>Sets the stub of ICounterSingleChannelWriter.WriteSingleSample(Boolean autoStart, CODataTime data)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader">
            <summary>Stub type of NationalInstruments.Restricted.IDigitalMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.#ctor">
            <summary>Initializes a new instance of type StubIDigitalMultiChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIDigitalMultiChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortByteInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortByteInt32AsyncCallbackObjectByteMdArray2ReallocationPolicy">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state, Byte[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortInt16Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32MdArray2ReallocationPolicy">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16MdArray2ReallocationPolicy">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt16[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32MdArray2ReallocationPolicy">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSampleMultiLineAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSampleMultiLineAsyncCallbackObjectBooleanMdArray2">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSamplePortByteAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSamplePortInt16AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSamplePortInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSamplePortUInt16AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSamplePortUInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadSingleSampleSingleLineAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortByteIAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortByteIAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortInt16IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortInt32IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortUInt16IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortUInt16IAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortUInt32IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadMultiSamplePortUInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadSingleSamplePortByteIAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadSingleSamplePortInt16IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadSingleSamplePortInt32IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadSingleSamplePortUInt16IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadSingleSamplePortUInt32IAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadSingleSampleSingleLineIAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.EndReadWaveformIAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortByte(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortByte(System.Int32,System.AsyncCallback,System.Object,System.Byte[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortByte(Int32 samplesPerChannel, AsyncCallback callback, Object state, Byte[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortInt16(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortInt32(System.Int32,System.AsyncCallback,System.Object,System.Int32[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, Int32[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortUInt16(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortUInt16(System.Int32,System.AsyncCallback,System.Object,System.UInt16[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt16(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt16[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortUInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadMultiSamplePortUInt32(System.Int32,System.AsyncCallback,System.Object,System.UInt32[0:,0:],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadMultiSamplePortUInt32(Int32 samplesPerChannel, AsyncCallback callback, Object state, UInt32[,] data, ReallocationPolicy __unnamed004)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSampleMultiLine(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSampleMultiLine(System.AsyncCallback,System.Object,System.Boolean[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSamplePortByte(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSamplePortInt16(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSamplePortInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSamplePortUInt16(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSamplePortUInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadSingleSampleSingleLine(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadWaveform(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadWaveform(Int32 samplesPerChannel, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#BeginReadWaveform(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortByte(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortByte(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortUInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortUInt16(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadMultiSamplePortUInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadSingleSampleMultiLine(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadSingleSamplePortByte(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadSingleSamplePortInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadSingleSamplePortInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadSingleSamplePortUInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadSingleSamplePortUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadSingleSampleSingleLine(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#EndReadWaveform(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortByte(System.Int32)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortByte(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortByte(System.Int32,System.Byte[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortByte(Int32 samplesPerChannel, Byte[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortInt16(System.Int32)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortInt32(System.Int32)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortInt32(System.Int32,System.Int32[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortInt32(Int32 samplesPerChannel, Int32[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortUInt16(System.Int32)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortUInt16(System.Int32,System.UInt16[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt16(Int32 samplesPerChannel, UInt16[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortUInt32(System.Int32)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadMultiSamplePortUInt32(System.Int32,System.UInt32[0:,0:]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSampleMultiLine">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSampleMultiLine(System.Boolean[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSampleMultiLine(Boolean[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSamplePortByte">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSamplePortInt16">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSamplePortInt32">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSamplePortUInt16">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSamplePortUInt32">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadSingleSampleSingleLine">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadWaveform(System.Int32)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadWaveform(Int32 samplesPerChannel)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ReadWaveform(System.TimeSpan)">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#ToString">
            <summary>Sets the Stub of IDigitalMultiChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortByteInt32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortByte(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortByteInt32ByteMdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortByte(Int32 samplesPerChannel, Byte[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortInt16Int32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortInt32Int32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortInt32Int32Int32MdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortInt32(Int32 samplesPerChannel, Int32[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortUInt16Int32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt16(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortUInt16Int32UInt16MdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt16(Int32 samplesPerChannel, UInt16[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortUInt32Int32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt32(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadMultiSamplePortUInt32Int32UInt32MdArray2RefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadMultiSamplePortUInt32(Int32 samplesPerChannel, UInt32[,]&amp; data, ReallocationPolicy __unnamed002, Int32&amp; actualNumberOfSamplesPerChannelRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSampleMultiLine">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSampleMultiLineBooleanMdArray2">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSampleMultiLine(Boolean[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSamplePortByte">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSamplePortInt16">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSamplePortInt32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSamplePortUInt16">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSamplePortUInt32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadSingleSampleSingleLine">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadWaveformInt32">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadWaveform(Int32 samplesPerChannel)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ReadWaveformTimeSpan">
            <summary>Sets the stub of IDigitalMultiChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.NationalInstruments#Restricted#IDigitalMultiChannelReader#SynchronizeCallbacks">
            <summary>Sets the stub of IDigitalMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of IDigitalMultiChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IDigitalMultiChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelReader.ToString">
            <summary>Sets the stub of IDigitalMultiChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter">
            <summary>Stub type of NationalInstruments.Restricted.IDigitalMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.#ctor">
            <summary>Initializes a new instance of type StubIDigitalMultiChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIDigitalMultiChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanByteMdArray2AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanInt16MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanInt32MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanUInt16MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteMultiSamplePortBooleanUInt32MdArray2AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteSingleSampleMultiLineBooleanBooleanMdArray2AsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanByteArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanInt16ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanInt32ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanUInt16ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteSingleSamplePortBooleanUInt32ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteSingleSampleSingleLineBooleanBooleanArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.BeginWriteWaveformBooleanDigitalWaveformArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalMultiChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of IDigitalMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.Byte[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.Int16[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.Int32[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.UInt16[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.UInt32[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteSingleSampleMultiLine(System.Boolean,System.Boolean[0:,0:],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.Byte[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.Int16[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.Int32[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.UInt16[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.UInt32[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteSingleSampleSingleLine(System.Boolean,System.Boolean[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#BeginWriteWaveform(System.Boolean,NationalInstruments.DigitalWaveform[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#EndWrite(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#ToString">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteMultiSamplePort(System.Boolean,System.Byte[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteMultiSamplePort(System.Boolean,System.Int16[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteMultiSamplePort(System.Boolean,System.Int32[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteMultiSamplePort(System.Boolean,System.UInt16[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteMultiSamplePort(System.Boolean,System.UInt32[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteSingleSampleMultiLine(System.Boolean,System.Boolean[0:,0:])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteSingleSamplePort(System.Boolean,System.Byte[])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteSingleSamplePort(System.Boolean,System.Int16[])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteSingleSamplePort(System.Boolean,System.Int32[])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteSingleSamplePort(System.Boolean,System.UInt16[])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteSingleSamplePort(System.Boolean,System.UInt32[])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteSingleSampleSingleLine(System.Boolean,System.Boolean[])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#WriteWaveform(System.Boolean,NationalInstruments.DigitalWaveform[])">
            <summary>Sets the Stub of IDigitalMultiChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform[] data)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.NationalInstruments#Restricted#IDigitalMultiChannelWriter#SynchronizeCallbacks">
            <summary>Sets the stub of IDigitalMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of IDigitalMultiChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IDigitalMultiChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.ToString">
            <summary>Sets the stub of IDigitalMultiChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteMultiSamplePortBooleanByteMdArray2">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteMultiSamplePortBooleanInt16MdArray2">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteMultiSamplePortBooleanInt32MdArray2">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteMultiSamplePortBooleanUInt16MdArray2">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteMultiSamplePortBooleanUInt32MdArray2">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteSingleSampleMultiLineBooleanBooleanMdArray2">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[,] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteSingleSamplePortBooleanByteArray">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteSingleSamplePortBooleanInt16Array">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteSingleSamplePortBooleanInt32Array">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteSingleSamplePortBooleanUInt16Array">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteSingleSamplePortBooleanUInt32Array">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteSingleSampleSingleLineBooleanBooleanArray">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalMultiChannelWriter.WriteWaveformBooleanDigitalWaveformArray">
            <summary>Sets the stub of IDigitalMultiChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform[] data)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader">
            <summary>Stub type of NationalInstruments.Restricted.IDigitalSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.#ctor">
            <summary>Initializes a new instance of type StubIDigitalSingleChannelReader</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIDigitalSingleChannelReader.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortByteInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortByteInt32AsyncCallbackObjectByteArrayReallocationPolicy">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state, Byte[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortInt16Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortInt32Int32AsyncCallbackObjectInt32ArrayReallocationPolicy">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortUInt16Int32AsyncCallbackObjectUInt16ArrayReallocationPolicy">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt16[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadMultiSamplePortUInt32Int32AsyncCallbackObjectUInt32ArrayReallocationPolicy">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSampleMultiLineAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSampleMultiLineAsyncCallbackObjectBooleanArray">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSamplePortByteAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSamplePortInt16AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSamplePortInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSamplePortUInt16AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSamplePortUInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadSingleSampleSingleLineAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadWaveformInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.BeginReadWaveformTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortByteIAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortByteIAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortInt16IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortInt32IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortUInt16IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortUInt16IAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortUInt32IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadMultiSamplePortUInt32IAsyncResultInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadSingleSampleMultiLineIAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadSingleSamplePortByteIAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadSingleSamplePortInt16IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadSingleSamplePortInt32IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadSingleSamplePortUInt16IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadSingleSamplePortUInt32IAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadSingleSampleSingleLineIAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.EndReadWaveformIAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortByte(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortByte(System.Int32,System.AsyncCallback,System.Object,System.Byte[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortByte(Int32 numberOfSamples, AsyncCallback callback, Object state, Byte[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortInt16(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortInt32(System.Int32,System.AsyncCallback,System.Object,System.Int32[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, Int32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortUInt16(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortUInt16(System.Int32,System.AsyncCallback,System.Object,System.UInt16[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt16(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt16[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortUInt32(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadMultiSamplePortUInt32(System.Int32,System.AsyncCallback,System.Object,System.UInt32[],NationalInstruments.DAQmx.ReallocationPolicy)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadMultiSamplePortUInt32(Int32 numberOfSamples, AsyncCallback callback, Object state, UInt32[] data, ReallocationPolicy policy)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSampleMultiLine(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSampleMultiLine(System.AsyncCallback,System.Object,System.Boolean[])">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSampleMultiLine(AsyncCallback callback, Object state, Boolean[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSamplePortByte(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortByte(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSamplePortInt16(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSamplePortInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSamplePortUInt16(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortUInt16(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSamplePortUInt32(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSamplePortUInt32(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadSingleSampleSingleLine(System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadSingleSampleSingleLine(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadWaveform(System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadWaveform(Int32 numberOfSamples, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#BeginReadWaveform(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.BeginReadWaveform(TimeSpan duration, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortByte(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortByte(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortByte(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortUInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortUInt16(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt16(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadMultiSamplePortUInt32(System.IAsyncResult,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadMultiSamplePortUInt32(IAsyncResult asyncResult, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadSingleSampleMultiLine(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadSingleSampleMultiLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadSingleSamplePortByte(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadSingleSamplePortByte(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadSingleSamplePortInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadSingleSamplePortInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadSingleSamplePortInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadSingleSamplePortInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadSingleSamplePortUInt16(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadSingleSamplePortUInt16(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadSingleSamplePortUInt32(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadSingleSamplePortUInt32(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadSingleSampleSingleLine(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadSingleSampleSingleLine(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#EndReadWaveform(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.EndReadWaveform(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortByte(System.Int32)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortByte(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortByte(System.Int32,System.Byte[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortByte(Int32 numberOfSamples, Byte[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortInt16(System.Int32)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortInt32(System.Int32)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortInt32(System.Int32,System.Int32[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortInt32(Int32 numberOfSamples, Int32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortUInt16(System.Int32)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortUInt16(System.Int32,System.UInt16[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt16(Int32 numberOfSamples, UInt16[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortUInt32(System.Int32)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadMultiSamplePortUInt32(System.Int32,System.UInt32[]@,NationalInstruments.DAQmx.ReallocationPolicy,System.Int32@)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt32(Int32 numberOfSamples, UInt32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSampleMultiLine">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSampleMultiLine(System.Boolean[])">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSampleMultiLine(Boolean[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSamplePortByte">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSamplePortInt16">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSamplePortInt32">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSamplePortUInt16">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSamplePortUInt32">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadSingleSampleSingleLine">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadWaveform(System.Int32)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ReadWaveform(System.TimeSpan)">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#ToString">
            <summary>Sets the Stub of IDigitalSingleChannelReader.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortByteInt32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortByte(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortByteInt32ByteArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortByte(Int32 numberOfSamples, Byte[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortInt16Int32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortInt32Int32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortInt32Int32Int32ArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortInt32(Int32 numberOfSamples, Int32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortUInt16Int32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt16(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortUInt16Int32UInt16ArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt16(Int32 numberOfSamples, UInt16[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortUInt32Int32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt32(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadMultiSamplePortUInt32Int32UInt32ArrayRefReallocationPolicyInt32Ref">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadMultiSamplePortUInt32(Int32 numberOfSamples, UInt32[]&amp; data, ReallocationPolicy policy, Int32&amp; actualNumberOfSamplesRead)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSampleMultiLine">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSampleMultiLine()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSampleMultiLineBooleanArray">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSampleMultiLine(Boolean[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSamplePortByte">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSamplePortByte()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSamplePortInt16">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSamplePortInt16()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSamplePortInt32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSamplePortInt32()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSamplePortUInt16">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSamplePortUInt16()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSamplePortUInt32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSamplePortUInt32()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadSingleSampleSingleLine">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadSingleSampleSingleLine()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadWaveformInt32">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadWaveform(Int32 numberOfSamples)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ReadWaveformTimeSpan">
            <summary>Sets the stub of IDigitalSingleChannelReader.ReadWaveform(TimeSpan duration)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.NationalInstruments#Restricted#IDigitalSingleChannelReader#SynchronizeCallbacks">
            <summary>Sets the stub of IDigitalSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.SynchronizeCallbacksGet">
            <summary>Sets the stub of IDigitalSingleChannelReader.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IDigitalSingleChannelReader.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelReader.ToString">
            <summary>Sets the stub of IDigitalSingleChannelReader.ToString()</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter">
            <summary>Stub type of NationalInstruments.Restricted.IDigitalSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.#ctor">
            <summary>Initializes a new instance of type StubIDigitalSingleChannelWriter</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.AttachBackingFieldToSynchronizeCallbacks">
            <summary>Attaches delegates to emulate StubIDigitalSingleChannelWriter.SynchronizeCallbacks as a property with a backing field.</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanByteArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanInt16ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanInt32ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanUInt16ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteMultiSamplePortBooleanUInt32ArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteSingleSampleMultiLineBooleanBooleanArrayAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanByteAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanInt16AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanUInt16AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteSingleSamplePortBooleanUInt32AsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteSingleSampleSingleLineBooleanBooleanAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.BeginWriteWaveformBooleanDigitalWaveformAsyncCallbackObject">
            <summary>Sets the stub of IDigitalSingleChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of IDigitalSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.Byte[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Byte[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.Int16[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.Int32[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, Int32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.UInt16[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt16[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteMultiSamplePort(System.Boolean,System.UInt32[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteMultiSamplePort(Boolean autoStart, UInt32[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteSingleSampleMultiLine(System.Boolean,System.Boolean[],System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.Byte,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Byte data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.Int16,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, Int32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.UInt16,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt16 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteSingleSamplePort(System.Boolean,System.UInt32,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteSingleSamplePort(Boolean autoStart, UInt32 data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteSingleSampleSingleLine(System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteSingleSampleSingleLine(Boolean autoStart, Boolean data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#BeginWriteWaveform(System.Boolean,NationalInstruments.DigitalWaveform,System.AsyncCallback,System.Object)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.BeginWriteWaveform(Boolean autoStart, DigitalWaveform data, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#EndWrite(System.IAsyncResult)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#ToString">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.ToString()</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteMultiSamplePort(System.Boolean,System.Byte[])">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteMultiSamplePort(System.Boolean,System.Int16[])">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteMultiSamplePort(System.Boolean,System.Int32[])">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteMultiSamplePort(System.Boolean,System.UInt16[])">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteMultiSamplePort(System.Boolean,System.UInt32[])">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteSingleSampleMultiLine(System.Boolean,System.Boolean[])">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteSingleSamplePort(System.Boolean,System.Byte)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteSingleSamplePort(System.Boolean,System.Int16)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16 data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteSingleSamplePort(System.Boolean,System.Int32)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32 data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteSingleSamplePort(System.Boolean,System.UInt16)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16 data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteSingleSamplePort(System.Boolean,System.UInt32)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32 data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteSingleSampleSingleLine(System.Boolean,System.Boolean)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean data)</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#WriteWaveform(System.Boolean,NationalInstruments.DigitalWaveform)">
            <summary>Sets the Stub of IDigitalSingleChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform data)</summary>
        </member>
        <member name="P:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.NationalInstruments#Restricted#IDigitalSingleChannelWriter#SynchronizeCallbacks">
            <summary>Sets the stub of IDigitalSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.SynchronizeCallbacksGet">
            <summary>Sets the stub of IDigitalSingleChannelWriter.get_SynchronizeCallbacks()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.SynchronizeCallbacksSetBoolean">
            <summary>Sets the stub of IDigitalSingleChannelWriter.set_SynchronizeCallbacks(Boolean value)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.ToString">
            <summary>Sets the stub of IDigitalSingleChannelWriter.ToString()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteMultiSamplePortBooleanByteArray">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Byte[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteMultiSamplePortBooleanInt16Array">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int16[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteMultiSamplePortBooleanInt32Array">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, Int32[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteMultiSamplePortBooleanUInt16Array">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt16[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteMultiSamplePortBooleanUInt32Array">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteMultiSamplePort(Boolean autoStart, UInt32[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteSingleSampleMultiLineBooleanBooleanArray">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteSingleSampleMultiLine(Boolean autoStart, Boolean[] data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteSingleSamplePortBooleanByte">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Byte data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteSingleSamplePortBooleanInt16">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int16 data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteSingleSamplePortBooleanInt32">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, Int32 data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteSingleSamplePortBooleanUInt16">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt16 data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteSingleSamplePortBooleanUInt32">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteSingleSamplePort(Boolean autoStart, UInt32 data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteSingleSampleSingleLineBooleanBoolean">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteSingleSampleSingleLine(Boolean autoStart, Boolean data)</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIDigitalSingleChannelWriter.WriteWaveformBooleanDigitalWaveform">
            <summary>Sets the stub of IDigitalSingleChannelWriter.WriteWaveform(Boolean autoStart, DigitalWaveform data)</summary>
        </member>
        <member name="T:NationalInstruments.Restricted.Fakes.StubIIndexableSubobjectService">
            <summary>Stub type of NationalInstruments.Restricted.IIndexableSubobjectService</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIIndexableSubobjectService.#ctor">
            <summary>Initializes a new instance of type StubIIndexableSubobjectService</summary>
        </member>
        <member name="M:NationalInstruments.Restricted.Fakes.StubIIndexableSubobjectService.NationalInstruments#Restricted#IIndexableSubobjectService#TaskDisposed">
            <summary>Sets the Stub of IIndexableSubobjectService.TaskDisposed()</summary>
        </member>
        <member name="F:NationalInstruments.Restricted.Fakes.StubIIndexableSubobjectService.TaskDisposed">
            <summary>Sets the stub of IIndexableSubobjectService.TaskDisposed()</summary>
        </member>
    </members>
</doc>
